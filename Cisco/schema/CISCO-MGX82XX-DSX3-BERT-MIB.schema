## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-MGX82XX-DSX3-BERT-MIB
description "CISCO-MGX82XX-DSX3-BERT-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	dsx3bertControlE (
	   0	"noAction"
	   1	"acquireBert"
	   2	"releaseBert"
	   3	"cnfBert"
	   4	"startBert"
	   5	"modBert"
	   6	"delBert"
	)

	enum	dsx3bertResourceStatusE (
	   1	"free"
	   2	"inUse"
	)

	enum	dsx3bertStatusE (
	   1	"inactive"
	   2	"bertInSync"
	   3	"bertOutOfSync"
	   4	"farEndInLoop"
	   5	"metallicInLoop"
	   6	"bertFailed"
	)

	enum	dsx3bertTestMediumE (
	   1	"port"
	   2	"line"
	)

	enum	dsx3bertModeE (
	   1	"bertPatternTest"
	   2	"loopback"
	)

	enum	dsx3bertPatternE (
	   1	"allOnes"
	   2	"allZeros"
	   3	"alternateOneZero"
	   4	"doubleOneZero"
	   5	"threeInTwentyFour"
	   6	"oneInSixteen"
	   7	"oneInEight"
	   8	"oneInFour"
	   9	"sfLoopUp"
	   10	"sfLoopDown"
	   11	"threeBit"
	   12	"fourBit"
	   13	"fiveBit"
	   14	"sixBit"
	   15	"sevenBit"
	   16	"fracT1LoopUp"
	   17	"fracT1LoopDown"
	   18	"nineBit"
	   19	"tenBit"
	   20	"elevenBit"
	   21	"fifteenBit"
	   22	"seventeenBit"
	   23	"eighteenBit"
	   24	"twentyBit"
	   25	"twentyBitQRSS"
	   26	"twentyOneBit"
	   27	"twentyTwoBit"
	   28	"twentyThreeBit"
	   29	"twentyFiveBit"
	   30	"twentyEightBit"
	   31	"twentyNineBit"
	   32	"thirtyOneBit"
	   33	"thirtyTwo"
	)

	enum	dsx3bertLoopbackE (
	   1	"farEndLoopback"
	   2	"metallicLoopback"
	)

	enum	dsx3bertErrorInsertionRateE (
	   1	"errorInsertionDisabled"
	   2	"oneInTen"
	   3	"oneInTenPowerTwo"
	   4	"oneInTenPowerThree"
	   5	"oneInTenPowerFour"
	   6	"oneInTenPowerFive"
	   7	"oneInTenPowerSix"
	   8	"oneInTenPowerSeven"
	)

	enum	dsx3bertCleanupActionE (
	   1	"noAction"
	   2	"smCleanup"
	   3	"metallicLoopdown"
	)


## Group and Table Declarations

	group	dsx3bert
	description "(null)"
	characteristics "-K NONE"
	(
		readwrite enum dsx3bertControlE	dsx3bertControl
		description 	"This object controls all the SET operations on this MIB group. 
          noAction    :  No action is taken. This value can not be written
                         This object contains value noAction(0)
                         just after setting it to delBert(6).
          acquireBert :  Acquire BERT resources.
          cnfBert     :  Configure the required BERT test.
          startBert   :  The configured test has to be started.
          modBert     :  Modify parameters for the ongoing BERT test.
          delBert     :  Running BERT test has to be stopped.
                         This value is write-only. This value is 
                         never returned for a SNMP Get request.
        
          For Performing BERT : Following sequence need to be done.
             * acquire BERT by setting this object to acquireBert(1).
             * configure BERT by setting this object to cnfBert(3)
             * Start BERT by setting this object to startBert(4).
             * Modify BERT parameters by setting this object to modBert(5)."
		characteristics "-N dsx3bertControl -O 1.3.6.1.4.1.351.110.6.2.1 -T INTEGER -A RW -X equal -F 0"

		readonly enum dsx3bertResourceStatusE	dsx3bertResourceStatus
		description 	"All of bert resources can be used by only one user at a time.
        This object provides the status of the resources."
		characteristics "-N dsx3bertResourceStatus -O 1.3.6.1.4.1.351.110.6.2.2 -T INTEGER -A RO -X equal -F 0"

		readonly octet[255]	dsx3bertOwner
		description 	"This refers to the user who owns the BERT resources.
        If the user is a CLI user, then this is username.
        If it is SNMP Manager, then this would be the ASCII
        form of the IP address."
		characteristics "-N dsx3bertOwner -O 1.3.6.1.4.1.351.110.6.2.3 -T STRING -A RO -X equal -F 0"

		readwrite octet[255]	dsx3bertUserId
		description 	"This identifies the user who wants to do a SET operation
        on this group. This will be compared against bertOwner
        and access will be given only if it matches. Hence, for
        every SET request, this object should have a valid value.
        If the user is a CLI user, then this is login username.
        
        If it is SNMP Manager, then this would be the ASCII
        form of the IP address."
		characteristics "-N dsx3bertUserId -O 1.3.6.1.4.1.351.110.6.2.4 -T STRING -A RW -X equal -F 0"

		readonly enum dsx3bertStatusE	dsx3bertStatus
		description 	"This object provides the status of BERT in the shelf.
        
        The possible values are :
         inactive      (1)  : BERT not in progress
         bertInSync    (2)  : BERT is activated and receive side is
                              synchronized with the incoming sequence
                              of patterns.
         bertOutOfSync (3)  : BERT is activated and receive is out of
                              synchronization with the incoming sequence
                              of patterns.
         farEndInLoop  (4)  : Far End is in loop back.
         metallicInLoop(5)  : Local Loopback set.
         bertFailed    (6)  : BERT Failed.
        
        farEndInLoop(4) is not applicable for CESM-T3E3 
        and FRSM-2T3E3."
		characteristics "-N dsx3bertStatus -O 1.3.6.1.4.1.351.110.6.2.5 -T INTEGER -A RO -X equal -F 0"

		readwrite enum dsx3bertTestMediumE	dsx3bertTestMedium
		description 	"Specifies whether the BERT is to be tested on a port or an 
        entire T3/E3 line.
        For a BERT test, this object must be set.
        For CESM-T3E3 and FRSM-@T3E3, this object must be set
        to line(2)."
		characteristics "-N dsx3bertTestMedium -O 1.3.6.1.4.1.351.110.6.2.6 -T INTEGER -A RW -X equal -F 0"

		readwrite int	dsx3bertPort
		description 	"This object specifies the port number for BERT.
        Port level bert is not supported in CESM-T3E3 and 
        FRSM-2T3E3. So for these cards, the value must be always 1. "
		characteristics "-N dsx3bertPort -O 1.3.6.1.4.1.351.110.6.2.7 -T INTEGER -A RW -X equal -F 0"

		readwrite int	dsx3bertLine
		description 	"This object specifies the line number for BERT.
        If the dsx3bertTestMedium is set to port(1),
        this represents the line to which the port
        (dsx3bertPort) belongs.
        The value supported depends upon the type of
        card (service module)."
		characteristics "-N dsx3bertLine -O 1.3.6.1.4.1.351.110.6.2.8 -T INTEGER -A RW -X equal -F 0"

		readwrite enum dsx3bertModeE	dsx3bertMode
		description 	"This object specifies the mode, the BERT module is to be
        configured for.
        The value loopback(2) is not supported in CESM-T3E3 and FRSM-2T3E3 . "
		characteristics "-N dsx3bertMode -O 1.3.6.1.4.1.351.110.6.2.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum dsx3bertPatternE	dsx3bertPattern
		description 	"This variable determines BERT pattern to be transmitted
        on the interface identified by dsx3bertLine or dsx3bertPort.
        
        Bit error measurements are widely used to assess the 
        performance of a digital transmission equipment.  Precise 
        error measurement requires that the bit pattern transmitted 
        is known before hand.  During BER testing a known pattern is 
        transmitted on a interface.  The pattern received on the 
        receive side is checked for bit errors.  In order to measure 
        the performance of digital line under real condition 
        this patterns should also simulate real traffic as closely 
        as possible.  There are two categories of test patterns that 
        can be generated by a BERT equipment: repetitive and 
        pseudo-random.  The former test patterns are zeroes or ones 
        or alternating zeroes and ones; the latter patterns are 
        exponential numbers and conform to CCITT/ITU O.151, O.153.
        
        There are different patterns for different interface speeds.
        This object allows the user to configure this BERT patterns.
        
        The supported values are :
        
        Repetitive Patterns
        
        allOnes(1): All Ones(Continuous Marks).  This is repeating
        pattern of ones(...1111...).  This provides 
        testing of maximum power level requirements.
        The all one pattern test causes the repeater 
        to consume the maximum amount of power. 
        If there is insufficient DC span power then the
        repeater may begin to fail.
        Typically this pattern is used for a simple
        continuity check.  It may also be used to detect
        the presence of unwanted loop in the network.
        
        allZeros(2): All Zeroes(Continuous spaces).  This is 
        repeating pattern of zeros(...000...). 
        The use of this pattern is to test and verify 
        that the ones density policing mechanism is 
        functioning properly.  This pattern must be 
        used in circuits optioned for B8ZS.
        
        alternateOneZero(3): Alternate one/zero pattern(..1010..).
                This pattern produces a 50% ones density. It is
        used to stress the repeater's DC power
        consumption.
        
        doubleOneZero(4): Double alternate one/zero(..10101010..).
        
        threeInTwentyFour(5): This is a 24 bit pattern which 
                contains 3 ones. The largest string of consecutive 
                zeros is fifteen.
        This pattern is used primarily to test timing(clock)
        recovery and may be used framed or unframed for that
        purpose.  This pattern covers both the minimum ones
        density and the maximum number of consecutive zeros.
        
        oneInSixteen(6): N repetitive pattern, 1 in 16.
        
        oneInEight(7): This is an eight bit pattern which contains
        single one.
                This pattern is used primarily to test timing(clock)
        recovery and may be used framed or unframed for that
        purpose.
        This pattern is used to verify frame synchronization
        by providing the minimum acceptable pulse density.
        
        
        oneInFour(8): This pattern is standard loop up remote code.
        Typically it is used when the loop up remote test 
        fails to place the remote system into loopback.
        
        sfLoopUp  (9):  D4/SF Loopback activate/up
          Valid only for T1 line.
        sfLoopDown(10): D4/SF Loopback deactivate/down
          Valid only for T1 line.
        threeBit   (11): Repetitive patterns of 3 bits in length.
        fourBit    (12): Repetitive patterns of 4 bits in length.
        fiveBit    (13): Repetitive patterns of 5 bits in length.
        sixBit     (14): Repetitive patterns of 6 bits in length.
        sevenBit   (15): Repetitive patterns of 7 bits in length.
        fracT1LoopUp(16): Fractional T1 Loopback activate/up.
        fracT1LoopDown(17): Fractional T1 Loopback deactivate/down.
        
        nineBit      (18): Repetitive patterns of 9 bits in length.
        tenBit       (19): Repetitive patterns of 10 bits in length.
        elevenBit    (20): Repetitive patterns of 11 bits in length.
        fifteenBit   (21): Repetitive patterns of 15 bits in length.
        seventeenBit (22): Repetitive patterns of 17 bits in length.
        eighteenBit  (23): Repetitive patterns of 18 bits in length.
        twentyBit    (24): Repetitive patterns of 20 bits in length.
        twentyBitQRSS(25): 20 bits of Quasi Random Signal Source.
        twentyOneBit (26): Repetitive patterns of 21 bits in length.
        twentyTwoBit (27): Repetitive patterns of 22 bits in length.
        twentyThreeBit (28): Repetitive patterns of 23 bits in length.
        twentyFiveBit  (29): Repetitive patterns of 25 bits in length.
        twentyEightBit (30): Repetitive patterns of 28 bits in length.
        twentyNineBit  (31)"
		characteristics "-N dsx3bertPattern -O 1.3.6.1.4.1.351.110.6.2.10 -T INTEGER -A RW -X equal -F 0"

		readwrite enum dsx3bertLoopbackE	dsx3bertLoopback
		description 	"This object specifies the type of loopback to be 
        established/de-established.
        The value farEndLoopback(1) is not supported in 
        CESM-T3E3 and FRSM-2T3E3, where the default value for
        this object shall be 2."
		characteristics "-N dsx3bertLoopback -O 1.3.6.1.4.1.351.110.6.2.11 -T INTEGER -A RW -X equal -F 0"

		readonly octet[8]	dsx3bertStartTime
		description 	"This object contains the time at which
        BERT started. The syntax is hh:mm:ss.
        The time zone is as configured in the shelf.
        
        This object contains zero length string for following
        values of dsx3bertControl:
           noAction    (0),
           acquireBert (1),
           releaseBert (2),
           cnfBert     (3)."
		characteristics "-N dsx3bertStartTime -O 1.3.6.1.4.1.351.110.6.2.12 -T STRING -A RO -X equal -F 0"

		readonly octet[8]	dsx3bertStartDate
		description 	"This object contains the date on which
        BERT started. The syntax is yy/mm/dd.
        
        This object contains zero length string for following
        values of dsx3bertControl:
           noAction    (0),
           acquireBert (1),
           releaseBert (2),
           cnfBert     (3)."
		characteristics "-N dsx3bertStartDate -O 1.3.6.1.4.1.351.110.6.2.13 -T STRING -A RO -X equal -F 0"

		readonly int	dsx3bertBitCountUpper
		description 	"This number of bits transmitted is represented in an encoded
        form as a 64-bit counter. This object gives the upper 31 bits
        of the 64 bit counter. The 32nd bit is not available."
		characteristics "-N dsx3bertBitCountUpper -O 1.3.6.1.4.1.351.110.6.2.14 -T INTEGER -A RO -X equal -F 0"

		readonly int	dsx3bertBitCountLower
		description 	"This number of bits transmitted is represented in an encoded
        form as a 64-bit counter. This object gives the lower 31 bits
        of the 64 bit counter. The 32nd bit is not available."
		characteristics "-N dsx3bertBitCountLower -O 1.3.6.1.4.1.351.110.6.2.15 -T INTEGER -A RO -X equal -F 0"

		readonly int	dsx3bertBitErrorCountUpper
		description 	"This number of bits received in error is represented in 
        an encoded form as a 64-bit counter. This object gives the 
        upper 31 bits of the 64 bit counter. The 32nd bit is not
        available."
		characteristics "-N dsx3bertBitErrorCountUpper -O 1.3.6.1.4.1.351.110.6.2.16 -T INTEGER -A RO -X equal -F 0"

		readonly int	dsx3bertBitErrorCountLower
		description 	"This number of bits received in error is represented in 
        an encoded form as a 64-bit counter. This object gives the 
        lower 31 bits of the 64 bit counter. The 32nd bit is not 
        available."
		characteristics "-N dsx3bertBitErrorCountLower -O 1.3.6.1.4.1.351.110.6.2.17 -T INTEGER -A RO -X equal -F 0"

		readwrite enum dsx3bertErrorInsertionRateE	dsx3bertErrorInsertionRate
		description 	"This object is used for injecting continuous errors into 
        transmitted BERT pattern.  The errors are inserted in a BERT 
         pattern sent, in order to do sanity check on receive interface 
         in the event that no bit errors are detected.  Injecting errors 
         allows users to stress communication links and to check the 
        functionality of error monitoring equipment along the path.
         Once set to send continuous errors, errors will be inserted 
         at the configured rate until set to errorInsertionDisabled(1). 
        
         The possible values are :
        
        errorInsertionDisabled(1) : no bit errors are inserted.
        
        oneInTen(2) : insert bit errors at the rate of 1 bit
             error per 10 bits (10^-1) transmitted.
        
        oneInTenPowerTwo(3) : insert bit errors at the rate of 1 bit
                        error per 100 bits (10^-2) transmitted.
        
        oneInTenPowerThree(4): insert bit errors at the rate of 1 bit
                         error per 1000 bits (10^-3) transmitted.
        
        oneInTenPowerFour(5): insert bit errors at the rate of 1 bit
                 error per 10000 (10^-4) bits transmitted.
        
        oneInTenPowerFive(6): insert bit errors at the rate of 1 bit
                 error per 100000 bits (10^-5) transmitted.
        
        oneInTenPowerSix(7) : insert bit errors at the rate of 1 bit
                 error per 1000000 bits (10^-6) transmitted.
        
        oneInTenPowerSeven(8): insert bit errors at the rate of 1 bit
                  error per 10,000,000 (10^-7)bits transmitted. "
		characteristics "-N dsx3bertErrorInsertionRate -O 1.3.6.1.4.1.351.110.6.2.18 -T INTEGER -A RW -X equal -F 0"

		readonly int	dsx3bertErrorInjectCount
		description 	"This shows the number of times error was injected."
		characteristics "-N dsx3bertErrorInjectCount -O 1.3.6.1.4.1.351.110.6.2.19 -T INTEGER -A RO -X equal -F 0"

		readonly enum dsx3bertCleanupActionE	dsx3bertCleanupAction
		description 	"When the BERT has to be stopped or aborted (due to card state 
        changes), this object would give the exact action to take. 
        The bert related changes to  the card, then, can be cleaned up. 
        
        The value metallicLoopdown(3) is not applicable for 
        CESM-T3E3 and FRSM-2T3E3.
        
        When its value is metallicLoopdown(3), it implies 
        smCleanup plus the corresponding Loopdown."
		characteristics "-N dsx3bertCleanupAction -O 1.3.6.1.4.1.351.110.6.2.20 -T INTEGER -A RO -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
