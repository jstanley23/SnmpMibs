## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-WAN-SRM-BERT-MIB
description "CISCO-WAN-SRM-BERT-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	bertControlE (
	   1	"acquireBert"
	   2	"releaseBert"
	   3	"cnfBert"
	   4	"startBert"
	   5	"modBert"
	   6	"delBert"
	)

	enum	bertResourceStatusE (
	   1	"free"
	   2	"inUse"
	   3	"cleanupPending"
	)

	enum	bertStatusE (
	   1	"inactive"
	   2	"bertInSync"
	   3	"bertOutOfSync"
	   4	"searchingDDSCommands"
	   5	"farEndInLoop"
	   6	"facilityInLoop"
	   7	"portFacilityFifoFault"
	   8	"portFacilityFifoOutOfSync"
	   9	"metallicInLoop"
	   10	"bertFailed"
	)

	enum	bertTestMediumE (
	   1	"port"
	   2	"line"
	)

	enum	bertModeE (
	   1	"bertPatternTest"
	   2	"ddsSeek"
	   3	"loopback"
	)

	enum	bertDeviceToLoopE (
	   1	"noLatchOCUwith1"
	   2	"noLatchOCUwitout1"
	   3	"noLatchCSU"
	   4	"noLatchDSU"
	   5	"latchDS0Drop"
	   6	"latchDS0Line"
	   7	"latchOCU"
	   8	"latchCSU"
	   9	"latchDSU"
	   10	"latchHL96"
	   11	"v54Polynomial"
	   12	"inband"
	   13	"esf"
	   14	"metallic"
	   15	"noDevice"
	   16	"smartJackInband"
	)

	enum	bertPatternE (
	   1	"allZeros"
	   2	"allOnes"
	   3	"alternateONeZero"
	   4	"doubleOneZero"
	   5	"fifteenBit"
	   6	"twentyBit"
	   7	"twentyBitQRSS"
	   8	"twentythreeBit"
	   9	"oneInEight"
	   10	"threeIntwentyfour"
	   11	"dds-1"
	   12	"dds-2"
	   13	"dds-3"
	   14	"dds-4"
	   15	"dds-5"
	   16	"nineBit"
	   17	"elevenBit"
	)

	enum	bertLoopbackE (
	   1	"farEndLoopback"
	   2	"facilityLoopback"
	   3	"metallicLoopback"
	)

	enum	bertLoopbackOperationE (
	   1	"loopUp"
	   2	"loopDown"
	)

	enum	bertDS0SpeedE (
	   1	"speed56k"
	   2	"speed64k"
	)

	enum	bertCleanupActionE (
	   1	"noAction"
	   2	"smCleanup"
	   3	"latchDS0DropLoopdown"
	   4	"latchDS0LineLoopdown"
	   5	"latchOCULoopdown"
	   6	"latchCSULoopdown"
	   7	"latchDSULoopdown"
	   8	"latchHL96Loopdown"
	   9	"v54PolynomialLoopdown"
	   10	"inbandLoopdown"
	   11	"esfLoopdown"
	   12	"facilityLoopdown"
	   13	"metallicLoopdown"
	   14	"smartJackInbandLoopdown"
	)

	enum	bertAbortReasonE (
	   1	"ascStateChange"
	   2	"smStateChange"
	   3	"srmStateChange"
	   4	"coreCardSwitch"
	   5	"smRedundancySwitch"
	)

	enum	bertDDSCodeE (
	   30	"abnormalStationCondition"
	   10	"block"
	   40	"channelLoopback"
	   44	"dsuLoopback"
	   90	"farEndVoice"
	   126	"idle"
	   86	"loopbackEnable"
	   114	"mjuAlert"
	   26	"muxOutOfSync"
	   42	"ocuLoopback"
	   120	"release"
	   28	"test"
	   108	"testAlert"
	   58	"transitionInProgress"
	   24	"unassignedMuxChannel"
	   50	"unnamed"
	)

	enum	bertSupportFlagE (
	   1	"yes"
	   2	"no"
	)

	enum	bertCardT1E1TypeE (
	   1	"t1"
	   2	"e1"
	)


## Group and Table Declarations

	group	bert
	description "(null)"
	characteristics "-K NONE"
	(
		readwrite enum bertControlE	bertControl
		description 	"This object controls all the SET operations on this MIB group. 
         acquireBert :  Acquire BERT resources.
         cnfBert     :  Configure the required BERT test.
         startBert   :  The configured test has to be started.
         modBert     :  Modify parameters for the ongoing BERT test.
         delBert     :  Running BERT test has to be stopped.
         The above list shows the sequence in which the SET operations 
         on this group need to be done, ideally.
        Bert can be operated upon only with bertUserId and bertSlotNumber.
        The default value is 0, means no action."
		characteristics "-N bertControl -O 1.3.6.1.4.1.351.110.6.1.1 -T INTEGER -A RW -X equal -F 0"

		readonly enum bertResourceStatusE	bertResourceStatus
		description 	"All of bert resources can be used by only one user at a time.
         This gives the status of the resources."
		characteristics "-N bertResourceStatus -O 1.3.6.1.4.1.351.110.6.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly octet[255]	bertOwner
		description 	"This refers to the user who owns the BERT resources.
         If the user is a CLI user, then this is username.
         If it is SNMP Manager(For example Cisco Wan Manager),
         then this would be the IP address.
         For example, this value can be, 192.9.209.157 
         within quotes."
		characteristics "-N bertOwner -O 1.3.6.1.4.1.351.110.6.1.3 -T STRING -A RO -X equal -F 0"

		readwrite octet[255]	bertUserId
		description 	"This identifies the user who wants to do a SET operation
         on this group. This will be compared against bertOwner
         and access will be given only if it matches. Hence, for
         every SET request, this object should have a valid value.
         If the user is a CLI user, then this is username.
         If it is SNMP Manager, then this would be the IP address.
         For example, this value can be, 192.9.209.157 within quotes.
        Required for bert operations."
		characteristics "-N bertUserId -O 1.3.6.1.4.1.351.110.6.1.4 -T STRING -A RW -X equal -F 0"

		readonly enum bertStatusE	bertStatus
		description 	"This variable provides the status of BERT in the shelf."
		characteristics "-N bertStatus -O 1.3.6.1.4.1.351.110.6.1.5 -T INTEGER -A RO -X equal -F 0"

		readwrite int	bertSlotNumber
		description 	"specifies the physical slot number of the Service Module 
         which is to run BERT 
        For MGX 8220, the range is 5-14.
        For MGX 8850, the range is 1-6, 9-14, 17-22, 25-30.
        Required for bert operations."
		characteristics "-N bertSlotNumber -O 1.3.6.1.4.1.351.110.6.1.6 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertTestMediumE	bertTestMedium
		description 	"specifies whether the bert is to test a port or an 
         entire T1/E1 line.
        No default value for this, it has to be set if 
         bert is configured."
		characteristics "-N bertTestMedium -O 1.3.6.1.4.1.351.110.6.1.7 -T INTEGER -A RW -X equal -F 0"

		readwrite int	bertPort
		description 	"specifies the port number for BERT."
		characteristics "-N bertPort -O 1.3.6.1.4.1.351.110.6.1.8 -T INTEGER -A RW -X equal -F 0"

		readwrite int	bertLine
		description 	"specifies the line number for BERT. If the test medium
         is port, this represents the line to which the
         port belongs."
		characteristics "-N bertLine -O 1.3.6.1.4.1.351.110.6.1.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertModeE	bertMode
		description 	"specifies the mode, the BERT module is to be 
         configured for."
		characteristics "-N bertMode -O 1.3.6.1.4.1.351.110.6.1.10 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertDeviceToLoopE	bertDeviceToLoop
		description 	"This shows the type of the end device and the type of the 
         loopback used (latching/nonlatching/polynomial)."
		characteristics "-N bertDeviceToLoop -O 1.3.6.1.4.1.351.110.6.1.11 -T INTEGER -A RW -X equal -F 0"

		readwrite int	bertDS0DPIterationCount
		description 	"The Iteration Register needs to be programmed in SRM when
         DSO drop loop option is selected in bertDeviceToLoop. The
         value to be programmed there is minus one of this object value, 
         since the register is 0 based.  DSP-OP devices can be cross 
         connected in the centeral office. By this, the user has 
         capablitiy to put any of the devices in the chain in loopback 
         mode.  This is done by repeating the latching activation 
         code in a specific manner.  The binary number in the 
         iterataion register determines how many times the first portion 
         of a latching loop activation code needs to be repeated as per 
         user request and according to the Bellcore spec.  A value of 0 
         results in no iteration and will cause the very first device in 
         chain to go into loop back.  A value of 1 will result into one 
         iteration and will cause the second device to go into loopback 
         and so on. The range of this count is 1 to 32, and it would 
         translate to a range of 0 to 31 for the iteration 
         register."
		characteristics "-N bertDS0DPIterationCount -O 1.3.6.1.4.1.351.110.6.1.12 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertPatternE	bertPattern
		description 	"This variable determines BERT pattern to
         be transmitted."
		characteristics "-N bertPattern -O 1.3.6.1.4.1.351.110.6.1.13 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertLoopbackE	bertLoopback
		description 	"specifies the type of loopback to be (d)established."
		characteristics "-N bertLoopback -O 1.3.6.1.4.1.351.110.6.1.14 -T INTEGER -A RW -X equal -F 0"

		readwrite enum bertLoopbackOperationE	bertLoopbackOperation
		description 	"specifies the operation of loopback (up or down)."
		characteristics "-N bertLoopbackOperation -O 1.3.6.1.4.1.351.110.6.1.15 -T INTEGER -A RW -X equal -F 0"

		readonly enum bertDS0SpeedE	bertDS0Speed
		description 	"represents the ds0 speed of the test running."
		characteristics "-N bertDS0Speed -O 1.3.6.1.4.1.351.110.6.1.16 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertTimeSlots
		description 	"represents the number of ds0s in the test medium chosen."
		characteristics "-N bertTimeSlots -O 1.3.6.1.4.1.351.110.6.1.17 -T INTEGER -A RO -X equal -F 0"

		readonly octet[8]	bertStartTime
		description 	"The syntax is hh:mm:ss
         The time zone is as configured in the shelf."
		characteristics "-N bertStartTime -O 1.3.6.1.4.1.351.110.6.1.18 -T STRING -A RO -X equal -F 0"

		readonly octet[10]	bertStartDate
		description 	"On MGX 8220, the syntax is mm/dd/yy
         On MGX 8850, the syntax is mm/dd/yyyy."
		characteristics "-N bertStartDate -O 1.3.6.1.4.1.351.110.6.1.19 -T STRING -A RO -X equal -F 0"

		readonly int	bertBitCount
		description 	"This shows the number of bits transmitted."
		characteristics "-N bertBitCount -O 1.3.6.1.4.1.351.110.6.1.20 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertBitErrorCount
		description 	"This shows the number of bits received in error."
		characteristics "-N bertBitErrorCount -O 1.3.6.1.4.1.351.110.6.1.21 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertErrorInjectCount
		description 	"This shows the number of times error was injected."
		characteristics "-N bertErrorInjectCount -O 1.3.6.1.4.1.351.110.6.1.22 -T INTEGER -A RO -X equal -F 0"

		readonly enum bertCleanupActionE	bertCleanupAction
		description 	"When the BERT has to be stopped or aborted (due to card state 
         changes), this object would give the exact action to take. 
         The bert related changes to  the shelf, then, can be cleaned up. 
         When its value is a Loopdown, it implies smCleanup plus the 
         corresponding Loopdown."
		characteristics "-N bertCleanupAction -O 1.3.6.1.4.1.351.110.6.1.23 -T INTEGER -A RO -X equal -F 0"

		readonly enum bertAbortReasonE	bertAbortReason
		description 	"when the BERT is aborted, this object would give the 
         reason for that."
		characteristics "-N bertAbortReason -O 1.3.6.1.4.1.351.110.6.1.24 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertDDSSeekResultsTableFirstIndex
		description 	"Denotes the index of the oldest entry in the table.
        A value of zero means that there are no entries in 
        the table."
		characteristics "-N bertDDSSeekResultsTableFirstIndex -O 1.3.6.1.4.1.351.110.6.1.25 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertDDSSeekResultsTableLastIndex
		description 	"Denotes the index of the latest entry in the table.
        A value of zero means that there are no entries in 
        the table."
		characteristics "-N bertDDSSeekResultsTableLastIndex -O 1.3.6.1.4.1.351.110.6.1.26 -T INTEGER -A RO -X equal -F 0"

	)

	table	bertDDSSeekResultsTable
	description "This table contains all available DDS patterns detected
        and latched by an interaface(lines,ports etc) configured
        to detect DDS patterns."
	characteristics "-K ONE"
	(
		readonly int	bertDDSSeekResultsTableIndex
		description 	"Denotes the serial number of the entry in the table."
		characteristics "-N bertDDSSeekResultsTableIndex -O 1.3.6.1.4.1.351.110.6.1.27.1.1 -T INTEGER -A RO -X equal -F 0"

		readonly enum bertDDSCodeE	bertDDSCode
		description 	"Denotes the type of DDS code detected."
		characteristics "-N bertDDSCode -O 1.3.6.1.4.1.351.110.6.1.27.1.2 -T INTEGER -A RO -X equal -F 0"

	)

	table	bertSupportedTestsTable
	description "A list of supported tests for a given SM."
	characteristics "-K ONE"
	(
		readonly int	bertSupportedTestsTableIndex
		description 	"This index is the physical slot number of the Service 
         Module whose entry it represents in the table.
        For MGX 8220, the range is 5-14.
        For MGX 8850, the range is 1-6, 9-14, 17-22, 25-30."
		characteristics "-N bertSupportedTestsTableIndex -O 1.3.6.1.4.1.351.110.6.1.28.1.1 -T INTEGER -A RO -X equal -F 0"

		readonly enum bertSupportFlagE	bertSupportFlag
		description 	"'yes' if the table entry correctly represents the supported
         tests for the SM on the corresponding slot. 'no' if no tests
         at all are supported."
		characteristics "-N bertSupportFlag -O 1.3.6.1.4.1.351.110.6.1.28.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertTestMediumMask
		description 	"Every test medium is represented by a bit of mask. Bits 0-1 are
         valid in this integer. The meaning of the mask can be 
         understood from the example below:
        
            --------------------------
             TestMedium  |   SM        
                         | support
            --------------------------
               port      |    1
               line      |    1
            --------------------------
            (Table contents applicable to FRSM-4T1)
            bertTestMediumMask = 11 binary
        
         The column titles represent the variables bertTestMedium  
         depends on. The mask is represented in column
         major order."
		characteristics "-N bertTestMediumMask -O 1.3.6.1.4.1.351.110.6.1.28.1.3 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertModeMask
		description 	"Every mode is represented by 2 bits of mask. Bits 0-5 are
         valid in this integer. The meaning of the mask can be 
         understood from the example below:
           -----------------------------------------------------------
            Mode        |  SM support     | Test Medium:
                        |                 |  Multiple
                        |                 | T1 time slots
           -----------------------------------------------------------
           Pattern test |       1         |      1
           DDS seek     |       1         |      0
           Loopback     |       1         |      1
           -----------------------------------------------------------
           (Table contents applicable to FRSM-4T1)
           bertModeMask = 101111 binary
            
         The column titles represent the variables bertMode depends on.
         The mask is represented in column major order."
		characteristics "-N bertModeMask -O 1.3.6.1.4.1.351.110.6.1.28.1.4 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertDeviceToLoopMask
		description 	"Every class of devices to loop is represented by 6 bits 
         of mask. Bits 0-29 are valid in this integer. The meaning 
         of the mask can be understood from the example below:
        
            -----------------------------------------------------------
                      |     |         |       Test Medium
            Class of  | SM  |   MODE  |________________________________
            devices   |supp | Loopback|Line |multiple T1 | 64k |  56k
                      |     |         |     | time slots |     |
            -----------------------------------------------------------
            noLatch   |  1        0      0        0         0      1
            latch     |  1        1      0        0         1      1
            v54       |  1        1      0        1         1      1
            inband/esf|  1        1      1        0         0      0
            metallic  |  1        0      1        0         0      0
            -----------------------------------------------------------
            (Table contents applicable to FRSM-4T1)
            bertDeviceToLoopMask = 001110011000100110000111011111 binary
        
         The column titles represent the variables bertDeviceToLoop  
         depends on. The mask is represented in column major order.
         Due to the limitation on the length of the mask, 'noDevice'
         option is not represented in this mask. But, the mask for 
         it, is assumed to be a row of ones except for a zero on 
         'MODE Loopback' column."
		characteristics "-N bertDeviceToLoopMask -O 1.3.6.1.4.1.351.110.6.1.28.1.5 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertPatternMask
		description 	"Every class of patterns is represented by 2 bits of mask. 
         Bits 0-3 are valid in this integer. The meaning of the 
         mask can be understood from the example below:
        
           ----------------------------------------------
              Class of       |   SM      | Non latching
              patterns       | support   |device to loop
           ----------------------------------------------
             Other patterns  |    1      |    0
           ----------------------------------------------
                Patterns     |    1      |    1
             power 9 and 11  |           |
           ----------------------------------------------
           (Table contents applicable to FRSM-4T1)
           bertPatternMask = 1011 binary
        
         The column titles represent the variables bertPattern  
         depends on. The mask is represented in column 
         major order."
		characteristics "-N bertPatternMask -O 1.3.6.1.4.1.351.110.6.1.28.1.6 -T INTEGER -A RO -X equal -F 0"

		readonly int	bertLoopbackMask
		description 	"Every loopback is represented by 2 bits of mask. Bits 0-5 are
         valid in this integer. The meaning of the mask can be 
         understood from the example below:
            ----------------------------------------------
                 Loopback     |   SM       |  Test Medium
                              | support    |     Port
            ----------------------------------------------
            Far End Loopback  |     1      |    1
            Facility Loopback |     1      |    1
            Metallic Loopback |     1      |    0
            ----------------------------------------------
            (Table contents applicable to FRSM-4T1)
            bertLoopbackMask = 011111 binary
        
         The column titles represent the variables bertLoopback  
         depends on. The mask is represented in column 
         major order."
		characteristics "-N bertLoopbackMask -O 1.3.6.1.4.1.351.110.6.1.28.1.7 -T INTEGER -A RO -X equal -F 0"

		readonly enum bertCardT1E1TypeE	bertCardT1E1Type
		description 	"Specifies whether a t1 or e1 card."
		characteristics "-N bertCardT1E1Type -O 1.3.6.1.4.1.351.110.6.1.28.1.8 -T INTEGER -A RO -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
