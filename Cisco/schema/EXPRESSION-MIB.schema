## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy EXPRESSION-MIB
description "EXPRESSION-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	expNameStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	expExpressionValueTypeE (
	   1	"counter32"
	   4	"integer32"
	   5	"ipAddress"
	   6	"octetString"
	   7	"objectId"
	   8	"counter64"
	)

	enum	expExpressionErrorE (
	   1	"invalidSyntax"
	   2	"undefinedObjectIndex"
	   3	"unrecognizedOperator"
	   4	"unrecognizedFunction"
	   5	"invalidOperandType"
	   6	"unmatchedParenthesis"
	   7	"tooManyWildcardValues"
	   8	"recursion"
	   9	"deltaTooShort"
	   10	"resourceUnavailable"
	   11	"divideByZero"
	)

	enum	expObjectIDWildcardE (
	   1	"true"
	   2	"false"
	)

	enum	expObjectSampleTypeE (
	   1	"absoluteValue"
	   2	"deltaValue"
	)

	enum	expObjectDiscontinuityIDWildcardE (
	   1	"true"
	   2	"false"
	)

	enum	expObjectDiscontinuityIDTypeE (
	   2	"timeStamp"
	)

	enum	expObjectConditionalWildcardE (
	   1	"true"
	   2	"false"
	)

	enum	expObjectStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)


## Group and Table Declarations

	group	expResource
	description "(null)"
	characteristics "-K NONE"
	(
		readwrite int	expResourceDeltaMinimum
		description 	"The minimum expExpressionDeltaInterval this system will
        accept.  A system may use the larger values of this minimum
        to lessen the impact of constantly computing deltas.
        
        The value -1 indicates this system will not accept
        deltaValue as a value for expObjectSampleType.
        
        Unless explicitly resource limited, a system's value for
        this object should be 1.
        
        Changing this value will not invalidate an existing setting
        of expObjectSampleType."
		characteristics "-N expResourceDeltaMinimum -O 1.3.6.1.4.1.9.10.22.1.1.1 -T INTEGER -A RW -X equal -F 0"

		readwrite gauge	expResourceDeltaWildcardInstanceMaximum
		description 	"The maximum number of dynamic instance entries this system
        will support for wildcarded delta objects in expressions.
        These are the entries that maintain state, one for each
        instance of each deltaValue object for each value of an
        expression.
        
        A value of 0 indicates no preset limit, that is, the limit
        is dynamic based on system operation and resources.
        
        Unless explicitly resource limited, a system's value for
        this object should be 0.
        
        Changing this value will not eliminate or inhibit existing
        delta wildcard instance objects but will prevent the
        creation of more such objects."
		characteristics "-N expResourceDeltaWildcardInstanceMaximum -O 1.3.6.1.4.1.9.10.22.1.1.2 -T GAUGE -A RW -X equal -F 0"

		readonly gauge	expResourceDeltaWildcardInstances
		description 	"The number of currently active instance entries as
        defined for expResourceDeltaWildcardInstanceMaximum."
		characteristics "-N expResourceDeltaWildcardInstances -O 1.3.6.1.4.1.9.10.22.1.1.3 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	expResourceDeltaWildcardInstancesHigh
		description 	"The highest value of expResourceDeltaWildcardInstances
        that has occurred since initialization of the management
        system."
		characteristics "-N expResourceDeltaWildcardInstancesHigh -O 1.3.6.1.4.1.9.10.22.1.1.4 -T GAUGE -A RO -X equal -F 0"

		readonly counter	expResourceDeltaWildcardInstanceResourceLacks
		description 	"The number of times this system could not evaluate an
         expression because that would have created a value
         instance in excess of
         expResourceDeltaWildcardInstanceMaximum."
		characteristics "-N expResourceDeltaWildcardInstanceResourceLacks -O 1.3.6.1.4.1.9.10.22.1.1.5 -T COUNTER -A RO -X equal -F 0"

	)

	group	expNames
	description "(null)"
	characteristics "-K NONE"
	(
		readonly timeticks	expNameLastChange
		description 	"The value of sysUpTime the last time an expression was
        created or deleted or had its name changed using
        expExpressionName."
		characteristics "-N expNameLastChange -O 1.3.6.1.4.1.9.10.22.1.2.1 -T TIMETICKS -A RO -X equal -F 0"

		readonly gauge	expNameHighestIndex
		description 	"The highest value of ExpressionIndex ever assigned on
        this system.  Preferrably this value is preserved across
        system reboots.  A managed system that is unable to
        store expressions across reboots need not preserve this
        value across reboots.
        
        If all expression-creating applications cooperate, they
        may use this to avoid reusing an ExpressionIndex.  To
        do so, attempt creation of a new entry with this
        value + 1 as the value of expExpressionIndex.
        
        Although reusing ExpressionIndexes could lead to an
        application receiving a misunderstood value, it is a
        matter of local management policy whether to reuse them."
		characteristics "-N expNameHighestIndex -O 1.3.6.1.4.1.9.10.22.1.2.2 -T GAUGE -A RO -X equal -F 0"

	)

	table	expNameTable
	description "A table of expression names, for creating and deleting
        expressions."
	characteristics "-K ???"
	(
		notaccessible octet[64]	expName
		description 	"The name of the expression.  Choosing names with useful
        lexical ordering supports using GetNext or GetBulk to
        retrieve a useful subset of the table."
		characteristics "-N expName -O 1.3.6.1.4.1.9.10.22.1.2.3.1.1 -T STRING -A NA -X equal -F 0"

		readwrite gauge	expExpressionIndex
		description 	"The numeric identification of the expression.
        
        Applications may select this number in ascending numerical
        order by using expNameHighestIndex as a hint or may use any
        other acceptable, unused number.
        
        Once set this value may not be set to a different value."
		characteristics "-N expExpressionIndex -O 1.3.6.1.4.1.9.10.22.1.2.3.1.2 -T GAUGE -A RW -X equal -F 0"

		readwrite enum expNameStatusE	expNameStatus
		description 	"The control that allows creation/deletion of entries."
		characteristics "-N expNameStatus -O 1.3.6.1.4.1.9.10.22.1.2.3.1.3 -T INTEGER -A RW -X equal -F 0"

	)

	table	expExpressionTable
	description "A table of expression definitions."
	characteristics "-K ???"
	(
		readwrite octet[64]	expExpressionName
		description 	"The unique name of the expression, the same as expName.
        
        Use this object to change the expression's name without
        changing its expExpressionIndex."
		characteristics "-N expExpressionName -O 1.3.6.1.4.1.9.10.22.1.3.1.1.1 -T STRING -A RW -X equal -F 0"

		readwrite octet[1024]	expExpression
		description 	"The expression to be evaluated.  This object is the same
        as a DisplayString (RFC 1903) except for its maximum length.
        
        Except for the variable names the expression is in ANSI C
        syntax.  Only the subset of ANSI C operators and functions
        listed here is allowed.
        
        Variables are expressed as a dollar sign ('$') and an
        integer that corresponds to an expObjectIndex.  An
        example of a valid expression is:
        
                ($1-$5)*100
        
        Expressions may not be recursive, that is although an
        expression may use the results of another expression, it
        may not contain any variable that is directly or
        indirectly a result of its own evaluation.
        
        The only allowed operators are:
        
                ( )
                - (unary)
                + - * / %
                & | ^ << >> ~
                ! && || == != > >= < <=
        
        Note the parentheses are included for parenthesizing the
        expression, not for casting data types.
        
        The only constant types defined are:
        
                int (32-bit signed)
                long (64-bit signed)
                unsigned int
                unsigned long
                hexadecimal
                character
                string
                oid
        
        The default type for a positive integer is int unless it
        is too large in which case it is long.
        
        All but oid are as defined for ANSI C.  Note that a
        hexadecimal constant may end up as a scalar or an array of
        8-bit integers.  A string constant is enclosed in double
        quotes and may contain back-slashed individual characters
        as in ANSI C.
        
        An oid constant comprises 32-bit, unsigned integers and at
        least one period, for example:
        
                0.
                .0
                1.3.6.1
        
        Integer-typed objects are treated as 32- or 64-bit, signed
        or unsigned integers, as appropriate.  The results of
        mixing them are as for ANSI C, including the type of the
        result.  Note that a 32-bit value is thus promoted to 64
        bits only in an operation with a 64-bit value.  There is
        no provision for larger values to handle overflow.
        
        Relative to SNMP data types, a resulting value becomes
        unsigned when calculating it uses any unsigned value,
        including a counter.  To force the final value to be of
        data type counter the expression must explicitly use the
        counter32() or counter64() function (defined below).
        
        OCTET STRINGS and OBJECT IDENTIFIERs are treated as 1-based
        arrays of unsigned 8-bit integers and unsigned 32-bit
        integers, respectively.
        
        IpAddresses are treated as 32-bit, unsigned integers in
        network byte order, that is, the hex version of 255.0.0.0 is
        0xff000000.
        
        Conditional expressions result in a 32-bit, unsigned integer
        of value 0 for false or 1 for true. When an arbitrary value
        is used as a boolean 0 is false and non-zero is true.
        
        Rules for the resulting data type from an operation, based
        on the operator:
        
        For << and >> the result is the same as the left hand
        operand.
        
        For &&, ||, ==, !=, <, <=, >, and >= the result is always
        Unsigned32.
        
        For unary - the result is always Integer32.
        
        For +, -, *, /, %, &, |, and ^ the result is promoted
        according to the following rules, in order from most to
        least preferred:
        
                If left hand and right hand operands are the same
                type, use that.
        
                If either side is Counter64, use that.
        
                If either side is IpAddress, use that.
        
                If either side is TimeTicks, use that.
        
                If either side is Counter32, use that.
        
                Otherwise use Unsigned32.
        
        The following rules say what operators apply with what
        data types.  Any combination not explicitly defined does
        not work.
        
        For all operators any of the following can be the left
        hand or right hand operand: Integer32, Counter32,
        Unsigned32, Counter64.
        
        The operators +, -, *, /, %, <, <=, >, and >= also work with
        TimeTicks.
        
        The operators &, |, and ^ also work with IpAddress.
        
        The operators << and >> also work with IpAddress but only
        as the left hand operand.
        
        The + operator performs a concatenation of two OCTET STRINGs
        or two OBJECT IDENTIFIERs.
        
        The operators &, | perform bitwise operations on
        OCTET STRINGs.  If the OCTET STRING happens to be a
        DisplayString the resul"
		characteristics "-N expExpression -O 1.3.6.1.4.1.9.10.22.1.3.1.1.2 -T STRING -A RW -X equal -F 0"

		readwrite enum expExpressionValueTypeE	expExpressionValueType
		description 	"The type of the expression value.  One and only one of
        the value objects in expValueTable will be instantiated to
        match this type.
        
        If the result of the expression can not be made into this
        type, an invalidOperandType error will occur."
		characteristics "-N expExpressionValueType -O 1.3.6.1.4.1.9.10.22.1.3.1.1.3 -T INTEGER -A RW -X equal -F 0"

		readwrite octet[255]	expExpressionComment
		description 	"A comment to explain the use or meaning of the expression."
		characteristics "-N expExpressionComment -O 1.3.6.1.4.1.9.10.22.1.3.1.1.4 -T STRING -A RW -X equal -F 0"

		readwrite int	expExpressionDeltaInterval
		description 	"Sampling interval for objects in this expression with
        expObjectSampleType 'deltaValue'.
        
        This object is not instantiated if not applicable.
        
        A value of 0 indicates no automated sampling.  In this case
        the delta is the difference from the last time the
        expression was evaluated.  Note that this is subject to
        unpredictable delta times in the face of retries or
        multiple managers.
        
        A value greater than zero is the number of seconds between
        automated samples.
        
        Until the delta interval has expired once the delta for the
        object is effectively not instantiated and evaluating
        the expression has results as if the object itself were not
        instantiated.
        
        Note that delta values potentially consume large amounts of
        system CPU and memory.  Delta state and processing must
        continue constantly even if the expression is not being
        used.  That is, the expression is being evaluated every
        delta interval, even if no application is reading those
        values.  For wildcarded objects this can be substantial
        overhead.
        
        Note that delta intervals, external expression value
        sampling intervals and delta intervals for expressions
        within other expressions can have unusual interactions as
        they are impossible to synchronize accurately.  In general
        one interval embedded below another must be enough shorter
        that the higher sample sees relatively smooth, predictable
        behavior."
		characteristics "-N expExpressionDeltaInterval -O 1.3.6.1.4.1.9.10.22.1.3.1.1.5 -T INTEGER -A RW -X equal -F 0"

		readonly objectid	expExpressionPrefix
		description 	"An object prefix to assist an application in determining
        the instance indexing to use in expValueTable, relieving the
        application of the need to scan the expObjectTable to
        determine such a prefix.
        
        See expObjectTable for information on wildcarded objects.
        
        If the expValueInstance portion of the value OID may
        be treated as a scalar (that is, normally, 0) the value of
        expExpressionPrefix is zero length, that is, no OID at all.
        
        Otherwise expExpressionPrefix is the value of any wildcarded
        instance of expObjectID for the expression.  This is
        sufficient as the remainder, that is, the instance fragment
        relevant to instancing the values must be the same for all
        wildcarded objects in the expression."
		characteristics "-N expExpressionPrefix -O 1.3.6.1.4.1.9.10.22.1.3.1.1.6 -T OBJECTID -A RO -X equal -F 0"

		readonly counter	expExpressionErrors
		description 	"The number of errors encountered while evaluating this
        expression.
        
        Note that an object in the expression not being accessible
        is not considered an error.  It is a legitimate condition
        that causes the corresponding expression value not to be
        instantiated."
		characteristics "-N expExpressionErrors -O 1.3.6.1.4.1.9.10.22.1.3.1.1.7 -T COUNTER -A RO -X equal -F 0"

		readonly timeticks	expExpressionErrorTime
		description 	"The value of sysUpTime the last time an error caused a
        failure to evaluate this expression.
        
        This object is not instantiated if there have been no
        errors."
		characteristics "-N expExpressionErrorTime -O 1.3.6.1.4.1.9.10.22.1.3.1.1.8 -T TIMETICKS -A RO -X equal -F 0"

		readonly int	expExpressionErrorIndex
		description 	"The 1-based character index into expExpression for where
        the error occurred.  The value zero indicates irrelevance.
        
        This object is not instantiated if there have been no
        errors."
		characteristics "-N expExpressionErrorIndex -O 1.3.6.1.4.1.9.10.22.1.3.1.1.9 -T INTEGER -A RO -X equal -F 0"

		readonly enum expExpressionErrorE	expExpressionError
		description 	"The error that occurred.  In the following explanations the
        expected timing of the error is in parentheses.  'S' means
        the error occurs on a Set request.  'E' means the error
        occurs on the attempt to evaluate the expression either
        due to Get from expValueTable or in ongoing delta
        processing.
        
        invalidSyntax           the value sent for expExpression
                                is not valid Expression MIB
                                expression syntax (S)
        undefinedObjectIndex    an object reference ($n) in
                                expExpression does not have a
                                matching instance in
                                expObjectTable (E)
        unrecognizedOperator    the value sent for expExpression
                                held an unrecognized operator (S)
        unrecognizedFunction    the value sent for expExpression
                                held an unrecognized function
                                name (S)
        invalidOperandType      an operand in expExpression is not
                                the right type for the associated
                                operator or result (SE)
        unmatchedParenthesis    the value sent for expExpression
                                is not correctly parenthesized (S)
        tooManyWildcardValues   evaluating the expression exceeded
                                the limit set by expResourceDelta
                                WildcardInstanceMaximum (E)
        recursion               through some chain of embedded
                                expressions the expression invokes
                                itself (E)
        deltaTooShort           the delta for the next evaluation
                                passed before the system could
                                evaluate the present sample (E)
        resourceUnavailable     some resource, typically dynamic
                                memory, was unavailable (SE)
        divideByZero            an attempt to divide by zero
                                occurred (E)
        
        For the errors that occur when the attempt is made to set
        expExpression Set request fails with the SNMP error code
        'wrongValue'. Such failures refer to the most recent failure
        to Set expExpression, not to the present value of
        expExpression which must be either unset or syntactically
        correct.
        
        Errors that occur during evalutaion for a Get* operation
        return the SNMP error code 'genErr' except for
        'tooManyWildcardValues' and 'resourceUnavailable' which
        return the SNMP error code 'resourceUnavailable'.
        
        This object is not instantiated if there have been no
        errors."
		characteristics "-N expExpressionError -O 1.3.6.1.4.1.9.10.22.1.3.1.1.10 -T INTEGER -A RO -X equal -F 0"

		readonly objectid	expExpressionInstance
		description 	"The expValueInstance being evaluated when the error
        occurred.  A zero-length indicates irrelevance.
        
        This object is not instantiated if there have been no
        errors."
		characteristics "-N expExpressionInstance -O 1.3.6.1.4.1.9.10.22.1.3.1.1.11 -T OBJECTID -A RO -X equal -F 0"

		readwrite octet[255]	expExpressionOwner
		description 	"The entity that configured this entry and is therefore
        using the resources assigned to it."
		characteristics "-N expExpressionOwner -O 1.3.6.1.4.1.9.10.22.1.3.1.1.12 -T STRING -A RW -X equal -F 0"

	)

	table	expObjectTable
	description "A table of object definitions for each expExpression.
        
        Wildcarding instance IDs:
        
        It is legal to omit all or part of the instance portion for
        some or all of the objects in an expression. (See the
        DESCRIPTION of expObjectID for details.  However, note that
        if more than one object in the same expression is wildcarded
        in this way, they all must be objects where that portion of
        the instance is the same.  In other words, all objects may
        be in the same SEQUENCE or in different SEQUENCEs but with
        the same semantic index value (e.g., a value of ifIndex)
        for the wildcarded portion."
	characteristics "-K ONE"
	(
		notaccessible gauge	expObjectIndex
		description 	"Within an expression, a unique, numeric identification
        for an object.  Prefixed with a dollar sign ('$') this is
        used to reference the object in the corresponding
        expExpression."
		characteristics "-N expObjectIndex -O 1.3.6.1.4.1.9.10.22.1.3.2.1.1 -T GAUGE -A NA -X equal -F 0"

		readwrite objectid	expObjectID
		description 	"The OBJECT IDENTIFIER (OID) of this object.  The OID may be
        fully qualified, meaning it includes a complete instance
        identifier part (e.g., ifInOctets.1 or sysUpTime.0), or it
        may not be fully qualified, meaning it may lack all or part
        of the instance identifier.  If the expObjectID is not fully
        qualified, then expObjectWildcard must be set to true(1).  
        The value of the expression will be multiple
        values, as if done for a GetNext sweep of the object.
        
        An object here may itself be the result of an expression but
        recursion is not allowed.
        
        NOTE:  The simplest implementations of this MIB may not
        allow wildcards."
		characteristics "-N expObjectID -O 1.3.6.1.4.1.9.10.22.1.3.2.1.2 -T OBJECTID -A RW -X equal -F 0"

		readwrite enum expObjectIDWildcardE	expObjectIDWildcard
		description 	"A true value indicates the expObjecID of this row is a
        wildcard object. False indicates that expObjectID is fully
        instanced.  If all expObjectWildcard values for a given
        expression are FALSE, expExpressionPrefix will reflect a
        scalar object (ie will be 0.0).
        
        NOTE:  The simplest implementations of this MIB may not
        allow wildcards."
		characteristics "-N expObjectIDWildcard -O 1.3.6.1.4.1.9.10.22.1.3.2.1.3 -T INTEGER -A RW -X equal -F 0"

		readwrite enum expObjectSampleTypeE	expObjectSampleType
		description 	"The method of sampling the selected variable.
        
        An 'absoluteValue' is simply the present value of the
        object.
        A 'deltaValue' is the present value minus the previous
        value, which was sampled expExpressionDeltaInterval
        seconds ago.  This is intended primarily for use with
        SNMP counters, which are meaningless as an 'absoluteValue',
        but may be used with any integer-based value.
        
        When an expression contains both delta and absolute values
        the absolute values are obtained at the end of the delta
        period."
		characteristics "-N expObjectSampleType -O 1.3.6.1.4.1.9.10.22.1.3.2.1.4 -T INTEGER -A RW -X equal -F 0"

		readwrite objectid	expObjectDeltaDiscontinuityID
		description 	"The OBJECT IDENTIFIER (OID) of a TimeTicks or TimeStamp
        object that indicates a discontinuity in the value at
        expObjectID.
        
        This object is not instantiated if expObject is not
        'deltaValue'.
        
        The OID may be for a leaf object (e.g. sysUpTime.0) or may
        be wildcarded to match expObjectID.
        
        This object supports normal checking for a discontinuity
        in a counter.  Note that if this object does not point to
        sysUpTime discontinuity checking must still check sysUpTime
        for an overall discontinuity.
        
        If the object identified is not accessible no discontinuity
        check will be made."
		characteristics "-N expObjectDeltaDiscontinuityID -O 1.3.6.1.4.1.9.10.22.1.3.2.1.5 -T OBJECTID -A RW -X equal -F 0"

		readwrite enum expObjectDiscontinuityIDWildcardE	expObjectDiscontinuityIDWildcard
		description 	"A true value indicates the expObjectDeltaDiscontinuityID
        of this row is a wildcard object.  False indicates that
        expObjectDeltaDiscontinuityID is fully instanced.
        
        This object is not instantiated if expObject is not
        'deltaValue'.
        
        NOTE:  The simplest implementations of this MIB may not
        allow wildcards."
		characteristics "-N expObjectDiscontinuityIDWildcard -O 1.3.6.1.4.1.9.10.22.1.3.2.1.6 -T INTEGER -A RW -X equal -F 0"

		readwrite enum expObjectDiscontinuityIDTypeE	expObjectDiscontinuityIDType
		description 	"The value 'timeTicks' indicates the
        expObjectDeltaDiscontinuityID of this row is of syntax
        TimeTicks.  The value 'timeStamp' indicates that
        expObjectDeltaDiscontinuityID is of syntax TimeStamp.
        
        This object is not instantiated if expObject is not
        'deltaValue'."
		characteristics "-N expObjectDiscontinuityIDType -O 1.3.6.1.4.1.9.10.22.1.3.2.1.7 -T INTEGER -A RW -X equal -F 0"

		readwrite objectid	expObjectConditional
		description 	"The OBJECT IDENTIFIER (OID) of an object that overrides
        whether the instance of expObjectID is to be considered
        usable.  If the value of the object at expObjectConditional
        is 0 or not instantiated, the object at expObjectID is
        treated as if it is not instantiated.  In other words,
        expObjectConditional is a filter that controls whether or
        not to use the value at expObjectID.
        
        The OID may be for a leaf object (e.g. sysObjectID.0) or
        may be wildcarded to match expObjectID.  If expObject is
        wildcarded and expObjectID in the same row is not, the wild
        portion of expObjectConditional must match the wildcarding
        of the rest of the expression.  If no object in the
        expression is wildcarded but expObjectConditional is, use
        the lexically first instance (if any) of
        expObjectConditional.
        
        If the value of expObjectConditional is 0.0 operation is
        as if the value pointed to by expObjectConditional is a
        non-zero (true) value.
        
        Note that expObjectConditional can not trivially use an
        object of syntax TruthValue, since the underlying value is
        not 0 or 1."
		characteristics "-N expObjectConditional -O 1.3.6.1.4.1.9.10.22.1.3.2.1.8 -T OBJECTID -A RW -X equal -F 0"

		readwrite enum expObjectConditionalWildcardE	expObjectConditionalWildcard
		description 	"A true value indicates the expObjectConditional of this
        row is a wildcard object. False indicates that
        expObjectConditional is fully instanced.
        
        NOTE: The simplest implementations of this MIB may not allow
        wildcards."
		characteristics "-N expObjectConditionalWildcard -O 1.3.6.1.4.1.9.10.22.1.3.2.1.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum expObjectStatusE	expObjectStatus
		description 	"The control that allows creation/deletion of entries.
        
        Objects in this table may be changed while expObjectStatus
        is in any state."
		characteristics "-N expObjectStatus -O 1.3.6.1.4.1.9.10.22.1.3.2.1.10 -T INTEGER -A RW -X equal -F 0"

	)

	table	expValueTable
	description "A table of values from evaluated expressions."
	characteristics "-K ???"
	(
		notaccessible objectid	expValueInstance
		description 	"The final instance portion of a value's OID according to
        the wildcarding in instances of expObjectID for the
        expression.  The prefix of this OID fragment is 0.0,
        leading to the following behavior.
        
        If there is no wildcarding, the value is 0.0.0.  In other
        words, there is one value which standing alone would have
        been a scalar with a 0 at the end of its OID.
        
        If there is wildcarding, the value is 0.0 followed by
        a value that the wildcard can take, thus defining one value
        instance for each real, possible value of the wildcard.
        So, for example, if the wildcard worked out to be an
        ifIndex, there is an expValueInstance for each applicable
        ifIndex."
		characteristics "-N expValueInstance -O 1.3.6.1.4.1.9.10.22.1.4.1.1.1 -T OBJECTID -A NA -X equal -F 0"

		readonly counter	expValueCounter32Val
		description 	"The value when expExpressionValueType is 'counter32'."
		characteristics "-N expValueCounter32Val -O 1.3.6.1.4.1.9.10.22.1.4.1.1.2 -T COUNTER -A RO -X equal -F 0"

		readonly gauge	expValueUnsigned32Val
		description 	"The value when expExpressionValueType is
        'unsignedOrGauge32' or 'timeTicks'."
		characteristics "-N expValueUnsigned32Val -O 1.3.6.1.4.1.9.10.22.1.4.1.1.3 -T GAUGE -A RO -X equal -F 0"

		readonly int	expValueInteger32Val
		description 	"The value when expExpressionValueType is 'integer32'."
		characteristics "-N expValueInteger32Val -O 1.3.6.1.4.1.9.10.22.1.4.1.1.4 -T INTEGER -A RO -X equal -F 0"

		readonly netaddress	expValueIpAddressVal
		description 	"The value when expExpressionValueType is 'ipAddress'."
		characteristics "-N expValueIpAddressVal -O 1.3.6.1.4.1.9.10.22.1.4.1.1.5 -T IPADDRESS -A RO -X equal -F 0"

		readonly octet[65535]	expValueOctetStringVal
		description 	"The value when expExpressionValueType is 'octetString'."
		characteristics "-N expValueOctetStringVal -O 1.3.6.1.4.1.9.10.22.1.4.1.1.6 -T STRING -A RO -X equal -F 0"

		readonly objectid	expValueOidVal
		description 	"The value when expExpressionValueType is 'objectId'."
		characteristics "-N expValueOidVal -O 1.3.6.1.4.1.9.10.22.1.4.1.1.7 -T OBJECTID -A RO -X equal -F 0"

		readonly counter	expValueCounter64Val
		description 	"The value when expExpressionValueType is 'counter64'."
		characteristics "-N expValueCounter64Val -O 1.3.6.1.4.1.9.10.22.1.4.1.1.8 -T COUNTER -A RO -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
