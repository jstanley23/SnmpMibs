## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-FLASH-MIB
description "CISCO-FLASH-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	ciscoFlashDeviceProgrammingJumperE (
	   1	"installed"
	   2	"notInstalled"
	   3	"unknown"
	)

	enum	ciscoFlashDeviceRemovableE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashPartitionChecksumAlgorithmE (
	   1	"simpleChecksum"
	   2	"undefined"
	   3	"simpleCRC"
	)

	enum	ciscoFlashPartitionStatusE (
	   1	"readOnly"
	   2	"runFromFlash"
	   3	"readWrite"
	)

	enum	ciscoFlashPartitionUpgradeMethodE (
	   1	"unknown"
	   2	"rxbootFLH"
	   3	"direct"
	)

	enum	ciscoFlashPartitionNeedErasureE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashFileStatusE (
	   1	"deleted"
	   2	"invalidChecksum"
	   3	"valid"
	)

	enum	ciscoFlashFileTypeE (
	   1	"unknown"
	   2	"config"
	   3	"image"
	   4	"directory"
	   5	"crashinfo"
	)

	enum	ciscoFlashFileByTypeStatusE (
	   1	"deleted"
	   2	"invalidChecksum"
	   3	"valid"
	)

	enum	ciscoFlashCopyCommandE (
	   1	"copyToFlashWithErase"
	   2	"copyToFlashWithoutErase"
	   3	"copyFromFlash"
	   4	"copyFromFlhLog"
	)

	enum	ciscoFlashCopyProtocolE (
	   1	"tftp"
	   2	"rcp"
	   3	"lex"
	   4	"ftp"
	   5	"scp"
	   6	"sftp"
	)

	enum	ciscoFlashCopyStatusE (
	   0	"copyOperationPending"
	   1	"copyInProgress"
	   2	"copyOperationSuccess"
	   3	"copyInvalidOperation"
	   4	"copyInvalidProtocol"
	   5	"copyInvalidSourceName"
	   6	"copyInvalidDestName"
	   7	"copyInvalidServerAddress"
	   8	"copyDeviceBusy"
	   9	"copyDeviceOpenError"
	   10	"copyDeviceError"
	   11	"copyDeviceNotProgrammable"
	   12	"copyDeviceFull"
	   13	"copyFileOpenError"
	   14	"copyFileTransferError"
	   15	"copyFileChecksumError"
	   16	"copyNoMemory"
	   17	"copyUnknownFailure"
	   18	"copyInvalidSignature"
	)

	enum	ciscoFlashCopyNotifyOnCompletionE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashCopyEntryStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ciscoFlashCopyVerifyE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashCopyServerAddrTypeE (
	   0	"unknown"
	   1	"ipv4"
	   2	"ipv6"
	   3	"ipv4z"
	   4	"ipv6z"
	   16	"dns"
	)

	enum	ciscoFlashPartitioningCommandE (
	   1	"partition"
	)

	enum	ciscoFlashPartitioningStatusE (
	   1	"partitioningInProgress"
	   2	"partitioningOperationSuccess"
	   3	"partitioningInvalidOperation"
	   4	"partitioningInvalidDestName"
	   5	"partitioningInvalidPartitionCount"
	   6	"partitioningInvalidPartitionSizes"
	   7	"partitioningDeviceBusy"
	   8	"partitioningDeviceOpenError"
	   9	"partitioningDeviceError"
	   10	"partitioningNoMemory"
	   11	"partitioningUnknownFailure"
	)

	enum	ciscoFlashPartitioningNotifyOnCompletionE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashPartitioningEntryStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ciscoFlashMiscOpCommandE (
	   1	"erase"
	   2	"verify"
	   3	"delete"
	   4	"undelete"
	   5	"squeeze"
	   6	"format"
	)

	enum	ciscoFlashMiscOpStatusE (
	   1	"miscOpInProgress"
	   2	"miscOpOperationSuccess"
	   3	"miscOpInvalidOperation"
	   4	"miscOpInvalidDestName"
	   5	"miscOpDeviceBusy"
	   6	"miscOpDeviceOpenError"
	   7	"miscOpDeviceError"
	   8	"miscOpDeviceNotProgrammable"
	   9	"miscOpFileOpenError"
	   10	"miscOpFileDeleteFailure"
	   11	"miscOpFileUndeleteFailure"
	   12	"miscOpFileChecksumError"
	   13	"miscOpNoMemory"
	   14	"miscOpUnknownFailure"
	   18	"miscOpSqueezeFailure"
	   19	"miscOpNoSuchFile"
	   20	"miscOpFormatFailure"
	)

	enum	ciscoFlashMiscOpNotifyOnCompletionE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashMiscOpEntryStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ciscoFlashCfgDevInsNotifEnableE (
	   1	"true"
	   2	"false"
	)

	enum	ciscoFlashCfgDevRemNotifEnableE (
	   1	"true"
	   2	"false"
	)


## Group and Table Declarations

	group	ciscoFlashDevice
	description "(null)"
	characteristics "-K NONE"
	(
		readonly gauge	ciscoFlashDevicesSupported
		description 	"Number of Flash devices supported by the system.
        If the system does not support any Flash devices, this
        MIB will not be loaded on that system. The value of this
        object will therefore be atleast 1."
		characteristics "-N ciscoFlashDevicesSupported -O 1.3.6.1.4.1.9.9.10.1.1.1 -T GAUGE -A RO -X equal -F 0"

	)

	table	ciscoFlashDeviceTable
	description "Table of Flash device properties for each initialized
        Flash device. Each Flash device installed in a system
        is detected, sized, and initialized when the system
        image boots up.
        For removable Flash devices, the device properties
        will be dynamically deleted and recreated as the
        device is removed and inserted. Note that in this
        case, the newly inserted device may not be the same as
        the earlier removed one. The ciscoFlashDeviceInitTime
        object is available for a management station to determine
        the time at which a device was initialized, and thereby
        detect the change of a removable device.
        A removable device that has not been installed will
        also have an entry in this table. This is to let a
        management station know about a removable device that
        has been removed. Since a removed device obviously
        cannot be sized and initialized, the table entry for
        such a device will have
        ciscoFlashDeviceSize equal to zero,
        and the following objects will have
        an indeterminate value:
                ciscoFlashDeviceMinPartitionSize,
                ciscoFlashDeviceMaxPartitions,
                ciscoFlashDevicePartitions, and
                ciscoFlashDeviceChipCount.
        ciscoFlashDeviceRemovable will be
        true to indicate it is removable."
	characteristics "-K ONE"
	(
		notaccessible gauge	ciscoFlashDeviceIndex
		description 	"Flash device sequence number to index within the
        table of initialized flash devices.
        The lowest value should be 1. The highest should be
        less than or equal to the value of the
        ciscoFlashDevicesSupported object."
		characteristics "-N ciscoFlashDeviceIndex -O 1.3.6.1.4.1.9.9.10.1.1.2.1.1 -T GAUGE -A NA -X equal -F 0"

		readonly gauge	ciscoFlashDeviceSize
		description 	"Total size of the Flash device.
        For a removable device, the size will be zero if
        the device has been removed.
        
        If the total size of the flash device is greater than the
        maximum value reportable by this object then this object
        should report its maximum value(4,294,967,295) and
        ciscoFlashDeviceSizeExtended must be used to report the
        flash device's size."
		characteristics "-N ciscoFlashDeviceSize -O 1.3.6.1.4.1.9.9.10.1.1.2.1.2 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashDeviceMinPartitionSize
		description 	"This object will give the minimum partition size
        supported for this device. For systems that execute code
        directly out of Flash, the minimum partition size needs
        to be the bank size. (Bank size is equal to the size of a
        chip multiplied by the width of the device. In most cases,
        the device width is 4 bytes, and so the bank size would be
        four times the size of a chip). This has to be so because
        all programming commands affect the operation of an
        entire chip (in our case, an entire bank because all
        operations are done on the entire width of the device)
        even though the actual command may be localized to a small
        portion of each chip. So when executing code out of Flash,
        one needs to be able to write and erase some portion of
        Flash without affecting the code execution.
        For systems that execute code out of DRAM or ROM, it is
        possible to partition Flash with a finer granularity (for
        eg., at erase sector boundaries) if the system code supports
        such granularity.
        
        This object will let a management entity know the
        minimum partition size as defined by the system.
        If the system does not support partitioning, the value
        will be equal to the device size in ciscoFlashDeviceSize.
        The maximum number of partitions that could be configured
        will be equal to the minimum of
        ciscoFlashDeviceMaxPartitions
        and
        (ciscoFlashDeviceSize / ciscoFlashDeviceMinPartitionSize)."
		characteristics "-N ciscoFlashDeviceMinPartitionSize -O 1.3.6.1.4.1.9.9.10.1.1.2.1.3 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashDeviceMaxPartitions
		description 	"Max number of partitions supported by the system for
        this Flash device. Default will be 1, which actually
        means that partitioning is not supported. Note that
        this value will be defined by system limitations, not
        by the flash device itself (for eg., the system may
        impose a limit of 2 partitions even though the device
        may be large enough to be partitioned into 4 based on
        the smallest partition unit supported).
        On systems that execute code out of Flash, partitioning
        is a way of creating multiple file systems in the Flash
        device so that writing into or erasing of one file system
        can be done while executing code residing in another file
        system.
        For systems executing code out of DRAM, partitioning
        gives a way of sub-dividing a large Flash device for
        easier management of files."
		characteristics "-N ciscoFlashDeviceMaxPartitions -O 1.3.6.1.4.1.9.9.10.1.1.2.1.4 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashDevicePartitions
		description 	"Flash device partitions actually present. Number of
        partitions cannot exceed the minimum of
        ciscoFlashDeviceMaxPartitions
        and
        (ciscoFlashDeviceSize / ciscoFlashDeviceMinPartitionSize).
        Will be equal to at least 1, the case where the partition
        spans the entire device (actually no partitioning).
        A partition will contain one or more minimum partition
        units (where a minimum partition unit is defined by
        ciscoFlashDeviceMinPartitionSize)."
		characteristics "-N ciscoFlashDevicePartitions -O 1.3.6.1.4.1.9.9.10.1.1.2.1.5 -T GAUGE -A RO -X equal -F 0"

		readonly int	ciscoFlashDeviceChipCount
		description 	"Total number of chips within the Flash device.
        The purpose of this object is to provide information
        upfront to a management station on how much chip info
        to expect and possibly help double check the chip index
        against an upper limit when randomly retrieving chip
        info for a partition."
		characteristics "-N ciscoFlashDeviceChipCount -O 1.3.6.1.4.1.9.9.10.1.1.2.1.6 -T INTEGER -A RO -X equal -F 0"

		readonly octet[16]	ciscoFlashDeviceName
		description 	"Flash device name. This name is used to refer to the
        device within the system. Flash operations get directed
        to a device based on this name.
        The system has a concept of a default device.
        This would be the primary or most used device in case of
        multiple devices. The system directs an operation to the
        default device whenever a device name is not specified.
        The device name is therefore mandatory except when the
        operation is being done on the default device, or,
        the system supports only a single Flash device.
        The device name will always be available for a
        removable device, even when the device has been removed."
		characteristics "-N ciscoFlashDeviceName -O 1.3.6.1.4.1.9.9.10.1.1.2.1.7 -T STRING -A RO -X equal -F 0"

		readonly octet[64]	ciscoFlashDeviceDescr
		description 	"Description of a Flash device. The description is meant
        to explain what the Flash device and its purpose is.
        Current values are:
          System flash - for the primary Flash used to store full
                         system images.
          Boot flash   - for the secondary Flash used to store
                         bootstrap images.
        The ciscoFlashDeviceDescr, ciscoFlashDeviceController
        (if applicable), and ciscoFlashPhyEntIndex objects are
        expected to collectively give all information about a
        Flash device.
        The device description will always be available for a
        removable device, even when the device has been removed."
		characteristics "-N ciscoFlashDeviceDescr -O 1.3.6.1.4.1.9.9.10.1.1.2.1.8 -T STRING -A RO -X equal -F 0"

		readonly octet[64]	ciscoFlashDeviceController
		description 	"Flash device controller. The h/w card that actually
        controls Flash read/write/erase. Relevant for the AGS+
        systems where Flash may be controlled by the MC+, STR or
        the ENVM cards, cards that may not actually contain the
        Flash chips.
        For systems that have removable PCMCIA flash cards that
        are controlled by a PCMCIA controller chip, this object
        may contain a description of that controller chip.
        Where irrelevant (Flash is a direct memory mapped device
        accessed directly by the main processor), this object will
        have an empty (NULL) string."
		characteristics "-N ciscoFlashDeviceController -O 1.3.6.1.4.1.9.9.10.1.1.2.1.9 -T STRING -A RO -X equal -F 0"

		readonly objectid	ciscoFlashDeviceCard
		description 	"This object will point to an instance of a card entry
        in the cardTable. The card entry will give details about
        the card on which the Flash device is actually located.
        For most systems, this is usually the main processor board.
        On the AGS+ systems, Flash is located on a separate multibus
        card such as the MC.
        This object will therefore be used to essentially index
        into cardTable to retrieve details about the card such as
        cardDescr, cardSlotNumber, etc."
		characteristics "-N ciscoFlashDeviceCard -O 1.3.6.1.4.1.9.9.10.1.1.2.1.10 -T OBJECTID -A RO -X equal -F 0"

		readonly enum ciscoFlashDeviceProgrammingJumperE	ciscoFlashDeviceProgrammingJumper
		description 	"This object gives the state of a jumper (if present and can be
        determined) that controls the programming voltage called Vpp
        to the Flash device. Vpp is required for programming (erasing
        and writing) Flash. For certain older technology chips it is
        also required for identifying the chips (which in turn is
        required to identify which programming algorithms to use;
        different chips require different algorithms and commands).
        The purpose of the jumper, on systems where it is available,
        is to write protect a Flash device.
        On most of the newer remote access routers, this jumper is
        unavailable since users are not expected to visit remote sites
        just to install and remove the jumpers when upgrading software
        in the Flash device. The unknown(3) value will be returned for
        such systems and can be interpreted to mean that a programming
        jumper is not present or not required on those systems.
        On systems where the programming jumper state can be read back
        via a hardware register, the installed(1) or notInstalled(2)
        value will be returned.
        This object is expected to be used in conjunction with the
        ciscoFlashPartitionStatus object whenever that object has
        the readOnly(1) value. In such a case, this object will
        indicate whether the programming jumper is a possible reason
        for the readOnly state."
		characteristics "-N ciscoFlashDeviceProgrammingJumper -O 1.3.6.1.4.1.9.9.10.1.1.2.1.11 -T INTEGER -A RO -X equal -F 0"

		readonly timeticks	ciscoFlashDeviceInitTime
		description 	"System time at which device was initialized.
        For fixed devices, this will be the system time at
        boot up.
        For removable devices, it will be the time at which
        the device was inserted, which may be boot up time,
        or a later time (if device was inserted later).
        If a device (fixed or removable) was repartitioned,
        it will be the time of repartitioning.
        The purpose of this object is to help a management
        station determine if a removable device has been
        changed. The application should retrieve this
        object prior to any operation and compare with
        the previously retrieved value.
        Note that this time will not be real time but a
        running time maintained by the system. This running
        time starts from zero when the system boots up.
        For a removable device that has been removed, this
        value will be zero."
		characteristics "-N ciscoFlashDeviceInitTime -O 1.3.6.1.4.1.9.9.10.1.1.2.1.12 -T TIMETICKS -A RO -X equal -F 0"

		readonly enum ciscoFlashDeviceRemovableE	ciscoFlashDeviceRemovable
		description 	"Whether Flash device is removable. Generally, only PCMCIA
        Flash cards will be treated as removable. Socketed Flash
        chips and Flash SIMM modules will not be treated as removable.
        Simply put, only those Flash devices that can be inserted
        or removed without opening the hardware casing will be
        considered removable.
        Further, removable Flash devices are expected to have
        the necessary hardware support -
          1. on-line removal and insertion
          2. interrupt generation on removal or insertion."
		characteristics "-N ciscoFlashDeviceRemovable -O 1.3.6.1.4.1.9.9.10.1.1.2.1.13 -T INTEGER -A RO -X equal -F 0"

		readonly int	ciscoFlashPhyEntIndex
		description 	"This object indicates the physical entity index of a
        physical entity in entPhysicalTable which the flash
        device actually located."
		characteristics "-N ciscoFlashPhyEntIndex -O 1.3.6.1.4.1.9.9.10.1.1.2.1.14 -T INTEGER -A RO -X equal -F 0"

		readonly octet[255]	ciscoFlashDeviceNameExtended
		description 	"Extended Flash device name whose size can be upto
        255 characters. This name is used to refer to the
        device within the system. Flash operations get directed
        to a device based on this name.
        The system has a concept of a default device.
        This would be the primary or most used device in case
        of multiple devices. The system directs an operation
        to the default device whenever a device name is not
        specified. The device name is therefore mandatory
        except when the operation is being done on the
        default device, or, the system supports only a single
        Flash device. The device name will always be available
        for a removable device, even when the device has been
        removed."
		characteristics "-N ciscoFlashDeviceNameExtended -O 1.3.6.1.4.1.9.9.10.1.1.2.1.15 -T STRING -A RO -X equal -F 0"

		readonly counter	ciscoFlashDeviceSizeExtended
		description 	"Total size of the Flash device.
        For a removable device, the size will be zero if
        the device has been removed.
        
        This object is a 64-bit version of ciscoFlashDeviceSize."
		characteristics "-N ciscoFlashDeviceSizeExtended -O 1.3.6.1.4.1.9.9.10.1.1.2.1.16 -T COUNTER -A RO -X equal -F 0"

	)

	table	ciscoFlashChipTable
	description "Table of Flash device chip properties for each
        initialized Flash device.
        This table is meant primarily for aiding error
        diagnosis."
	characteristics "-K ONE"
	(
		notaccessible int	ciscoFlashChipIndex
		description 	"Chip sequence number within selected flash device.
        Used to index within chip info table.
        Value starts from 1 and should not be greater than
        ciscoFlashDeviceChipCount for that device.
        When retrieving chip information for chips within a
        partition, the sequence number should lie between
        ciscoFlashPartitionStartChip & ciscoFlashPartitionEndChip
        (both inclusive)."
		characteristics "-N ciscoFlashChipIndex -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.1 -T INTEGER -A NA -X equal -F 0"

		readonly octet[5]	ciscoFlashChipCode
		description 	"Manufacturer and device code for a chip.
        Lower byte will contain the device code.
        Upper byte will contain the manufacturer code.
        If a chip code is unknown because it could not
        be queried out of the chip, the value of this
        object will be 00:00.
        Since programming algorithms differ from chip type to
        chip type, this chip code should be used to determine
        which algorithms to use (and thereby whether the chip
        is supported in the first place)."
		characteristics "-N ciscoFlashChipCode -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.2 -T STRING -A RO -X equal -F 0"

		readonly octet[32]	ciscoFlashChipDescr
		description 	"Flash chip name corresponding to the chip code.
        The name will contain the manufacturer and the
        chip type. It will be of the form :
          Intel 27F008SA.
        In the case where a chip code is unknown, this
        object will be an empty (NULL) string.
        In the case where the chip code is known but the
        chip is not supported by the system, this object
        will be an empty (NULL) string.
        A management station is therefore expected to use the
        chip code and the chip description in conjunction
        to provide additional information whenever the
        ciscoFlashPartitionStatus object has the readOnly(1)
        value."
		characteristics "-N ciscoFlashChipDescr -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.3 -T STRING -A RO -X equal -F 0"

		readonly counter	ciscoFlashChipWriteRetries
		description 	"This object will provide a cumulative count
        (since last system boot up or initialization) of
        the number of write retries that were done in the chip.
        If no writes have been done to Flash, the count
        will be zero. Typically, a maximum of 25 retries are
        done on a single location before flagging a write
        error.
        A management station is expected to get this object
        for each chip in a partition after a write failure
        in that partition. To keep a track of retries for
        a given write operation, the management station would
        have to retrieve the values for the concerned chips
        before and after any write operation."
		characteristics "-N ciscoFlashChipWriteRetries -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.4 -T COUNTER -A RO -X equal -F 0"

		readonly counter	ciscoFlashChipEraseRetries
		description 	"This object will provide a cumulative count
        (since last system boot up or initialization) of
        the number of erase retries that were done in the chip.
        Typically, a maximum of 2000 retries are done in a
        single erase zone (which may be a full chip or a
        portion, depending on the chip technology) before
        flagging an erase error.
        A management station is expected to get this object
        for each chip in a partition after an erase failure
        in that partition. To keep a track of retries for
        a given erase operation, the management station would
        have to retrieve the values for the concerned chips
        before and after any erase operation.
        Note that erase may be done through an independent
        command, or through a copy-to-flash command."
		characteristics "-N ciscoFlashChipEraseRetries -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.5 -T COUNTER -A RO -X equal -F 0"

		readonly gauge	ciscoFlashChipMaxWriteRetries
		description 	"The maximum number of write retries done at any
        single location before declaring a write failure."
		characteristics "-N ciscoFlashChipMaxWriteRetries -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.6 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashChipMaxEraseRetries
		description 	"The maximum number of erase retries done within
        an erase sector before declaring an erase failure."
		characteristics "-N ciscoFlashChipMaxEraseRetries -O 1.3.6.1.4.1.9.9.10.1.1.3.1.1.7 -T GAUGE -A RO -X equal -F 0"

	)

	table	ciscoFlashPartitionTable
	description "Table of flash device partition properties for each
        initialized flash partition. Whenever there is no
        explicit partitioning done, a single partition spanning
        the entire device will be assumed to exist. There will
        therefore always be atleast one partition on a device."
	characteristics "-K ONE"
	(
		notaccessible gauge	ciscoFlashPartitionIndex
		description 	"Flash partition sequence number used to index within
        table of initialized flash partitions."
		characteristics "-N ciscoFlashPartitionIndex -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.1 -T GAUGE -A NA -X equal -F 0"

		readonly int	ciscoFlashPartitionStartChip
		description 	"Chip sequence number of first chip in partition.
        Used as an index into the chip table."
		characteristics "-N ciscoFlashPartitionStartChip -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly int	ciscoFlashPartitionEndChip
		description 	"Chip sequence number of last chip in partition.
        Used as an index into the chip table."
		characteristics "-N ciscoFlashPartitionEndChip -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.3 -T INTEGER -A RO -X equal -F 0"

		readonly gauge	ciscoFlashPartitionSize
		description 	"Flash partition size. It should be an integral
        multiple of ciscoFlashDeviceMinPartitionSize.
        If there is a single partition, this size will be equal
        to ciscoFlashDeviceSize.
        
        If the size of the flash partition is greater than the
        maximum value reportable by this object then this object
        should report its maximum value(4,294,967,295) and
        ciscoFlashPartitionSizeExtended must be used to report the
        flash partition's size."
		characteristics "-N ciscoFlashPartitionSize -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.4 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashPartitionFreeSpace
		description 	"Free space within a Flash partition.
        Note that the actual size of a file in Flash includes
        a small overhead that represents the file system's
        file header.
        Certain file systems may also have a partition or
        device header overhead to be considered when
        computing the free space.
        Free space will be computed as total partition size
        less size of all existing files (valid/invalid/deleted
        files and including file header of each file),
        less size of any partition header, less size of
        header of next file to be copied in. In short, this
        object will give the size of the largest file that
        can be copied in. The management entity will not be
        expected to know or use any overheads such as file
        and partition header lengths, since such overheads
        may vary from file system to file system.
        Deleted files in Flash do not free up space.
        A partition may have to be erased in order to reclaim
        the space occupied by files.
        
        If the free space within a flash partition is greater than
        the maximum value reportable by this object then this object
        should report its maximum value(4,294,967,295) and
        ciscoFlashPartitionFreeSpaceExtended
        must be used to report the flash partition's free space."
		characteristics "-N ciscoFlashPartitionFreeSpace -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.5 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ciscoFlashPartitionFileCount
		description 	"Count of all files in a flash partition. Both
        good and bad (deleted or invalid checksum) files
        will be included in this count."
		characteristics "-N ciscoFlashPartitionFileCount -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.6 -T GAUGE -A RO -X equal -F 0"

		readonly enum ciscoFlashPartitionChecksumAlgorithmE	ciscoFlashPartitionChecksumAlgorithm
		description 	"Checksum algorithm identifier for checksum method
        used by the file system. Normally, this would be
        fixed for a particular file system. When a file
        system writes a file to Flash, it checksums the
        data written. The checksum then serves as a way
        to validate the data read back whenever the file
        is opened for reading.
        Since there is no way, when using TFTP, to guarantee
        that a network download has been error free (since
        UDP checksums may not have been enabled), this
        object together with the ciscoFlashFileChecksum
        object provides a method for any management station
        to regenerate the checksum of the original file
        on the server and compare checksums to ensure that
        the file download to Flash was error free.
        simpleChecksum represents a simple 1s complement
        addition of short word values. Other algorithm
        values will be added as necessary."
		characteristics "-N ciscoFlashPartitionChecksumAlgorithm -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.7 -T INTEGER -A RO -X equal -F 0"

		readonly enum ciscoFlashPartitionStatusE	ciscoFlashPartitionStatus
		description 	"Flash partition status can be :
        
        * readOnly if device is not programmable either because
        chips could not be recognized or an erroneous mismatch
        of chips was detected. Chip recognition may fail either
        because the chips are not supported by the system,
        or because the Vpp voltage required to identify chips
        has been disabled via the programming jumper.
        The ciscoFlashDeviceProgrammingJumper, ciscoFlashChipCode,
        and ciscoFlashChipDescr objects can be examined to get
        more details on the cause of this status
        * runFromFlash (RFF) if current image is running from
        this partition.
        The ciscoFlashPartitionUpgradeMethod object will then
        indicate whether the Flash Load Helper can be used
        to write a file to this partition or not.
        
        * readWrite if partition is programmable."
		characteristics "-N ciscoFlashPartitionStatus -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.8 -T INTEGER -A RO -X equal -F 0"

		readonly enum ciscoFlashPartitionUpgradeMethodE	ciscoFlashPartitionUpgradeMethod
		description 	"Flash partition upgrade method, ie., method by which
        new files can be downloaded into the partition.
        FLH stands for Flash Load Helper, a feature provided
        on run-from-Flash systems for upgrading Flash. This
        feature uses the bootstrap code in ROMs to help in
        automatic download.
        This object should be retrieved if the partition
        status is runFromFlash(2).
        If the partition status is readOnly(1), the upgrade
        method would depend on the reason for the readOnly
        status. For eg., it may simply be a matter of installing
        the programming jumper, or it may require execution of a
        later version of software that supports the Flash chips.
        
        unknown      -  the current system image does not know
                        how Flash can be programmed. A possible
                        method would be to reload the ROM image
                        and perform the upgrade manually.
        rxbootFLH    -  the Flash Load Helper is available to
                        download files to Flash. A copy-to-flash
                        command can be used and this system image
                        will automatically reload the Rxboot image
                        in ROM and direct it to carry out the
                        download request.
        direct       -  will be done directly by this image."
		characteristics "-N ciscoFlashPartitionUpgradeMethod -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.9 -T INTEGER -A RO -X equal -F 0"

		readonly octet[16]	ciscoFlashPartitionName
		description 	"Flash partition name used to refer to a partition
        by the system. This can be any alpha-numeric character
        string of the form AAAAAAAAnn, where A represents an
        optional alpha character and n a numeric character.
        Any numeric characters must always form the trailing
        part of the string. The system will strip off the alpha
        characters and use the numeric portion to map to a
        partition index.
        Flash operations get directed to a device partition
        based on this name.
        The system has a concept of a default partition. This
        would be the first partition in the device. The system
        directs an operation to the default partition whenever
        a partition name is not specified.
        The partition name is therefore mandatory except when
        the operation is being done on the default partition, or
        the device has just one partition (is not partitioned)."
		characteristics "-N ciscoFlashPartitionName -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.10 -T STRING -A RO -X equal -F 0"

		readonly enum ciscoFlashPartitionNeedErasureE	ciscoFlashPartitionNeedErasure
		description 	"This object indicates whether a partition requires
        erasure before any write operations can be done in it.
        A management station should therefore retrieve this
        object prior to attempting any write operation.
        A partition requires erasure after it becomes full
        free space left is less than or equal to the
        (filesystem file header size).
        A partition also requires erasure if the system does
        not find the existence of any file system when it
        boots up.
        The partition may be erased explicitly through the
        erase(5) command, or by using the copyToFlashWithErase(1)
        command.
        If a copyToFlashWithoutErase(2) command is issued
        when this object has the TRUE value, the command
        will fail."
		characteristics "-N ciscoFlashPartitionNeedErasure -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.11 -T INTEGER -A RO -X equal -F 0"

		readonly int	ciscoFlashPartitionFileNameLength
		description 	"Maximum file name length supported by the file
        system.
        Max file name length will depend on the file
        system implemented. Today, all file systems
        support a max length of at least 48 bytes.
        A management entity must use this object when
        prompting a user for, or deriving the Flash file
        name length."
		characteristics "-N ciscoFlashPartitionFileNameLength -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.12 -T INTEGER -A RO -X equal -F 0"

		readonly counter	ciscoFlashPartitionSizeExtended
		description 	"Flash partition size. It should be an integral
        multiple of ciscoFlashDeviceMinPartitionSize.
        If there is a single partition, this size will be equal
        to ciscoFlashDeviceSize.
        
        This object is a 64-bit version of ciscoFlashPartitionSize"
		characteristics "-N ciscoFlashPartitionSizeExtended -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.13 -T COUNTER -A RO -X equal -F 0"

		readonly counter	ciscoFlashPartitionFreeSpaceExtended
		description 	"Free space within a Flash partition.
        Note that the actual size of a file in Flash includes
        a small overhead that represents the file system's
        file header.
        Certain file systems may also have a partition or
        device header overhead to be considered when
        computing the free space.
        Free space will be computed as total partition size
        less size of all existing files (valid/invalid/deleted
        files and including file header of each file),
        less size of any partition header, less size of
        header of next file to be copied in. In short, this
        object will give the size of the largest file that
        can be copied in. The management entity will not be
        expected to know or use any overheads such as file
        and partition header lengths, since such overheads
        may vary from file system to file system.
        Deleted files in Flash do not free up space.
        A partition may have to be erased in order to reclaim
        the space occupied by files.
        
        This object is a 64-bit version of ciscoFlashPartitionFreeSpace"
		characteristics "-N ciscoFlashPartitionFreeSpaceExtended -O 1.3.6.1.4.1.9.9.10.1.1.4.1.1.14 -T COUNTER -A RO -X equal -F 0"

	)

	table	ciscoFlashFileTable
	description "Table of information for files in a Flash partition."
	characteristics "-K ONE"
	(
		notaccessible gauge	ciscoFlashFileIndex
		description 	"Flash file sequence number used to index within
        a Flash partition directory table."
		characteristics "-N ciscoFlashFileIndex -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.1 -T GAUGE -A NA -X equal -F 0"

		readonly gauge	ciscoFlashFileSize
		description 	"Size of the file in bytes. Note that this size does
        not include the size of the filesystem file header.
        File size will always be non-zero."
		characteristics "-N ciscoFlashFileSize -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.2 -T GAUGE -A RO -X equal -F 0"

		readonly octet[128]	ciscoFlashFileChecksum
		description 	"File checksum stored in the file header. This
        checksum is computed and stored when the file is
        written into Flash. It serves to validate the data
        written into Flash.
        Whereas the system will generate and store the checksum
        internally in hexadecimal form, this object will
        provide the checksum in a string form.
        The checksum will be available for all valid and
        invalid-checksum files."
		characteristics "-N ciscoFlashFileChecksum -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.3 -T STRING -A RO -X equal -F 0"

		readonly enum ciscoFlashFileStatusE	ciscoFlashFileStatus
		description 	"Status of a file.
        A file could be explicitly deleted if the file system
        supports such a user command facility. Alternately,
        an existing good file would be automatically deleted
        if another good file with the same name were copied in.
        Note that deleted files continue to occupy prime
        Flash real estate.
        
        A file is marked as having an invalid checksum if any
        checksum mismatch was detected while writing or reading
        the file. Incomplete files (files truncated either
        because of lack of free space, or a network download
        failure) are also written with a bad checksum and
        marked as invalid."
		characteristics "-N ciscoFlashFileStatus -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.4 -T INTEGER -A RO -X equal -F 0"

		readonly octet[255]	ciscoFlashFileName
		description 	"Flash file name as specified by the user copying in
        the file. The name should not include the colon (:)
        character as it is a special separator character used
        to delineate the device name, partition name, and the
        file name."
		characteristics "-N ciscoFlashFileName -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.5 -T STRING -A RO -X equal -F 0"

		readonly enum ciscoFlashFileTypeE	ciscoFlashFileType
		description 	"Type of the file."
		characteristics "-N ciscoFlashFileType -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.6 -T INTEGER -A RO -X equal -F 0"

		readonly octet[11]	ciscoFlashFileDate
		description 	"The time at which this file was created."
		characteristics "-N ciscoFlashFileDate -O 1.3.6.1.4.1.9.9.10.1.1.4.2.1.1.7 -T STRING -A RO -X equal -F 0"

	)

	table	ciscoFlashFileByTypeTable
	description "Table of information for files on the manageable
        flash devices sorted by File Types."
	characteristics "-K ???"
	(
		readonly gauge	ciscoFlashFileByTypeSize
		description 	"This object represents exactly the
        same info as ciscoFlashFileSize
        object in ciscoFlashFileTable."
		characteristics "-N ciscoFlashFileByTypeSize -O 1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.1 -T GAUGE -A RO -X equal -F 0"

		readonly octet[128]	ciscoFlashFileByTypeChecksum
		description 	"This object represents exactly the
        same info as ciscoFlashFileChecksum
        object in ciscoFlashFileTable."
		characteristics "-N ciscoFlashFileByTypeChecksum -O 1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.2 -T STRING -A RO -X equal -F 0"

		readonly enum ciscoFlashFileByTypeStatusE	ciscoFlashFileByTypeStatus
		description 	"This object represents exactly the
        same info as ciscoFlashFileStatus
        object in ciscoFlashFileTable."
		characteristics "-N ciscoFlashFileByTypeStatus -O 1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.3 -T INTEGER -A RO -X equal -F 0"

		readonly octet[255]	ciscoFlashFileByTypeName
		description 	"This object represents exactly the
        same info as ciscoFlashFileName
        object in ciscoFlashFileTable."
		characteristics "-N ciscoFlashFileByTypeName -O 1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.4 -T STRING -A RO -X equal -F 0"

		readonly octet[11]	ciscoFlashFileByTypeDate
		description 	"This object represents exactly the
        same info as ciscoFlashFileDate
        object in ciscoFlashFileTable."
		characteristics "-N ciscoFlashFileByTypeDate -O 1.3.6.1.4.1.9.9.10.1.1.4.2.2.1.5 -T STRING -A RO -X equal -F 0"

	)

	table	ciscoFlashCopyTable
	description "A table of Flash copy operation entries. Each
        entry represents a Flash copy operation (to or
        from Flash) that has been initiated."
	characteristics "-K ONE"
	(
		notaccessible int	ciscoFlashCopySerialNumber
		description 	"Object which specifies a unique entry in the
        table. A management station wishing to initiate a
        copy operation should use a pseudo-random value for
        this object when creating or modifying an instance of
        a ciscoFlashCopyEntry."
		characteristics "-N ciscoFlashCopySerialNumber -O 1.3.6.1.4.1.9.9.10.1.2.1.1.1 -T INTEGER -A NA -X equal -F 0"

		readwrite enum ciscoFlashCopyCommandE	ciscoFlashCopyCommand
		description 	"The copy command to be executed. Mandatory.
        Note that it is possible for a system to support
        multiple file systems (different file systems on
        different Flash devices, or different file systems
        on different partitions within a device). Each such
        file system may support only a subset of these commands.
        If a command is unsupported, the invalidOperation(3)
        error will be reported in the operation status.
        
        Command                 Remarks
        copyToFlashWithErase    Copy a file to flash; erase
                                flash before copy.
                                Use the TFTP or rcp protocol.
        copyToFlashWithoutErase Copy a file to flash; do not
                                erase.
                                Note that this command will fail
                                if the PartitionNeedErasure
                                object specifies that the
                                partition being copied to needs
                                erasure.
                                Use the TFTP or rcp protocol.
        copyFromFlash           Copy a file from flash using
                                the TFTP, rcp or lex protocol.
                                Note that the lex protocol
                                can only be used to copy to a
                                lex device.
        copyFromFlhLog          Copy contents of FLH log to
                                server using TFTP protocol.
        
        
        Command table           Parameters
        copyToFlashWithErase    CopyProtocol
                                CopyServerAddress
                                CopySourceName
                                CopyDestinationName (opt)
                                CopyRemoteUserName (opt)
                                CopyNotifyOnCompletion (opt)
        copyToFlashWithoutErase CopyProtocol
                                CopyServerAddress
                                CopySourceName
                                CopyDestinationName (opt)
                                CopyRemoteUserName (opt)
                                CopyNotifyOnCompletion (opt)
        copyFromFlash           CopyProtocol
                                CopyServerAddress
                                CopySourceName
                                CopyDestinationName (opt)
                                CopyRemoteUserName (opt)
                                CopyNotifyOnCompletion (opt)
        copyFromFlhLog          CopyProtocol
                                CopyServerAddress
                                CopyDestinationName
                                CopyNotifyOnCompletion (opt)"
		characteristics "-N ciscoFlashCopyCommand -O 1.3.6.1.4.1.9.9.10.1.2.1.1.2 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ciscoFlashCopyProtocolE	ciscoFlashCopyProtocol
		description 	"The protocol to be used for any copy. Optional.
        Will default to tftp if not specified.
        
        Since feature support depends on a software release,
        version number within the release, platform, and
        maybe the image type (subset type), a management
        station would be expected to somehow determine
        the protocol support for a command."
		characteristics "-N ciscoFlashCopyProtocol -O 1.3.6.1.4.1.9.9.10.1.2.1.1.3 -T INTEGER -A RW -X equal -F 0"

		readwrite netaddress	ciscoFlashCopyServerAddress
		description 	"The server address to be used for any copy. Optional.
        Will default to 'FFFFFFFF'H  (or 255.255.255.255).
        
        Since this object can just hold only IPv4 Transport
        type, it is deprecated and replaced by
        ciscoFlashCopyServerAddrRev1."
		characteristics "-N ciscoFlashCopyServerAddress -O 1.3.6.1.4.1.9.9.10.1.2.1.1.4 -T IPADDRESS -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashCopySourceName
		description 	"Source file name, either in Flash or on a server,
        depending on the type of copy command. Mandatory.
        
        For a copy from Flash:
        File name must be of the form
                [device>:][:]
        where  is a value obtained from FlashDeviceName,
                 is obtained from FlashPartitionName
            and  is the name of a file in Flash.
        A management station could derive its own partition name
        as per the description for the ciscoFlashPartitionName
        object.
        If <device> is not specified, the default Flash device
        will be assumed.
        If <partition> is not specified, the default partition
        will be assumed. If a device is not partitioned into 2
        or more partitions, this value may be left out.
        
        For a copy to Flash, the file name will be as per
        the file naming conventions and path to the file on
        the server."
		characteristics "-N ciscoFlashCopySourceName -O 1.3.6.1.4.1.9.9.10.1.2.1.1.5 -T STRING -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashCopyDestinationName
		description 	"Destination file name.
        
        For a copy to Flash:
        File name must be of the form
                {device>:][<partition>:]<file>
        where <device> is a value obtained from FlashDeviceName,
              <partition> is obtained from FlashPartitionName
          and <file> is any character string that does not have
        embedded colon characters.
        A management station could derive its own partition name
        as per the description for the ciscoFlashPartitionName
        object.
        If <device> is not specified, the default Flash device
        will be assumed.
        If <partition> is not specified, the default partition
        will be assumed. If a device is not partitioned into 2
        or more partitions, this value may be left out.
        If <file> is not specified, it will default to <file>
        specified in ciscoFlashCopySourceName.
        
        For a copy from Flash via tftp or rcp, the file name will be
        as per the file naming conventions and destination sub-directory
        on the server. If not specified, <file> from the source
        file name will be used.
        For a copy from Flash via lex, this string will consist
        of numeric characters specifying the interface on the
        lex box that will receive the source flash image."
		characteristics "-N ciscoFlashCopyDestinationName -O 1.3.6.1.4.1.9.9.10.1.2.1.1.6 -T STRING -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashCopyRemoteUserName
		description 	"Remote user name for copy via rcp protocol. Optional.
        This object will be ignored for protocols other than
        rcp.
        If specified, it will override the remote user-name
        configured through the
                rcmd remote-username
        configuration command.
        The remote user-name is sent as the server user-name
        in an rcp command request sent by the system to a
        remote rcp server."
		characteristics "-N ciscoFlashCopyRemoteUserName -O 1.3.6.1.4.1.9.9.10.1.2.1.1.7 -T STRING -A RW -X equal -F 0"

		readonly enum ciscoFlashCopyStatusE	ciscoFlashCopyStatus
		description 	"The status of the specified copy operation.
        
        copyOperationPending :
                operation request is received and
                pending for validation and process
        
        copyInProgress :
                specified operation is active
        
        copyOperationSuccess :
                specified operation is supported and
                completed successfully
        
        copyInvalidOperation :
                command invalid or command-protocol-device
                combination unsupported
        
        copyInvalidProtocol :
                invalid protocol specified
        
        copyInvalidSourceName :
                invalid source file name specified
                For the  copy from flash to lex operation, this
                error code will be returned when the source file
                is not a valid lex image.
        
        copyInvalidDestName :
                invalid target name (file or partition or
                device name) specified
                For the  copy from flash to lex operation, this
                error code will be returned when no lex devices
                are connected to the router or when an invalid
                lex interface number has been specified in
                the destination string.
        
        copyInvalidServerAddress :
                invalid server address specified
        
        copyDeviceBusy :
                specified device is in use and locked by
                another process
        
        copyDeviceOpenError :
                invalid device name
        
        copyDeviceError :
                device read, write or erase error
        
        copyDeviceNotProgrammable :
                device is read-only but a write or erase
                operation was specified
        
        copyDeviceFull :
                device is filled to capacity
        
        copyFileOpenError :
                invalid file name; file not found in partition
        
        copyFileTransferError :
                file transfer was unsuccessfull; network failure
        
        copyFileChecksumError :
                file checksum in Flash failed
        
        copyNoMemory :
                system running low on memory
        
        copyUnknownFailure :
                failure unknown"
		characteristics "-N ciscoFlashCopyStatus -O 1.3.6.1.4.1.9.9.10.1.2.1.1.8 -T INTEGER -A RO -X equal -F 0"

		readwrite enum ciscoFlashCopyNotifyOnCompletionE	ciscoFlashCopyNotifyOnCompletion
		description 	"Specifies whether or not a notification should be
        generated on the completion of the copy operation.
        If specified, ciscoFlashCopyCompletionTrap
        will be generated. It is the responsibility of the
        management entity to ensure that the SNMP administrative
        model is configured in such a way as to allow the
        notification to be delivered."
		characteristics "-N ciscoFlashCopyNotifyOnCompletion -O 1.3.6.1.4.1.9.9.10.1.2.1.1.9 -T INTEGER -A RW -X equal -F 0"

		readonly timeticks	ciscoFlashCopyTime
		description 	"Time taken for the copy operation. This object will
        be like a stopwatch, starting when the operation
        starts, stopping when the operation completes.
        If a management entity keeps a database of completion
        times for various operations, it can then use the
        stopwatch capability to display percentage completion
        time."
		characteristics "-N ciscoFlashCopyTime -O 1.3.6.1.4.1.9.9.10.1.2.1.1.10 -T TIMETICKS -A RO -X equal -F 0"

		readwrite enum ciscoFlashCopyEntryStatusE	ciscoFlashCopyEntryStatus
		description 	"The status of this table entry."
		characteristics "-N ciscoFlashCopyEntryStatus -O 1.3.6.1.4.1.9.9.10.1.2.1.1.11 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ciscoFlashCopyVerifyE	ciscoFlashCopyVerify
		description 	"Specifies whether the file that is copied need to
        be verified for integrity / authenticity, after
        copy succeeds. If it is set to true, and if the
        file that is copied doesn't have integrity /authenticity
        attachement, or the integrity / authenticity check
        fails, then the command will be aborted, and the file
        that is copied will be deleted from the destination
        file system."
		characteristics "-N ciscoFlashCopyVerify -O 1.3.6.1.4.1.9.9.10.1.2.1.1.12 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ciscoFlashCopyServerAddrTypeE	ciscoFlashCopyServerAddrType
		description 	"This object indicates the transport type of the
        address contained in
        ciscoFlashCopyServerAddrRev1. Optional.
        Will default to '1' (IPv4 address type)."
		characteristics "-N ciscoFlashCopyServerAddrType -O 1.3.6.1.4.1.9.9.10.1.2.1.1.13 -T INTEGER -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashCopyServerAddrRev1
		description 	"The server address to be used for any copy. Optional.
        Will default to 'FFFFFFFF'H  (or 255.255.255.255).
        
        The Format of this address depends on the value of the
        ciscoFlashCopyServerAddrType.
        
        This object deprecates the old
        ciscoFlashCopyServerAddress object."
		characteristics "-N ciscoFlashCopyServerAddrRev1 -O 1.3.6.1.4.1.9.9.10.1.2.1.1.14 -T STRING -A RW -X equal -F 0"

		readwrite octet[40]	ciscoFlashCopyRemotePassword
		description 	"Password used by ftp, sftp or scp for copying a file
        to/from an ftp/sftp/scp server. This object must be
        created when the ciscoFlashCopyProtocol is ftp, sftp or
        scp. Reading it returns a zero-length string for
        security reasons."
		characteristics "-N ciscoFlashCopyRemotePassword -O 1.3.6.1.4.1.9.9.10.1.2.1.1.15 -T STRING -A RW -X equal -F 0"

	)

	table	ciscoFlashPartitioningTable
	description "A table of Flash partitioning operation entries. Each
        entry represents a Flash partitioning operation that
        has been initiated."
	characteristics "-K ONE"
	(
		notaccessible int	ciscoFlashPartitioningSerialNumber
		description 	"Object which specifies a unique entry in the partitioning
        operations table. A management station wishing to initiate
        a partitioning operation should use a pseudo-random value
        for this object when creating or modifying an instance of
        a ciscoFlashPartitioningEntry."
		characteristics "-N ciscoFlashPartitioningSerialNumber -O 1.3.6.1.4.1.9.9.10.1.2.2.1.1 -T INTEGER -A NA -X equal -F 0"

		readwrite enum ciscoFlashPartitioningCommandE	ciscoFlashPartitioningCommand
		description 	"The partitioning command to be executed. Mandatory.
        If the command is unsupported, the
        partitioningInvalidOperation
        error will be reported in the operation status.
        
        Command                 Remarks
        partition               Partition a Flash device.
                                All the prerequisites for
                                partitioning must be met for
                                this command to succeed.
        
        Command table           Parameters
        1) partition            PartitioningDestinationName
                                PartitioningPartitionCount
                                PartitioningPartitionSizes (opt)
                                PartitioningNotifyOnCompletion (opt)"
		characteristics "-N ciscoFlashPartitioningCommand -O 1.3.6.1.4.1.9.9.10.1.2.2.1.2 -T INTEGER -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashPartitioningDestinationName
		description 	"Destination device name. This name will be the value
        obtained from FlashDeviceName.
        If the name is not specified, the default Flash device
        will be assumed."
		characteristics "-N ciscoFlashPartitioningDestinationName -O 1.3.6.1.4.1.9.9.10.1.2.2.1.3 -T STRING -A RW -X equal -F 0"

		readwrite gauge	ciscoFlashPartitioningPartitionCount
		description 	"This object is used to specify the number of
        partitions to be created. Its value cannot exceed
        the value of ciscoFlashDeviceMaxPartitions.
        
        To undo partitioning (revert to a single partition),
        this object must have the value 1."
		characteristics "-N ciscoFlashPartitioningPartitionCount -O 1.3.6.1.4.1.9.9.10.1.2.2.1.4 -T GAUGE -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashPartitioningPartitionSizes
		description 	"This object is used to explicitly specify the size
        of each partition to be created.
        The size of each partition will be in units of
        ciscoFlashDeviceMinPartitionSize.
        The value of this object will be in the form:
                <part1>:<part2>...:<partn>
        
        If partition sizes are not specified, the system
        will calculate default sizes based on the partition
        count, the minimum partition size, and the device
        size. Partition size need not be specified when
        undoing partitioning (partition count is 1).
        If partition sizes are specified, the number of
        sizes specified must exactly match the partition
        count. If not, the partitioning command will be
        rejected with the invalidPartitionSizes error ."
		characteristics "-N ciscoFlashPartitioningPartitionSizes -O 1.3.6.1.4.1.9.9.10.1.2.2.1.5 -T STRING -A RW -X equal -F 0"

		readonly enum ciscoFlashPartitioningStatusE	ciscoFlashPartitioningStatus
		description 	"The status of the specified partitioning operation.
        partitioningInProgress :
                specified operation is active
        
        partitioningOperationSuccess :
                specified operation is supported and completed
                successfully
        
        partitioningInvalidOperation :
                command invalid or command-protocol-device
                combination unsupported
        
        partitioningInvalidDestName :
                invalid target name (file or partition or
                device name) specified
        
        partitioningInvalidPartitionCount :
                invalid partition count specified for the
                partitioning command
        
        partitioningInvalidPartitionSizes :
                invalid partition size, or invalid count of
                partition sizes
        
        partitioningDeviceBusy :
                specified device is in use and locked by
                another process
        
        partitioningDeviceOpenError :
                invalid device name
        
        partitioningDeviceError :
                device read, write or erase error
        
        partitioningNoMemory :
                system running low on memory
        
        partitioningUnknownFailure :
                failure unknown"
		characteristics "-N ciscoFlashPartitioningStatus -O 1.3.6.1.4.1.9.9.10.1.2.2.1.6 -T INTEGER -A RO -X equal -F 0"

		readwrite enum ciscoFlashPartitioningNotifyOnCompletionE	ciscoFlashPartitioningNotifyOnCompletion
		description 	"Specifies whether or not a notification should be
        generated on the completion of the partitioning operation.
        If specified, ciscoFlashPartitioningCompletionTrap
        will be generated. It is the responsibility of the
        management entity to ensure that the SNMP administrative
        model is configured in such a way as to allow the
        notification to be delivered."
		characteristics "-N ciscoFlashPartitioningNotifyOnCompletion -O 1.3.6.1.4.1.9.9.10.1.2.2.1.7 -T INTEGER -A RW -X equal -F 0"

		readonly timeticks	ciscoFlashPartitioningTime
		description 	"Time taken for the operation. This object will
        be like a stopwatch, starting when the operation
        starts, stopping when the operation completes.
        If a management entity keeps a database of completion
        times for various operations, it can then use the
        stopwatch capability to display percentage completion
        time."
		characteristics "-N ciscoFlashPartitioningTime -O 1.3.6.1.4.1.9.9.10.1.2.2.1.8 -T TIMETICKS -A RO -X equal -F 0"

		readwrite enum ciscoFlashPartitioningEntryStatusE	ciscoFlashPartitioningEntryStatus
		description 	"The status of this table entry."
		characteristics "-N ciscoFlashPartitioningEntryStatus -O 1.3.6.1.4.1.9.9.10.1.2.2.1.9 -T INTEGER -A RW -X equal -F 0"

	)

	table	ciscoFlashMiscOpTable
	description "A table of misc Flash operation entries. Each
        entry represents a Flash operation that
        has been initiated."
	characteristics "-K ONE"
	(
		notaccessible int	ciscoFlashMiscOpSerialNumber
		description 	"Object which specifies a unique entry in the
        table. A management station wishing to initiate a
        flash operation should use a pseudo-random value for
        this object when creating or modifying an instance of
        a ciscoFlashMiscOpEntry."
		characteristics "-N ciscoFlashMiscOpSerialNumber -O 1.3.6.1.4.1.9.9.10.1.2.3.1.1 -T INTEGER -A NA -X equal -F 0"

		readwrite enum ciscoFlashMiscOpCommandE	ciscoFlashMiscOpCommand
		description 	"The command to be executed. Mandatory.
        Note that it is possible for a system to support
        multiple file systems (different file systems on
        different Flash devices, or different file systems
        on different partitions within a device). Each such
        file system may support only a subset of these commands.
        If a command is unsupported, the miscOpInvalidOperation(3)
        error will be reported in the operation status.
        
        Command         Remarks
        erase           Erase flash.
        verify          Verify flash file checksum.
        delete          Delete a file.
        undelete        Revive a deleted file .
                        Note that there are limits on
                        the number of times a file can
                        be deleted and undeleted. When
                        this limit is exceeded, the
                        system will return the appropriate
                        error.
        squeeze         Recover space occupied by
                        deleted files. This command
                        preserves the good files, erases
                        out the file system, then restores
                        the preserved good files.
        format          Format a flash device.
        
        Command table   Parameters
        erase           MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)
        verify          MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)
        delete          MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)
        undelete        MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)
        squeeze         MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)
        format          MiscOpDestinationName
                        MiscOpNotifyOnCompletion (opt)"
		characteristics "-N ciscoFlashMiscOpCommand -O 1.3.6.1.4.1.9.9.10.1.2.3.1.2 -T INTEGER -A RW -X equal -F 0"

		readwrite octet[255]	ciscoFlashMiscOpDestinationName
		description 	"Destination file, or partition name.
        File name must be of the form
                [device>:][<partition>:]<file>
        where <device> is a value obtained from FlashDeviceName,
              <partition> is obtained from FlashPartitionName
          and <file> is the name of a file in Flash.
        While leading and/or trailing whitespaces are acceptable,
        no whitespaces are allowed within the path itself.
        
        A management station could derive its own partition name
        as per the description for the ciscoFlashPartitionName
        object.
        If <device> is not specified, the default Flash device
        will be assumed.
        If <partition> is not specified, the default partition
        will be assumed. If a device is not partitioned into 2
        or more partitions, this value may be left out.
        
        For an operation on a partition, eg., the erase
        command, this object would specify the partition name
        in the form:
                [device>:][<partition>:]"
		characteristics "-N ciscoFlashMiscOpDestinationName -O 1.3.6.1.4.1.9.9.10.1.2.3.1.3 -T STRING -A RW -X equal -F 0"

		readonly enum ciscoFlashMiscOpStatusE	ciscoFlashMiscOpStatus
		description 	"The status of the specified operation.
        miscOpInProgress :
                specified operation is active
        
        miscOpOperationSuccess :
                specified operation is supported and completed
                successfully
        
        miscOpInvalidOperation :
                command invalid or command-protocol-device
                combination unsupported
        
        miscOpInvalidDestName :
                invalid target name (file or partition or
                device name) specified
        
        miscOpDeviceBusy :
                specified device is in use and locked by another
                process
        
        miscOpDeviceOpenError :
                invalid device name
        
        miscOpDeviceError :
                device read, write or erase error
        
        miscOpDeviceNotProgrammable :
                device is read-only but a write or erase
                operation was specified
        
        miscOpFileOpenError :
                invalid file name; file not found in partition
        
        miscOpFileDeleteFailure :
                file could not be deleted; delete count exceeded
        
        miscOpFileUndeleteFailure :
                file could not be undeleted; undelete count
                exceeded
        
        miscOpFileChecksumError :
                file has a bad checksum
        
        miscOpNoMemory :
                system running low on memory
        
        miscOpUnknownFailure :
                failure unknown
        
        miscOpSqueezeFailure :
                the squeeze operation failed
        
        miscOpNoSuchFile :
                a valid but nonexistent file name was specified
        
        miscOpFormatFailure :
                the format operation failed"
		characteristics "-N ciscoFlashMiscOpStatus -O 1.3.6.1.4.1.9.9.10.1.2.3.1.4 -T INTEGER -A RO -X equal -F 0"

		readwrite enum ciscoFlashMiscOpNotifyOnCompletionE	ciscoFlashMiscOpNotifyOnCompletion
		description 	"Specifies whether or not a notification should be
        generated on the completion of an operation.
        If specified, ciscoFlashMiscOpCompletionTrap
        will be generated. It is the responsibility of the
        management entity to ensure that the SNMP administrative
        model is configured in such a way as to allow the
        notification to be delivered."
		characteristics "-N ciscoFlashMiscOpNotifyOnCompletion -O 1.3.6.1.4.1.9.9.10.1.2.3.1.5 -T INTEGER -A RW -X equal -F 0"

		readonly timeticks	ciscoFlashMiscOpTime
		description 	"Time taken for the operation. This object will
        be like a stopwatch, starting when the operation
        starts, stopping when the operation completes.
        If a management entity keeps a database of completion
        times for various operations, it can then use the
        stopwatch capability to display percentage completion
        time."
		characteristics "-N ciscoFlashMiscOpTime -O 1.3.6.1.4.1.9.9.10.1.2.3.1.6 -T TIMETICKS -A RO -X equal -F 0"

		readwrite enum ciscoFlashMiscOpEntryStatusE	ciscoFlashMiscOpEntryStatus
		description 	"The status of this table entry."
		characteristics "-N ciscoFlashMiscOpEntryStatus -O 1.3.6.1.4.1.9.9.10.1.2.3.1.7 -T INTEGER -A RW -X equal -F 0"

	)

	group	ciscoFlashCfg
	description "(null)"
	characteristics "-K NONE"
	(
		readwrite enum ciscoFlashCfgDevInsNotifEnableE	ciscoFlashCfgDevInsNotifEnable
		description 	"Specifies whether or not a notification should be
        generated on the insertion of a Flash device.
        
        If the value of this object is 'true' then the
        ciscoFlashDeviceInsertedNotif notification
        will be generated.
        
        If the value of this object is 'false' then the
        ciscoFlashDeviceInsertedNotif notification
        will not be generated.
        
        It is the responsibility of the management entity to
        ensure that the SNMP administrative model is
        configured in such a way as to allow the
        notification to be delivered."
		characteristics "-N ciscoFlashCfgDevInsNotifEnable -O 1.3.6.1.4.1.9.9.10.1.4.1 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ciscoFlashCfgDevRemNotifEnableE	ciscoFlashCfgDevRemNotifEnable
		description 	"Specifies whether or not a notification should be
        generated on the removal of a Flash device.
        
        If the value of this object is 'true' then the
        ciscoFlashDeviceRemovedNotif notification
        will be generated.
        
        If the value of this object is 'false' then the
        ciscoFlashDeviceRemovedNotif notification
        will not be generated.
        
        It is the responsibility of the management entity to
        ensure that the SNMP administrative model is
        configured in such a way as to allow the
        notification to be delivered."
		characteristics "-N ciscoFlashCfgDevRemNotifEnable -O 1.3.6.1.4.1.9.9.10.1.4.2 -T INTEGER -A RW -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
