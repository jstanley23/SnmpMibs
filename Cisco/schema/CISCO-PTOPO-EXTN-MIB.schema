## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-PTOPO-EXTN-MIB
description "CISCO-PTOPO-EXTN-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	cPtopoConnExtLinkDirectionE (
	   1	"transmit"
	   2	"receive"
	   3	"both"
	)

	enum	cPtopoExtCdpDiscoveryStateE (
	   1	"cdpDisabled"
	   2	"interfaceDown"
	   3	"waiting"
	   4	"discovered"
	)

	enum	cPtopoExtCdpRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)


## Group and Table Declarations

	table	cPtopoConnExtTable
	description "This table augments the ptopoConnTable with information
        about the direction of physical network connections."
	characteristics "-K ???"
	(
		readwrite enum cPtopoConnExtLinkDirectionE	cPtopoConnExtLinkDirection
		description 	"The remote connection endpoint (identified by
        ptopoConnRemoteChassis and ptopoConnRemotePort of this row)
        may be connected to the local port (identified by
        ptopoConnLocalPort of this row) through either an
        unidirectional or bidirectional link. This object is used
        to indicate the directionality of the connection and in
        the case of unidirectional links this object indicates
        whether the remote connection endpoint is on the transmit
        or the receive link.
        
        For example, in case of optical interfaces where the
        transmitted and received signals travel on 2 different
        strands of fiber, it is possible that each fiber terminates
        at a different device. For instance, the transmit and
        receive fibers of the local port may be connected to
        different optical amplifiers. This object could then be
        used to indicate whether the remote device is on the
        transmit or the receive fiber of the local port.
        
        If the remote connection endpoint is connected to the
        transmit fiber of the local port then
        cPtopoConnExtLinkDirection is set to 'transmit'.
        If the remote connection endpoint is connected to the
        receive fiber of the local port then
        cPtopoConnExtLinkDirection is set to 'receive'.
        If both the transmit and receive fibers of the local port
        terminate at the same remote connection endpoint then this
        object is set to 'both'. Individual entries for 'transmit'
        and 'receive' should not be created in this case. Note that
        in the case of a port connected to a broadcast medium,
        there can be multiple entries associated with the port,
        with this object set to 'both'."
		characteristics "-N cPtopoConnExtLinkDirection -O 1.3.6.1.4.1.9.9.261.1.1.1.1 -T INTEGER -A RW -X equal -F 0"

	)

	table	cPtopoExtCdpTable
	description "This table contains a row for each local port (identified
        by the index of this table) for which the agent populates
        physical topology information (ptopoConnEntry) with neighbor
        information dynamically learned from the Cisco Discovery
        Protocol (CDP) running on this port or a proxy port."
	characteristics "-K ???"
	(
		notaccessible int	cPtopoExtCdpLocalChassis
		description 	"The entPhysicalIndex value used to identify the chassis
        component associated with the local port for which
        physical topology information is discovered via CDP."
		characteristics "-N cPtopoExtCdpLocalChassis -O 1.3.6.1.4.1.9.9.261.1.2.1.1 -T INTEGER -A NA -X equal -F 0"

		notaccessible int	cPtopoExtCdpLocalPort
		description 	"The entPhysicalIndex value used to identify the port
        component associated with the local port for which
        physical topology information is discovered via CDP."
		characteristics "-N cPtopoExtCdpLocalPort -O 1.3.6.1.4.1.9.9.261.1.2.1.2 -T INTEGER -A NA -X equal -F 0"

		readonly enum cPtopoExtCdpDiscoveryStateE	cPtopoExtCdpDiscoveryState
		description 	"This object indicates the state of physical topology
        discovery via CDP for the local port for which this row
        exists.
        
        The agent sets this object to 'cdpDisabled' if 
        cPtopoExtCdpProxyIf is set to zero and CDP has not been
        configured to run on the local port, or if CDP has not
        been configured to run on the proxy interface whose
        ifIndex is given by the non-zero value in
        cPtopoExtCdpProxyIf.
        
        The enumeration 'interfaceDown' indicates that this
        interface is down, when cPtopoExtCdpProxyIf is set to
        zero, or the proxy interface is down, when
        cPtopoExtCdpProxyIf is set to a non-zero value.
        
        After this row has been activated, if CDP is running (on
        this or the proxy interface) and no neighbors have been
        discovered yet, the agent sets this object to 'waiting'.
        
        The 'discovered' state indicates that one or more
        neighbors have been discovered through CDP and the agent
        has accordingly created ptopoConnEntry(s) in the
        PTOPO-MIB."
		characteristics "-N cPtopoExtCdpDiscoveryState -O 1.3.6.1.4.1.9.9.261.1.2.1.3 -T INTEGER -A RO -X equal -F 0"

		readwrite int	cPtopoExtCdpProxyIf
		description 	"Physical topology information for the local port
        (identified by cPtopoExtCdpLocalChassis and 
        cPtopoExtCdpLocalPort of this row) can be discovered
        from CDP running on the local port, if it is CDP capable
        or from CDP running on a proxy interface. In the case of
        optical ports running wavelength division multiplexing,
        the physical connector port on which the CDP packet is
        transmitted is different from the logical interface
        representing the wavelength on which CDP is running. In
        such a case, physical topology for the 'external' optical
        port can be learned from CDP running on one of the
        wavelengths.
        
        This object is set to zero if physical topology information
        for the local port is discovered from CDP running on itself.
        Otherwise, this object contains the ifIndex value of the CDP
        capable interface which is being used as proxy to learn
        physical topology information for the local port.
        
        Usage of this object is possible only if the local port
        is the 'External Port', as specified in the CDP protocol,
        for the proxy interface.
        
        This object may be modified when the associated
        cPtopoExtCdpRowStatus object has a value of 'active'."
		characteristics "-N cPtopoExtCdpProxyIf -O 1.3.6.1.4.1.9.9.261.1.2.1.4 -T INTEGER -A RW -X equal -F 0"

		readwrite enum cPtopoExtCdpRowStatusE	cPtopoExtCdpRowStatus
		description 	"This object is used to create and delete conceptual rows
        in the cPtopoExtCdpTable.
        
        Once this object has been set to 'active' it implies
        that physical topology discovery via CDP has been enabled
        for the local port for which this row exists.
        
        This object cannot be set to 'active' when any rows that
        were manually created for the local port exist in the
        ptopoConnTable. After this object is set to 'active',
        entries for this local port cannot be manually created in
        the ptopoConnTable.
        
        After the entry has been activated, this object cannot be
        set to any value other than 'destroy'. The row status
        never changes to 'notInService' after reaching the value
        'active'."
		characteristics "-N cPtopoExtCdpRowStatus -O 1.3.6.1.4.1.9.9.261.1.2.1.5 -T INTEGER -A RW -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
