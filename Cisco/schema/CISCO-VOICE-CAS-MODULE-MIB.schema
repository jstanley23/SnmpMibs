## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-VOICE-CAS-MODULE-MIB
description "CISCO-VOICE-CAS-MODULE-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	cvcmCasABitActionE (
	   1	"casBitNoAction"
	   2	"casBitSetToZero"
	   3	"casBitSetToOne"
	   4	"casBitInvertBit"
	   5	"casBitInvertABit"
	   6	"casBitInvertBBit"
	   7	"casBitInvertCBit"
	   8	"casBitInvertDBit"
	   9	"casBitABit"
	   10	"casBitBBit"
	   11	"casBitCBit"
	   12	"casBitDBit"
	)

	enum	cvcmCasBBitActionE (
	   1	"casBitNoAction"
	   2	"casBitSetToZero"
	   3	"casBitSetToOne"
	   4	"casBitInvertBit"
	   5	"casBitInvertABit"
	   6	"casBitInvertBBit"
	   7	"casBitInvertCBit"
	   8	"casBitInvertDBit"
	   9	"casBitABit"
	   10	"casBitBBit"
	   11	"casBitCBit"
	   12	"casBitDBit"
	)

	enum	cvcmCasCBitActionE (
	   1	"casBitNoAction"
	   2	"casBitSetToZero"
	   3	"casBitSetToOne"
	   4	"casBitInvertBit"
	   5	"casBitInvertABit"
	   6	"casBitInvertBBit"
	   7	"casBitInvertCBit"
	   8	"casBitInvertDBit"
	   9	"casBitABit"
	   10	"casBitBBit"
	   11	"casBitCBit"
	   12	"casBitDBit"
	)

	enum	cvcmCasDBitActionE (
	   1	"casBitNoAction"
	   2	"casBitSetToZero"
	   3	"casBitSetToOne"
	   4	"casBitInvertBit"
	   5	"casBitInvertABit"
	   6	"casBitInvertBBit"
	   7	"casBitInvertCBit"
	   8	"casBitInvertDBit"
	   9	"casBitABit"
	   10	"casBitBBit"
	   11	"casBitCBit"
	   12	"casBitDBit"
	)

	enum	cvcmCasBitRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)


## Group and Table Declarations

	table	cvcmABCDBitTemplateConfigTable
	description "This table is used to configure templates
         on the module/card. These templates provide
         mapping information between the incoming CAS 
         ABCD signaling bit patterns and the outgoing 
         ABCD signaling bit patterns. The outgoing 
         bit patterns are derived from the incoming 
         bit patterns by applying a set of actions to
         each incoming bit.
         
         Thus, this table essentially contains 
         configuration information about CAS ABCD 
         signaling bits.
        
         The ABCD bit carries signaling information
         describing off-hook, on-hook event etc on a
         T1 or E1. The pattern representations
         differ in CAS variants on a T1 and E1.
        
         For example:
         On T1:
         E&M protocol ABCD seized is 1100
         On E1:
         CAS-R2 signaling ABCD seized is 0001
        
         This table is configured on a per module/ card 
         basis.
        
         Further, one can have multiple different actions
         performed on the different bits (A, B, C or D)
         consecutively for the same incoming ABCD bit 
         index. However, a given bit position can only 
         have one action being performed on it for a given
         incoming bit pattern.
        
         For example, for a given incoming bit index, 
         one can define the 'A' bit to be set to 0, the 'B'
         bit to be swapped with the 'C' bit, the 'C' bit to be 
         swapped with the 'B' bit and the 'D' bit to be inverted.
         Thus, using this table, the user can create a template
         with name (cvcmCasTemplateName) 'Template1' where for 
         incoming pattern (cvcmABCDIncomingPattern) '0000', 
         the action on the A bit (cvcmCasABitAction) is 
         'casBitSetToZero', the action on the B bit 
         (cvcmCasBBitAction) is 'casBitCBit', the action on the 
         C bit (cvcmCasCBitAction) is 'casBitBBit' and the action
         on the D bit (cvcmCasDBitAction) is 'casBitInvertBit'.
         This will create one entry in 'Template1' where the 
         resultant outgoing pattern (cvcmABCDOutgoingPattern)
         will be '0001'."
	characteristics "-K THREE"
	(
		notaccessible gauge	cvcmModuleIndex
		description 	" This object uniquely identifies the card/ module
          where this table resides. It could be the slot
          number of the module or be 1 where 'module' is 
          not applicable."
		characteristics "-N cvcmModuleIndex -O 1.3.6.1.4.1.9.9.389.1.1.1.1.1 -T GAUGE -A NA -X equal -F 0"

		notaccessible gauge	cvcmCasTemplateIndex
		description 	"This object will index into the template that 
         is configured in this table."
		characteristics "-N cvcmCasTemplateIndex -O 1.3.6.1.4.1.9.9.389.1.1.1.1.2 -T GAUGE -A NA -X equal -F 0"

		notaccessible gauge	cvcmABCDPatternIndex
		description 	"Will be used to index into a particular pattern
         mapping in the template that is configured.
         Since there are only 4 signaling bits (A, B, C, D),
         there can only be (2^4) or 16 patterns per 
         template. "
		characteristics "-N cvcmABCDPatternIndex -O 1.3.6.1.4.1.9.9.389.1.1.1.1.3 -T GAUGE -A NA -X equal -F 0"

		readonly int	cvcmModulePhysicalIndex
		description 	"This object represents the entPhysicalIndex of 
         the module where this table is being configured. 
         If the entPhysicalTable is not supported on the 
         SNMP agent, then the value of this object will 
         be zero."
		characteristics "-N cvcmModulePhysicalIndex -O 1.3.6.1.4.1.9.9.389.1.1.1.1.4 -T INTEGER -A RO -X equal -F 0"

		readwrite octet[255]	cvcmCasTemplateName
		description 	"This object identifies the name of the template
         configured.
         This object needs to be unique among all the
         instances of the cvcmABCDBitTemplateConfigTable.
         The SNMP agent will need to validate this value
         for uniqueness."
		characteristics "-N cvcmCasTemplateName -O 1.3.6.1.4.1.9.9.389.1.1.1.1.5 -T STRING -A RW -X equal -F 0"

		readwrite octet[2]	cvcmABCDIncomingPattern
		description 	"This object identifies the ABCD signaling bits
         that are received by the module. The actions
         specified in 'cvcmCasABitAction', 'cvcmCasBBitAction',
         'cvcmCasCBitAction' and 'cvcmCasDBitAction' are applied
         to this object."
		characteristics "-N cvcmABCDIncomingPattern -O 1.3.6.1.4.1.9.9.389.1.1.1.1.6 -T STRING -A RW -X equal -F 0"

		readonly octet[2]	cvcmABCDOutgoingPattern
		description 	"This object identifies the ABCD signaling bits
         defined by user, and downloaded to DSP signaling
         channel. 
         This pattern is derived from the actions specified in 
         'cvcmCasABitAction', 'cvcmCasBBitAction', 'cvcmCasCBitAction' 
         and 'cvcmCasDBitAction'. 
         The same pattern can map to different 
         cvcmABCDIncomingPattern depending on the set of actions.
         This pattern is mapped to input ABCD bit pattern 
         received and reported to the TDM or network side."
		characteristics "-N cvcmABCDOutgoingPattern -O 1.3.6.1.4.1.9.9.389.1.1.1.1.7 -T STRING -A RO -X equal -F 0"

		readwrite enum cvcmCasABitActionE	cvcmCasABitAction
		description 	"This object identifies the action on the 
         'A' bit of the incoming ABCD bit pattern
         specified in cvcmABCDIncomingPattern.
         For this object,
         'cvcmInvertBit' is same as 'cvcmInvertABit',
         'cvcmNoAction'  is same as 'cvcmABit'."
		characteristics "-N cvcmCasABitAction -O 1.3.6.1.4.1.9.9.389.1.1.1.1.8 -T INTEGER -A RW -X equal -F 0"

		readwrite enum cvcmCasBBitActionE	cvcmCasBBitAction
		description 	"This object identifies the action on the 
         'B' bit of the incoming ABCD bit pattern
         specified in cvcmABCDIncomingPattern.
         For this object, 
         'cvcmInvertBit' is same as 'cvcmInvertBBit',
         'cvcmNoAction'  is same as 'cvcmBBit'."
		characteristics "-N cvcmCasBBitAction -O 1.3.6.1.4.1.9.9.389.1.1.1.1.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum cvcmCasCBitActionE	cvcmCasCBitAction
		description 	"This object identifies the action on the 
         'C' bit of the incoming ABCD bit pattern
         specified in cvcmABCDIncomingPattern.
         For this object,
         'cvcmInvertBit' is same as 'cvcmInvertCBit',
         'cvcmNoAction'  is same as 'cvcmCBit'."
		characteristics "-N cvcmCasCBitAction -O 1.3.6.1.4.1.9.9.389.1.1.1.1.10 -T INTEGER -A RW -X equal -F 0"

		readwrite enum cvcmCasDBitActionE	cvcmCasDBitAction
		description 	"This object identifies the action on the 
         'D' bit of the incoming ABCD bit pattern
         specified in cvcmABCDIncomingPattern.
         For this object, 
         'cvcmInvertBit' is same as 'cvcmInvertDBit',
         'cvcmNoAction'  is same as 'cvcmDBit'."
		characteristics "-N cvcmCasDBitAction -O 1.3.6.1.4.1.9.9.389.1.1.1.1.11 -T INTEGER -A RW -X equal -F 0"

		readwrite enum cvcmCasBitRowStatusE	cvcmCasBitRowStatus
		description 	"An entry may be created using the 'createAndGo'
         option.  When the row is successfully created, 
         the object will be set to 'active' by the agent. 
         An entry may be deleted by setting the object 
         to 'destroy'."
		characteristics "-N cvcmCasBitRowStatus -O 1.3.6.1.4.1.9.9.389.1.1.1.1.12 -T INTEGER -A RW -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
