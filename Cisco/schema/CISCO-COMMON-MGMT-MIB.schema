## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-COMMON-MGMT-MIB
description "CISCO-COMMON-MGMT-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	ccmCommonUsersGlobalEnforcePrivE (
	   1	"true"
	   2	"false"
	)

	enum	ccmCommonUserSshKeyConfiguredE (
	   1	"true"
	   2	"false"
	)

	enum	ccmCommonUserCredTypeE (
	   1	"none"
	   2	"localCredentialStore"
	   3	"remoteCredentialStore"
	)

	enum	ccmCommonUserStorageTypeE (
	   1	"other"
	   2	"volatile"
	   3	"nonVolatile"
	   4	"permanent"
	   5	"readOnly"
	)

	enum	ccmCommonUserRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ccmCommonUserRoleStorageTypeE (
	   1	"other"
	   2	"volatile"
	   3	"nonVolatile"
	   4	"permanent"
	   5	"readOnly"
	)

	enum	ccmCommonUserRoleRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)


## Group and Table Declarations

	group	ccmUserConfig
	description "(null)"
	characteristics "-K NONE"
	(
		readonly gauge	ccmCommonMaxUsers
		description 	"Maximum number of common users that can be configured
        on this device. i.e., the maximum number of entries in 
        the ccmCommonUserTable.
        
        0 means maximum number of users is dynamically 
        determined, e.g., depending on memory availability."
		characteristics "-N ccmCommonMaxUsers -O 1.3.6.1.4.1.9.9.443.1.1.1 -T GAUGE -A RO -X equal -F 0"

		readonly gauge	ccmCommonUsers
		description 	"Number of common users that are currently configured on
        this device. i.e., the number of entries in the
        ccmCommonUserTable."
		characteristics "-N ccmCommonUsers -O 1.3.6.1.4.1.9.9.443.1.1.2 -T GAUGE -A RO -X equal -F 0"

		readwrite enum ccmCommonUsersGlobalEnforcePrivE	ccmCommonUsersGlobalEnforcePriv
		description 	"This object specifies whether the SNMP agent enforces
        the use of encryption for SNMPv3 messages globally on 
        all the users in the system.
        
        The 'vacmAccessSecurityLevel' determines the acceptable
        security levels per group and is set to noAuthnoPriv 
        default unless otherwise configured. The actual access
        to the mib objects in a SNMP message is controlled by
        vacmAccessTable. This object provides the configuration
        at a higher level to enforce privacy  without any 
        introspection of the mib objects in the SNMP message.
        
        When the privacy is enforced globally, for any SNMPv3
        PDU request with securityLevel of either 'noAuthNoPriv'
        and 'authNoPriv', the SNMP agent responds with an
        'authorizationError'."
		characteristics "-N ccmCommonUsersGlobalEnforcePriv -O 1.3.6.1.4.1.9.9.443.1.1.3 -T INTEGER -A RW -X equal -F 0"

		readonly octet[11]	ccmCommonUserLastChange
		description 	"The local date and time when the user database -
        ccmCommonUserTable configuration was last changed. 
        This object will be set to zero on power cycle or 
        on reboot of the system. Also, if the clock is 
        changed on local system it is set to zero."
		characteristics "-N ccmCommonUserLastChange -O 1.3.6.1.4.1.9.9.443.1.1.4 -T STRING -A RO -X equal -F 0"

		readwrite gauge	ccmCommonUserCacheTimeout
		description 	"This object specifies maximum timeout value for
        caching the user credentials in the local system.
        Such caching is used in remote authentication
        mechanism like AAA Server based authentication.
        This applies to the common user entries as
        represented by 'ccmCommonUserTable' where
        the value of 'ccmCommonUserCredType' is
        'remoteCredentialStore'."
		characteristics "-N ccmCommonUserCacheTimeout -O 1.3.6.1.4.1.9.9.443.1.1.7 -T GAUGE -A RW -X equal -F 0"

	)

	table	ccmCommonUserTable
	description "This table lists all the common users configured on
        this device. A common user is a user who is common
        across SNMP, CLI and other device access methods.
        
        Certain access methods might need the user created 
        to be standard compliant. For example - for SNMP, the
        user created need to be compliant to RFC 3414 
        (SNMP-USER-BASED-SM-MIB). When a common user is 
        created in this table, a corresponding SNMP user is 
        created in the 'usmUserTable' with corresponding
        instance of usmUserStorageType set to readOnly . 
        Similarly when a common user is deleted from this 
        table, the corresponding  entry in the 'usmUserTable'
        is deleted."
	characteristics "-K ???"
	(
		notaccessible octet[32]	ccmCommonUserName
		description 	"Name of the common user."
		characteristics "-N ccmCommonUserName -O 1.3.6.1.4.1.9.9.443.1.1.5.1.1 -T STRING -A NA -X equal -F 0"

		readwrite octet[255]	ccmCommonUserPassword
		description 	"Password of the common user.
        
        For SNMP, this password is used for both authentication
        and privacy. For CLI and XML, it is used for 
        authentication only.
        
        A zero-length string is always returned when this
        object is read."
		characteristics "-N ccmCommonUserPassword -O 1.3.6.1.4.1.9.9.443.1.1.5.1.2 -T STRING -A RW -X equal -F 0"

		readwrite octet[11]	ccmCommonUserExpiryDate
		description 	"The date on which this user will expire. Note
        that non-date related octets in this object are 
        ignored.
        
        If the all the date related octets have value 
        '00'H, then user never expires."
		characteristics "-N ccmCommonUserExpiryDate -O 1.3.6.1.4.1.9.9.443.1.1.5.1.3 -T STRING -A RW -X equal -F 0"

		readwrite octet[255]	ccmCommonUserSshKeyFilename
		description 	"The name of the file storing the SSH public key.
        The SSH public key is used to authenticate the SSH 
        session for this user. Note that this object 
        applies to only CLI user.
        
        The content within SSH Key file can be one of the
        following:
        
           - SSH Public Key in OpenSSH format
        
           - SSH Public Key in IETF SECSH (Commercial
             SSH public key format)
        
           - SSH Client Certificate in PEM (privacy-enhanced
             mail format) from which the public key will be 
             extracted
        
           - SSH Client Certificate DN (Distinguished Name) 
             for certificate based authentication 
        
        This object is used to configure the SSH public key for
        a user. When this object is read, the agent may return
        a zero length string. However, the value of the 
        corresponding instance of ccmCommonUserSshKeyConfigured
        should indicate if the key is configured or not."
		characteristics "-N ccmCommonUserSshKeyFilename -O 1.3.6.1.4.1.9.9.443.1.1.5.1.4 -T STRING -A RW -X equal -F 0"

		readonly enum ccmCommonUserSshKeyConfiguredE	ccmCommonUserSshKeyConfigured
		description 	"This object specifies whether the user corresponding
        to this entry is configured with SSH public key.
        
        The value of 'true' indicates that the user is 
        configured with SSH public key. The value of 'false'
        indicates the user is not configured with SSH public 
        key."
		characteristics "-N ccmCommonUserSshKeyConfigured -O 1.3.6.1.4.1.9.9.443.1.1.5.1.5 -T INTEGER -A RO -X equal -F 0"

		readwrite objectid	ccmCommonUserSNMPAuthProtocol
		description 	"An indication of whether messages sent on behalf of
        this user to/from the SNMP engine can be authenticated,
        and if so, the type of authentication protocol which is
        used.
        
        An instance of this object is created concurrently
        with the creation of any other object instance for
        the same user (i.e., as part of the processing of
        the set operation which creates the first object
        instance in the same conceptual row).
        
        If an initial set operation (i.e. at row creation time)
        tries to set a value for an unknown or unsupported
        protocol, then a 'wrongValue' error must be returned.
        
        Once instantiated, the value of such an instance of
        this object can only be changed via a set operation to
        the value of the usmNoAuthProtocol.
        
        If a set operation tries to change the value of an
        existing instance of this object to any value other
        than usmNoAuthProtocol, then an 'inconsistentValue'
        error must be returned.
        
        If a set operation tries to set the value to the
        usmNoAuthProtocol while the 
        ccmCommonUserSNMPPrivProtocol value in the same row is
        not equal to usmNoPrivProtocol, then an 
        'inconsistentValue' error must be returned. That means
        that an SNMP command generator application must first
        ensure that the usmUserPrivProtocol is set to the 
        usmNoPrivProtocol value before it can set the 
        usmUserAuthProtocol value to usmNoAuthProtocol.
        
        The value of an instance of this object directly maps
        to a corresponding instance of usmUserAuthProtocol in
        the usmUserTable."
		characteristics "-N ccmCommonUserSNMPAuthProtocol -O 1.3.6.1.4.1.9.9.443.1.1.5.1.6 -T OBJECTID -A RW -X equal -F 0"

		readwrite objectid	ccmCommonUserSNMPPrivProtocol
		description 	"An indication of whether messages sent on behalf of
        this user to/from the SNMP engine can be protected 
        from disclosure, and if so, the type of privacy 
        protocol which is used.
        
        An instance of this object is created concurrently
        with the creation of any other object instance for
        the same user (i.e., as part of the processing of
        the set operation which creates the first object
        instance in the same conceptual row).
        
        If an initial set operation (i.e. at row creation time)
        tries to set a value for an unknown or unsupported
        protocol, then a 'wrongValue' error must be returned.
        
        Once instantiated, the value of such an instance of
        this object can only be changed via a set operation to
        the value of the usmNoPrivProtocol.
        
        If a set operation tries to change the value of an
        existing instance of this object to any value other
        than usmNoPrivProtocol, then an 'inconsistentValue'
        error must be returned.
        
        Note that if any privacy protocol is used, then you
        must also use an authentication protocol. In other
        words, if usmUserPrivProtocol is set to anything else
        than usmNoPrivProtocol, then the corresponding instance
        of usmUserAuthProtocol cannot have a value of 
        usmNoAuthProtocol. If it does, then an 
        'inconsistentValue' error must be returned.
        
        The value of an instance of this object directly maps
        to a corresponding instance of usmUserPrivProtocol in
        the usmUserTable."
		characteristics "-N ccmCommonUserSNMPPrivProtocol -O 1.3.6.1.4.1.9.9.443.1.1.5.1.7 -T OBJECTID -A RW -X equal -F 0"

		readonly enum ccmCommonUserCredTypeE	ccmCommonUserCredType
		description 	"The type of the credential store of the user.
        
        When a row is created in this table by a user, the 
        user entry is created in a credential store local to
        the device.
        
        In case of remote authentication mechanism like AAA
        Server based authentication, credentials are stored
        in other(remote) system/device."
		characteristics "-N ccmCommonUserCredType -O 1.3.6.1.4.1.9.9.443.1.1.5.1.8 -T INTEGER -A RO -X equal -F 0"

		readwrite enum ccmCommonUserStorageTypeE	ccmCommonUserStorageType
		description 	"The storage type for this conceptual row.
        Conceptual rows having the value 'permanent' need
        not allow write-access to any columnar objects in
        the row."
		characteristics "-N ccmCommonUserStorageType -O 1.3.6.1.4.1.9.9.443.1.1.5.1.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ccmCommonUserRowStatusE	ccmCommonUserRowStatus
		description 	"Status of the user."
		characteristics "-N ccmCommonUserRowStatus -O 1.3.6.1.4.1.9.9.443.1.1.5.1.10 -T INTEGER -A RW -X equal -F 0"

	)

	table	ccmCommonUserRoleTable
	description "This table provides a mechanism to map a common
        user represented by ccmCommonUserName to one or 
        more roles. These roles provide access control 
        policies for a principal. Note that all the roles
        used in the this table have to be present in the
        commonRoleTable of CISCO-COMMON-ROLES-MIB.
        
        For Common User - Role assignments created in this
        table, for SNMP user access, the corresponding 
        entries are created in the vacmSecurityToGroupTable
        (of SNMP-VIEW-BASED-ACM-MIB) in line with View-based
        Access Control Model (RFC3415) and 
        cvacmSecurityToGroupTable (of CISCO-SNMP-VACM-EXT-MIB)
        to represent all the  mappings. All such instances in
        SNMP tables are created with corresponding StorageType
        set to readOnly.
        
        Note that it is not necessary to update this table if 
        the user-role mapping data is changed using 
        corresponding access methods. e.g., if the SNMPv3 
        user-group mapping using vacmSecurityToGroupTable 
        and cvacmSecurityToGroupTable is changed, it is not
        necessary to reflect that change in this table."
	characteristics "-K ???"
	(
		notaccessible octet[32]	ccmCommonUserRoleName
		description 	"Name of the role."
		characteristics "-N ccmCommonUserRoleName -O 1.3.6.1.4.1.9.9.443.1.1.6.1.1 -T STRING -A NA -X equal -F 0"

		readwrite enum ccmCommonUserRoleStorageTypeE	ccmCommonUserRoleStorageType
		description 	"The storage type for this conceptual row.
        Conceptual rows having the value 'permanent' need
        not allow write-access to any columnar objects in
        the row."
		characteristics "-N ccmCommonUserRoleStorageType -O 1.3.6.1.4.1.9.9.443.1.1.6.1.2 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ccmCommonUserRoleRowStatusE	ccmCommonUserRoleRowStatus
		description 	"Status of the role list entry."
		characteristics "-N ccmCommonUserRoleRowStatus -O 1.3.6.1.4.1.9.9.443.1.1.6.1.3 -T INTEGER -A RW -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
