## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy MAU-MIB
description "MAU-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	rpMauStatusE (
	   1	"other"
	   2	"unknown"
	   3	"operational"
	   4	"standby"
	   5	"shutdown"
	   6	"reset"
	)

	enum	rpMauMediaAvailableE (
	   1	"other"
	   2	"unknown"
	   3	"available"
	   4	"notAvailable"
	   5	"remoteFault"
	   6	"invalidSignal"
	   7	"remoteJabber"
	   8	"remoteLinkLoss"
	   9	"remoteTest"
	   10	"offline"
	   11	"autoNegError"
	)

	enum	rpMauJabberStateE (
	   1	"other"
	   2	"unknown"
	   3	"noJabber"
	   4	"jabbering"
	)

	enum	rpJackTypeE (
	   1	"other"
	   2	"rj45"
	   3	"rj45S"
	   4	"db9"
	   5	"bnc"
	   6	"fAUI"
	   7	"mAUI"
	   8	"fiberSC"
	   9	"fiberMIC"
	   10	"fiberST"
	   11	"telco"
	   12	"mtrj"
	   13	"hssdc"
	   14	"fiberLC"
	)

	enum	ifMauStatusE (
	   1	"other"
	   2	"unknown"
	   3	"operational"
	   4	"standby"
	   5	"shutdown"
	   6	"reset"
	)

	enum	ifMauMediaAvailableE (
	   1	"other"
	   2	"unknown"
	   3	"available"
	   4	"notAvailable"
	   5	"remoteFault"
	   6	"invalidSignal"
	   7	"remoteJabber"
	   8	"remoteLinkLoss"
	   9	"remoteTest"
	   10	"offline"
	   11	"autoNegError"
	   12	"pmdLinkFault"
	   13	"wisFrameLoss"
	   14	"wisSignalLoss"
	   15	"pcsLinkFault"
	   16	"excessiveBER"
	   17	"dxsLinkFault"
	   18	"pxsLinkFault"
	)

	enum	ifMauJabberStateE (
	   1	"other"
	   2	"unknown"
	   3	"noJabber"
	   4	"jabbering"
	)

	enum	ifMauAutoNegSupportedE (
	   1	"true"
	   2	"false"
	)

	enum	ifJackTypeE (
	   1	"other"
	   2	"rj45"
	   3	"rj45S"
	   4	"db9"
	   5	"bnc"
	   6	"fAUI"
	   7	"mAUI"
	   8	"fiberSC"
	   9	"fiberMIC"
	   10	"fiberST"
	   11	"telco"
	   12	"mtrj"
	   13	"hssdc"
	   14	"fiberLC"
	)

	enum	ifMauAutoNegAdminStatusE (
	   1	"enabled"
	   2	"disabled"
	)

	enum	ifMauAutoNegRemoteSignalingE (
	   1	"detected"
	   2	"notdetected"
	)

	enum	ifMauAutoNegConfigE (
	   1	"other"
	   2	"configuring"
	   3	"complete"
	   4	"disabled"
	   5	"parallelDetectFail"
	)

	enum	ifMauAutoNegRestartE (
	   1	"restart"
	   2	"norestart"
	)

	enum	ifMauAutoNegRemoteFaultAdvertisedE (
	   1	"noError"
	   2	"offline"
	   3	"linkFailure"
	   4	"autoNegError"
	)

	enum	ifMauAutoNegRemoteFaultReceivedE (
	   1	"noError"
	   2	"offline"
	   3	"linkFailure"
	   4	"autoNegError"
	)

	enum	broadMauXmtRcvSplitTypeE (
	   1	"other"
	   2	"single"
	   3	"dual"
	)


## Group and Table Declarations

	table	rpMauTable
	description "Table of descriptive and status information
        about the MAU(s) attached to the ports of a
        repeater."
	characteristics "-K THREE"
	(
		readonly int	rpMauGroupIndex
		description 	"This variable uniquely identifies the group
        containing the port to which the MAU described
        by this entry is connected.
        
        Note:  In practice, a group will generally be
        a field-replaceable unit (i.e., module, card,
        or board) that can fit in the physical system
        enclosure, and the group number will correspond
        to a number marked on the physical enclosure.
        
        The group denoted by a particular value of this
        object is the same as the group denoted by the
        same value of rptrGroupIndex."
		characteristics "-N rpMauGroupIndex -O 1.3.6.1.2.1.26.1.1.1.1 -T INTEGER -A RO -X equal -F 0"

		readonly int	rpMauPortIndex
		description 	"This variable uniquely identifies the repeater
        port within group rpMauGroupIndex to which the
        MAU described by this entry is connected."
		characteristics "-N rpMauPortIndex -O 1.3.6.1.2.1.26.1.1.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly int	rpMauIndex
		description 	"This variable uniquely identifies the MAU
        described by this entry from among other
        MAUs connected to the same port
        (rpMauPortIndex)."
		characteristics "-N rpMauIndex -O 1.3.6.1.2.1.26.1.1.1.3 -T INTEGER -A RO -X equal -F 0"

		readonly objectid	rpMauType
		description 	"This object identifies the MAU type.  Values for
        standard IEEE 802.3 MAU types are defined above.
        If the MAU type is unknown, the object identifier
        
        unknownMauType OBJECT IDENTIFIER ::= { 0 0 }
        is returned.  Note that unknownMauType is a
        syntactically valid object identifier, and any
        conformant implementation of ASN.1 and the BER
        must be able to generate and recognize this
        value."
		characteristics "-N rpMauType -O 1.3.6.1.2.1.26.1.1.1.4 -T OBJECTID -A RO -X equal -F 0"

		readwrite enum rpMauStatusE	rpMauStatus
		description 	"The current state of the MAU.  This object MAY
        be implemented as a read-only object by those
        agents and MAUs that do not implement software
        control of the MAU state.  Some agents may not
        support setting the value of this object to some
        of the enumerated values.
        
        The value other(1) is returned if the MAU is in
        a state other than one of the states 2 through
        6.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.
        
        A MAU in the operational(3) state is fully
        functional, operates, and passes signals to its
        attached DTE or repeater port in accordance to
        its specification.
        
        A MAU in standby(4) state forces DI and CI to
        idle and the media transmitter to idle or fault,
        if supported.  Standby(4) mode only applies to
        link type MAUs.  The state of
        rpMauMediaAvailable is unaffected.
        
        A MAU in shutdown(5) state assumes the same
        condition on DI, CI, and the media transmitter
        as though it were powered down or not connected.
        The MAU MAY return other(1) value for the
        rpMauJabberState and rpMauMediaAvailable objects
        when it is in this state.  For an AUI, this
        state will remove power from the AUI.
        
        Setting this variable to the value reset(6)
        resets the MAU in the same manner as a
        power-off, power-on cycle of at least one-half
        second would.  The agent is not required to
        return the value reset (6).
        
        Setting this variable to the value
        operational(3), standby(4), or shutdown(5)
        causes the MAU to assume the respective state
        except that setting a mixing-type MAU or an AUI
        to standby(4) will cause the MAU to enter the
        
        shutdown state."
		characteristics "-N rpMauStatus -O 1.3.6.1.2.1.26.1.1.1.5 -T INTEGER -A RW -X equal -F 0"

		readonly enum rpMauMediaAvailableE	rpMauMediaAvailable
		description 	"If the MAU is a link or fiber type (FOIRL,
        10BASE-T, 10BASE-F) then this is equivalent to
        the link test fail state/low light function.
        For an AUI or a coax (including broadband) MAU
        this indicates whether or not loopback is
        detected on the DI circuit.  The value of this
        attribute persists between packets for MAU types
        AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE-FP.
        
        The value other(1) is returned if the
        mediaAvailable state is not one of 2 through 11.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.  At power-up or following a
        reset, the value of this attribute will be
        unknown for AUI, coax, and 10BASE-FP MAUs.  For
        these MAUs loopback will be tested on each
        transmission during which no collision is
        detected.  If DI is receiving input when DO
        returns to IDL after a transmission and there
        has been no collision during the transmission
        then loopback will be detected.  The value of
        this attribute will only change during
        non-collided transmissions for AUI, coax, and
        10BASE-FP MAUs.
        
        For 100Mbps and 1000Mbps MAUs, the enumerations
        match the states within the respective link
        integrity state diagrams, fig 32-16, 23-12 and
        24-15 of sections 32, 23 and 24 of [IEEE802.3].
        Any MAU which implements management of
        auto-negotiation will map remote fault
        indication to remote fault.
        
        The value available(3) indicates that the link,
        light, or loopback is normal.  The value
        notAvailable(4) indicates link loss, low light,
        or no loopback.
        
        The value remoteFault(5) indicates that a fault
        has been detected at the remote end of the link.
        This value applies to 10BASE-FB, 100BASE-T4 Far
        End Fault Indication and non-specified remote
        faults from a system running auto-negotiation.
        The values remoteJabber(7), remoteLinkLoss(8),
        and remoteTest(9) SHOULD be used instead of
        remoteFault(5) where the reason for remote fault
        is identified in the remote signaling protocol.
        
        The value invalidSignal(6) indicates that an
        invalid signal has been received from the other
        end of the link.  invalidSignal(6) applies only
        to MAUs of type 10BASE-FB.
        
        Where an IEEE Std 802.3-2002 clause 22 MII
        is present, a logic one in the remote fault bit
        (reference section 22.2.4.2.8 of that document)
        maps to the value remoteFault(5), and a logic
        zero in the link status bit (reference section
        22.2.4.2.10 of that document) maps to the value
        notAvailable(4).  The value notAvailable(4)
        takes precedence over the value remoteFault(5).
        
        Any MAU that implements management of clause 37
        Auto-Negotiation will map the received Remote
        Fault (RF1 and RF2) bit values for Offline to
        offline(10), Link Failure to remoteFault(5) and
        Auto-Negotiation Error to autoNegError(11)."
		characteristics "-N rpMauMediaAvailable -O 1.3.6.1.2.1.26.1.1.1.6 -T INTEGER -A RO -X equal -F 0"

		readonly counter	rpMauMediaAvailableStateExits
		description 	"A count of the number of times that
        rpMauMediaAvailable for this MAU instance leaves
        the state available(3).
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of rptrMonitorPortLastChange."
		characteristics "-N rpMauMediaAvailableStateExits -O 1.3.6.1.2.1.26.1.1.1.7 -T COUNTER -A RO -X equal -F 0"

		readonly enum rpMauJabberStateE	rpMauJabberState
		description 	"The value other(1) is returned if the jabber
        state is not 2, 3, or 4.  The agent MUST always
        return other(1) for MAU type dot3MauTypeAUI.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.
        
        If the MAU is not jabbering the agent returns
        noJabber(3).  This is the 'normal' state.
        
        If the MAU is in jabber state the agent returns
        the jabbering(4) value."
		characteristics "-N rpMauJabberState -O 1.3.6.1.2.1.26.1.1.1.8 -T INTEGER -A RO -X equal -F 0"

		readonly counter	rpMauJabberingStateEnters
		description 	"A count of the number of times that
        mauJabberState for this MAU instance enters the
        state jabbering(4).  For MAUs of type
        
        dot3MauTypeAUI, dot3MauType100BaseT4,
        dot3MauType100BaseTX, dot3MauType100BaseFX and
        all 1000Mbps types, this counter will always
        indicate zero.
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of rptrMonitorPortLastChange."
		characteristics "-N rpMauJabberingStateEnters -O 1.3.6.1.2.1.26.1.1.1.9 -T COUNTER -A RO -X equal -F 0"

		readonly counter	rpMauFalseCarriers
		description 	"A count of the number of false carrier events
        during IDLE in 100BASE-X links.  This counter
        does not increment at the symbol rate.  It can
        increment after a valid carrier completion at a
        maximum rate of once per 100 ms until the next
        carrier event.
        
        This counter increments only for MAUs of type
        dot3MauType100BaseT4, dot3MauType100BaseTX, and
        dot3MauType100BaseFX and all 1000Mbps types.
        
        For all other MAU types, this counter will
        always indicate zero.
        
        The approximate minimum time for rollover of
        this counter is 7.4 hours.
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of rptrMonitorPortLastChange."
		characteristics "-N rpMauFalseCarriers -O 1.3.6.1.2.1.26.1.1.1.10 -T COUNTER -A RO -X equal -F 0"

	)

	table	rpJackTable
	description "Information about the external jacks attached
        to MAUs attached to the ports of a repeater."
	characteristics "-K ONE"
	(
		notaccessible int	rpJackIndex
		description 	"This variable uniquely identifies the jack
        described by this entry from among other jacks
        attached to the same MAU (rpMauIndex)."
		characteristics "-N rpJackIndex -O 1.3.6.1.2.1.26.1.2.1.1 -T INTEGER -A NA -X equal -F 0"

		readonly enum rpJackTypeE	rpJackType
		description 	"The jack connector type, as it appears on the
        outside of the system."
		characteristics "-N rpJackType -O 1.3.6.1.2.1.26.1.2.1.2 -T INTEGER -A RO -X equal -F 0"

	)

	table	ifMauTable
	description "Table of descriptive and status information
        about MAU(s) attached to an interface."
	characteristics "-K TWO"
	(
		readonly int	ifMauIfIndex
		description 	"This variable uniquely identifies the interface
        to which the MAU described by this entry is
        connected."
		characteristics "-N ifMauIfIndex -O 1.3.6.1.2.1.26.2.1.1.1 -T INTEGER -A RO -X equal -F 0"

		readonly int	ifMauIndex
		description 	"This variable uniquely identifies the MAU
        described by this entry from among other MAUs
        connected to the same interface (ifMauIfIndex)."
		characteristics "-N ifMauIndex -O 1.3.6.1.2.1.26.2.1.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly objectid	ifMauType
		description 	"This object identifies the MAU type.  Values for
        standard IEEE 802.3 MAU types are defined above.
        If the MAU type is unknown, the object identifier
        unknownMauType OBJECT IDENTIFIER ::= { 0 0 }
        
        is returned.  Note that unknownMauType is a
        syntactically valid object identifier, and any
        conformant implementation of ASN.1 and the BER
        must be able to generate and recognize this
        value.
        
        This object represents the operational type of
        the MAU, as determined by either (1) the result
        of the auto-negotiation function or (2) if
        auto-negotiation is not enabled or is not
        implemented for this MAU, by the value of the
        object ifMauDefaultType.  In case (2), a set to
        the object ifMauDefaultType will force the MAU
        into the new operating mode."
		characteristics "-N ifMauType -O 1.3.6.1.2.1.26.2.1.1.3 -T OBJECTID -A RO -X equal -F 0"

		readwrite enum ifMauStatusE	ifMauStatus
		description 	"The current state of the MAU.  This object MAY
        be implemented as a read-only object by those
        agents and MAUs that do not implement software
        control of the MAU state.  Some agents may not
        support setting the value of this object to some
        of the enumerated values.
        
        The value other(1) is returned if the MAU is in
        a state other than one of the states 2 through
        6.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.
        
        A MAU in the operational(3) state is fully
        functional, operates, and passes signals to its
        attached DTE or repeater port in accordance to
        its specification.
        
        A MAU in standby(4) state forces DI and CI to
        idle and the media transmitter to idle or fault,
        if supported.  Standby(4) mode only applies to
        link type MAUs.  The state of
        ifMauMediaAvailable is unaffected.
        
        A MAU in shutdown(5) state assumes the same
        condition on DI, CI, and the media transmitter
        as though it were powered down or not connected.
        The MAU MAY return other(1) value for the
        ifMauJabberState and ifMauMediaAvailable objects
        when it is in this state.  For an AUI, this
        state will remove power from the AUI.
        
        Setting this variable to the value reset(6)
        resets the MAU in the same manner as a
        power-off, power-on cycle of at least one-half
        second would.  The agent is not required to
        return the value reset (6).
        
        Setting this variable to the value
        operational(3), standby(4), or shutdown(5)
        causes the MAU to assume the respective state
        except that setting a mixing-type MAU or an AUI
        to standby(4) will cause the MAU to enter the
        shutdown state."
		characteristics "-N ifMauStatus -O 1.3.6.1.2.1.26.2.1.1.4 -T INTEGER -A RW -X equal -F 0"

		readonly enum ifMauMediaAvailableE	ifMauMediaAvailable
		description 	"If the MAU is a link or fiber type (FOIRL,
        10BASE-T, 10BASE-F) then this is equivalent to
        the link test fail state/low light function.
        For an AUI or a coax (including broadband) MAU
        this indicates whether or not loopback is
        detected on the DI circuit.  The value of this
        attribute persists between packets for MAU types
        AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE-FP.
        
        The value other(1) is returned if the
        mediaAvailable state is not one of 2 through 18.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.  At power-up or following a
        reset, the value of this attribute will be
        unknown for AUI, coax, and 10BASE-FP MAUs.  For
        these MAUs loopback will be tested on each
        transmission during which no collision is
        detected.  If DI is receiving input when DO
        returns to IDL after a transmission and there
        has been no collision during the transmission
        then loopback will be detected.  The value of
        
        this attribute will only change during
        non-collided transmissions for AUI, coax, and
        10BASE-FP MAUs.
        
        For 100Mbps and 1000Mbps MAUs, the enumerations
        match the states within the respective link
        integrity state diagrams, fig 32-16, 23-12 and
        24-15 of sections 32, 23 and 24 of [IEEE802.3].
        Any MAU which implements management of
        auto-negotiation will map remote fault
        indication to remote fault.
        
        The value available(3) indicates that the link,
        light, or loopback is normal.  The value
        notAvailable(4) indicates link loss, low light,
        or no loopback.
        
        The value remoteFault(5) indicates that a fault
        has been detected at the remote end of the link.
        This value applies to 10BASE-FB, 100BASE-T4 Far
        End Fault Indication and non-specified remote
        faults from a system running auto-negotiation.
        The values remoteJabber(7), remoteLinkLoss(8),
        and remoteTest(9) SHOULD be used instead of
        remoteFault(5) where the reason for remote fault
        is identified in the remote signaling protocol.
        The value invalidSignal(6) indicates that an
        invalid signal has been received from the other
        end of the link.  invalidSignal(6) applies only
        to MAUs of type 10BASE-FB.
        
        Where an IEEE Std 802.3-2002 clause 22 MII
        is present, a logic one in the remote fault bit
        (reference section 22.2.4.2.8 of that document)
        maps to the value remoteFault(5), and a logic
        zero in the link status bit (reference section
        22.2.4.2.10 of that document) maps to the value
        notAvailable(4).  The value notAvailable(4)
        takes precedence over the value remoteFault(5).
        
        Any MAU that implements management of clause 37
        Auto-Negotiation will map the received RF1 and
        RF2 bit values for Offline to offline(10), Link
        Failure to remoteFault(5) and Auto-Negotiation
        Error to autoNegError(11).
        
        For 10 Gb/s, the enumerations map to the states
        within the Reconciliation Sublayer state diagram
        as follows:
          NoFault maps to the enumeration 'available(3)'
          LocalFault maps to the enumeration
            'notAvailable(4)'
          RemoteFault maps to the enumeration
            'remoteFault(5)'
        The enumerations 'pmdLinkFault(12)',
        'wisFrameLoss(13)', 'wisSignalLoss(14)',
        'pcsLinkFault(15)', 'excessiveBER(16)', and
        'dxsLinkFault(17)' and 'pxsLinkFault(18)' should
        be used instead of the enumeration
        'notAvailable(4)' where the reason for the local
        fault can be identified through the use of the
        MDIO Interface.  Where multiple reasons for the
        local fault state can be identified only the
        highest precedence error should be reported.
        The precedence in descending order is as
        follows:
            pxsLinkFault
            pmdLinkFault
            wisFrameLoss
            wisSignalLoss
            pcsLinkFault
            excessiveBER
            dxsLinkFault"
		characteristics "-N ifMauMediaAvailable -O 1.3.6.1.2.1.26.2.1.1.5 -T INTEGER -A RO -X equal -F 0"

		readonly counter	ifMauMediaAvailableStateExits
		description 	"A count of the number of times that
        ifMauMediaAvailable for this MAU instance leaves
        the state available(3).
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of ifCounterDiscontinuityTime."
		characteristics "-N ifMauMediaAvailableStateExits -O 1.3.6.1.2.1.26.2.1.1.6 -T COUNTER -A RO -X equal -F 0"

		readonly enum ifMauJabberStateE	ifMauJabberState
		description 	"The value other(1) is returned if the jabber
        state is not 2, 3, or 4.  The agent MUST always
        return other(1) for MAU type dot3MauTypeAUI.
        
        The value unknown(2) is returned when the MAU's
        true state is unknown; for example, when it is
        being initialized.
        
        If the MAU is not jabbering the agent returns
        noJabber(3).  This is the 'normal' state.
        
        If the MAU is in jabber state the agent returns
        the jabbering(4) value."
		characteristics "-N ifMauJabberState -O 1.3.6.1.2.1.26.2.1.1.7 -T INTEGER -A RO -X equal -F 0"

		readonly counter	ifMauJabberingStateEnters
		description 	"A count of the number of times that
        mauJabberState for this MAU instance enters the
        state jabbering(4). This counter will always
        indicate zero for MAUs of type dot3MauTypeAUI
        and those of speeds above 10Mbps.
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of ifCounterDiscontinuityTime."
		characteristics "-N ifMauJabberingStateEnters -O 1.3.6.1.2.1.26.2.1.1.8 -T COUNTER -A RO -X equal -F 0"

		readonly counter	ifMauFalseCarriers
		description 	"A count of the number of false carrier events
        
        during IDLE in 100BASE-X and 1000BASE-X links.
        
        For all other MAU types, this counter will
        always indicate zero. This counter does not
        increment at the symbol rate.
        
        It can increment after a valid carrier
        completion at a maximum rate of once per 100 ms
        for 100BASE-X and once per 10us for 1000BASE-X
        until the next CarrierEvent.
        
        This counter can roll over very quickly.  A
        management station is advised to poll the
        ifMauHCFalseCarriers instead of this counter in
        order to avoid loss of information.
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of ifCounterDiscontinuityTime."
		characteristics "-N ifMauFalseCarriers -O 1.3.6.1.2.1.26.2.1.1.9 -T COUNTER -A RO -X equal -F 0"

		readonly int	ifMauTypeList
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This object has been deprecated in favour of
        ifMauTypeListBits.
        
        A value that uniquely identifies the set of
        possible IEEE 802.3 types that the MAU could be.
        The value is a sum which initially takes the
        value zero.  Then, for each type capability of
        this MAU, 2 raised to the power noted below is
        added to the sum. For example, a MAU which has
        the capability to be only 10BASE-T would have a
        value of 512 (2**9).  In contrast, a MAU which
        supports both 10Base-T (full duplex) and
        100BASE-TX (full duplex) would have a value of
        ((2**11) + (2**16)) or 67584.
        
        The powers of 2 assigned to the capabilities are
        these:
        
        Power  Capability
          0      other or unknown
          1      AUI
          2      10BASE-5
          3      FOIRL
          4      10BASE-2
          5      10BASE-T duplex mode unknown
          6      10BASE-FP
          7      10BASE-FB
          8      10BASE-FL duplex mode unknown
          9      10BROAD36
         10      10BASE-T  half duplex mode
         11      10BASE-T  full duplex mode
         12      10BASE-FL half duplex mode
         13      10BASE-FL full duplex mode
         14      100BASE-T4
         15      100BASE-TX half duplex mode
         16      100BASE-TX full duplex mode
         17      100BASE-FX half duplex mode
         18      100BASE-FX full duplex mode
         19      100BASE-T2 half duplex mode
         20      100BASE-T2 full duplex mode
        
        If auto-negotiation is present on this MAU, this
        object will map to ifMauAutoNegCapability."
		characteristics "-N ifMauTypeList -O 1.3.6.1.2.1.26.2.1.1.10 -T INTEGER -A RO -X equal -F 0"

		readwrite objectid	ifMauDefaultType
		description 	"This object identifies the default
        administrative baseband MAU type, to be used in
        conjunction with the operational MAU type
        denoted by ifMauType.
        
        The set of possible values for this object is
        the same as the set defined for the ifMauType
        object.
        
        This object represents the
        administratively-configured type of the MAU.  If
        auto-negotiation is not enabled or is not
        implemented for this MAU, the value of this
        object determines the operational type of the
        MAU.  In this case, a set to this object will
        force the MAU into the specified operating mode.
        
        If auto-negotiation is implemented and enabled
        for this MAU, the operational type of the MAU
        is determined by auto-negotiation, and the value
        of this object denotes the type to which the MAU
        will automatically revert if/when
        auto-negotiation is later disabled.
        
        NOTE TO IMPLEMENTORS:  It may be necessary to
        provide for underlying hardware implementations
        which do not follow the exact behavior specified
        above.  In particular, when
        ifMauAutoNegAdminStatus transitions from enabled
        to disabled, the agent implementation MUST
        ensure that the operational type of the MAU (as
        reported by ifMauType) correctly transitions to
        the value specified by this object, rather than
        continuing to operate at the value earlier
        determined by the auto-negotiation function."
		characteristics "-N ifMauDefaultType -O 1.3.6.1.2.1.26.2.1.1.11 -T OBJECTID -A RW -X equal -F 0"

		readonly enum ifMauAutoNegSupportedE	ifMauAutoNegSupported
		description 	"This object indicates whether or not
        auto-negotiation is supported on this MAU."
		characteristics "-N ifMauAutoNegSupported -O 1.3.6.1.2.1.26.2.1.1.12 -T INTEGER -A RO -X equal -F 0"

		readonly octet[6]	ifMauTypeListBits
		description 	"A value that uniquely identifies the set of
        possible IEEE 802.3 types that the MAU could be.
        If auto-negotiation is present on this MAU, this
        object will map to ifMauAutoNegCapabilityBits.
        
        Note that this MAU may be capable of operating
        as a MAU type that is beyond the scope of this
        MIB.  This is indicated by returning the
        bit value bOther in addition to any bit values
        for capabilities that are listed above."
		characteristics "-N ifMauTypeListBits -O 1.3.6.1.2.1.26.2.1.1.13 -T STRING -A RO -X equal -F 0"

		readonly counter	ifMauHCFalseCarriers
		description 	"A count of the number of false carrier events
        during IDLE in 100BASE-X and 1000BASE-X links.
        
        For all other MAU types, this counter will
        always indicate zero. This counter does not
        increment at the symbol rate.
        
        This counter is a 64 bit version of
        ifMauFalseCarriers.  Since the 32 bit version of
        this counter can roll over very quickly,
        management stations are advised to poll the
        64 bit version instead in order to avoid loss
        of information.
        
        Discontinuities in the value of this counter can
        occur at re-initialization of the management
        system, and at other times as indicated by the
        value of ifCounterDiscontinuityTime."
		characteristics "-N ifMauHCFalseCarriers -O 1.3.6.1.2.1.26.2.1.1.14 -T COUNTER -A RO -X equal -F 0"

	)

	table	ifJackTable
	description "Information about the external jacks attached
        to MAUs attached to an interface."
	characteristics "-K ONE"
	(
		notaccessible int	ifJackIndex
		description 	"This variable uniquely identifies the jack
        described by this entry from among other jacks
        attached to the same MAU."
		characteristics "-N ifJackIndex -O 1.3.6.1.2.1.26.2.2.1.1 -T INTEGER -A NA -X equal -F 0"

		readonly enum ifJackTypeE	ifJackType
		description 	"The jack connector type, as it appears on the
        outside of the system."
		characteristics "-N ifJackType -O 1.3.6.1.2.1.26.2.2.1.2 -T INTEGER -A RO -X equal -F 0"

	)

	table	broadMauBasicTable
	description "********* THIS OBJECT IS DEPRECATED **********
        
        This entire table has been deprecated.  There
        have been no reported implementations of this
        table, and it is unlikely that there ever will
        be.  IEEE recommends that broadband MAU types
        should not be used for new installations.
        
        Table of descriptive and status information
        about the broadband MAUs connected to
        interfaces."
	characteristics "-K TWO"
	(
		readonly int	broadMauIfIndex
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This variable uniquely identifies the interface
        to which the MAU described by this entry is
        connected."
		characteristics "-N broadMauIfIndex -O 1.3.6.1.2.1.26.3.1.1.1 -T INTEGER -A RO -X equal -F 0"

		readonly int	broadMauIndex
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This variable uniquely identifies the MAU
        connected to interface broadMauIfIndex that is
        described by this entry."
		characteristics "-N broadMauIndex -O 1.3.6.1.2.1.26.3.1.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly enum broadMauXmtRcvSplitTypeE	broadMauXmtRcvSplitType
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This object indicates the type of frequency
        multiplexing/cabling system used to separate the
        transmit and receive paths for the 10BROAD36
        MAU.
        
        The value other(1) is returned if the split type
        is not either single or dual.
        
        The value single(2) indicates a single cable
        system.  The value dual(3) indicates a dual
        cable system, offset normally zero."
		characteristics "-N broadMauXmtRcvSplitType -O 1.3.6.1.2.1.26.3.1.1.3 -T INTEGER -A RO -X equal -F 0"

		readonly int	broadMauXmtCarrierFreq
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This variable indicates the transmit carrier
        frequency of the 10BROAD36 MAU in MHz/4; that
        is, in units of 250 kHz."
		characteristics "-N broadMauXmtCarrierFreq -O 1.3.6.1.2.1.26.3.1.1.4 -T INTEGER -A RO -X equal -F 0"

		readonly int	broadMauTranslationFreq
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This variable indicates the translation offset
        frequency of the 10BROAD36 MAU in MHz/4; that
        is, in units of 250 kHz."
		characteristics "-N broadMauTranslationFreq -O 1.3.6.1.2.1.26.3.1.1.5 -T INTEGER -A RO -X equal -F 0"

	)

	table	ifMauAutoNegTable
	description "Configuration and status objects for the
        auto-negotiation function of MAUs attached to
        interfaces.
        
        The ifMauAutoNegTable applies to systems in
        which auto-negotiation is supported on one or
        more MAUs attached to interfaces.  Note that if
        auto-negotiation is present and enabled, the
        ifMauType object reflects the result of the
        auto-negotiation function."
	characteristics "-K ???"
	(
		readwrite enum ifMauAutoNegAdminStatusE	ifMauAutoNegAdminStatus
		description 	"Setting this object to enabled(1) will cause
        the interface which has the auto-negotiation
        signaling ability to be enabled.
        
        If the value of this object is disabled(2) then
        the interface will act as it would if it had no
        auto-negotiation signaling.  Under these
        conditions, an IEEE 802.3 MAU will immediately
        be forced to the state indicated by the value of
        the object ifMauDefaultType.
        
        NOTE TO IMPLEMENTORS:  When
        ifMauAutoNegAdminStatus transitions from enabled
        to disabled, the agent implementation MUST
        ensure that the operational type of the MAU (as
        reported by ifMauType) correctly transitions to
        the value specified by the ifMauDefaultType
        object, rather than continuing to operate at the
        value earlier determined by the auto-negotiation
        function."
		characteristics "-N ifMauAutoNegAdminStatus -O 1.3.6.1.2.1.26.5.1.1.1 -T INTEGER -A RW -X equal -F 0"

		readonly enum ifMauAutoNegRemoteSignalingE	ifMauAutoNegRemoteSignaling
		description 	"A value indicating whether the remote end of
        the link is using auto-negotiation signaling. It
        takes the value detected(1) if and only if,
        during the previous link negotiation, FLP Bursts
        were received."
		characteristics "-N ifMauAutoNegRemoteSignaling -O 1.3.6.1.2.1.26.5.1.1.2 -T INTEGER -A RO -X equal -F 0"

		readonly enum ifMauAutoNegConfigE	ifMauAutoNegConfig
		description 	"A value indicating the current status of the
        auto-negotiation process.  The enumeration
        parallelDetectFail(5) maps to a failure in
        parallel detection as defined in 28.2.3.1 of
        [IEEE 802.3 Std]."
		characteristics "-N ifMauAutoNegConfig -O 1.3.6.1.2.1.26.5.1.1.4 -T INTEGER -A RO -X equal -F 0"

		readonly int	ifMauAutoNegCapability
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This object has been deprecated in favour of
        ifMauAutoNegCapabilityBits.
        
        A value that uniquely identifies the set of
        capabilities of the local auto-negotiation
        entity.  The value is a sum which initially
        takes the value zero.  Then, for each capability
        of this interface, 2 raised to the power noted
        below is added to the sum. For example, an
        interface which has the capability to support
        only 100Base-TX half duplex would have a value
        of 32768 (2**15).  In contrast, an interface
        which supports both 100Base-TX half duplex and
        and 100Base-TX full duplex would have a value of
        98304 ((2**15) + (2**16)).
        
        The powers of 2 assigned to the capabilities are
        these:
        
        Power   Capability
          0       other or unknown
         (1-9)    (reserved)
         10       10BASE-T  half duplex mode
         11       10BASE-T  full duplex mode
         12       (reserved)
         13       (reserved)
         14       100BASE-T4
         15       100BASE-TX half duplex mode
         16       100BASE-TX full duplex mode
         17       (reserved)
         18       (reserved)
         19      100BASE-T2 half duplex mode
         20      100BASE-T2 full duplex mode
        
        Note that interfaces that support this MIB may
        have capabilities that extend beyond the scope
        of this MIB."
		characteristics "-N ifMauAutoNegCapability -O 1.3.6.1.2.1.26.5.1.1.5 -T INTEGER -A RO -X equal -F 0"

		readwrite int	ifMauAutoNegCapAdvertised
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This object has been deprecated in favour of
        ifMauAutoNegCapAdvertisedBits.
        
        A value that uniquely identifies the set of
        
        capabilities advertised by the local
        auto-negotiation entity. Refer to
        ifMauAutoNegCapability for a description of the
        possible values of this object.
        
        Capabilities in this object that are not
        available in ifMauAutoNegCapability cannot be
        enabled."
		characteristics "-N ifMauAutoNegCapAdvertised -O 1.3.6.1.2.1.26.5.1.1.6 -T INTEGER -A RW -X equal -F 0"

		readonly int	ifMauAutoNegCapReceived
		description 	"********* THIS OBJECT IS DEPRECATED **********
        
        This object has been deprecated in favour of
        ifMauAutoNegCapReceivedBits.
        
        A value that uniquely identifies the set of
        capabilities received from the remote
        auto-negotiation entity. Refer to
        ifMauAutoNegCapability for a description of the
        possible values of this object.
        
        Note that interfaces that support this MIB may
        be attached to remote auto-negotiation entities
        which have capabilities beyond the scope of this
        MIB."
		characteristics "-N ifMauAutoNegCapReceived -O 1.3.6.1.2.1.26.5.1.1.7 -T INTEGER -A RO -X equal -F 0"

		readwrite enum ifMauAutoNegRestartE	ifMauAutoNegRestart
		description 	"If the value of this object is set to
        restart(1) then this will force auto-negotiation
        to begin link renegotiation. If auto-negotiation
        signaling is disabled, a write to this object
        has no effect.
        
        Setting the value of this object to norestart(2)
        has no effect."
		characteristics "-N ifMauAutoNegRestart -O 1.3.6.1.2.1.26.5.1.1.8 -T INTEGER -A RW -X equal -F 0"

		readonly octet[2]	ifMauAutoNegCapabilityBits
		description 	"A value that uniquely identifies the set of
        capabilities of the local auto-negotiation
        entity.  Note that interfaces that support this
        MIB may have capabilities that extend beyond the
        scope of this MIB.
        
        Note that the local auto-negotiation entity may
        support some capabilities beyond the scope of
        this MIB.  This is indicated by returning the
        bit value bOther in addition to any bit values
        for capabilities that are listed above."
		characteristics "-N ifMauAutoNegCapabilityBits -O 1.3.6.1.2.1.26.5.1.1.9 -T STRING -A RO -X equal -F 0"

		readwrite octet[2]	ifMauAutoNegCapAdvertisedBits
		description 	"A value that uniquely identifies the set of
        capabilities advertised by the local
        auto-negotiation entity.
        
        Capabilities in this object that are not
        available in ifMauAutoNegCapabilityBits cannot
        be enabled.
        
        Note that the local auto-negotiation entity may
        advertise some capabilities beyond the scope of
        this MIB.  This is indicated by returning the
        bit value bOther in addition to any bit values
        for capabilities that are listed above."
		characteristics "-N ifMauAutoNegCapAdvertisedBits -O 1.3.6.1.2.1.26.5.1.1.10 -T STRING -A RW -X equal -F 0"

		readonly octet[2]	ifMauAutoNegCapReceivedBits
		description 	"A value that uniquely identifies the set of
        capabilities received from the remote
        auto-negotiation entity.
        Note that interfaces that support this MIB may
        be attached to remote auto-negotiation entities
        which have capabilities beyond the scope of this
        MIB.  This is indicated by returning the bit
        value bOther in addition to any bit values for
        capabilities that are listed above."
		characteristics "-N ifMauAutoNegCapReceivedBits -O 1.3.6.1.2.1.26.5.1.1.11 -T STRING -A RO -X equal -F 0"

		readwrite enum ifMauAutoNegRemoteFaultAdvertisedE	ifMauAutoNegRemoteFaultAdvertised
		description 	"A value that identifies any local fault
        indications that this MAU has detected and will
        advertise at the next auto-negotiation
        interaction for 1000Mbps MAUs."
		characteristics "-N ifMauAutoNegRemoteFaultAdvertised -O 1.3.6.1.2.1.26.5.1.1.12 -T INTEGER -A RW -X equal -F 0"

		readonly enum ifMauAutoNegRemoteFaultReceivedE	ifMauAutoNegRemoteFaultReceived
		description 	"A value that identifies any fault indications
        received from the far end of a link by the
        local auto-negotiation entity for 1000Mbps
        MAUs."
		characteristics "-N ifMauAutoNegRemoteFaultReceived -O 1.3.6.1.2.1.26.5.1.1.13 -T INTEGER -A RO -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
