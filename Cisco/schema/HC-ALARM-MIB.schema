## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy HC-ALARM-MIB
description "HC-ALARM-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	hcAlarmSampleTypeE (
	   1	"absoluteValue"
	   2	"deltaValue"
	)

	enum	hcAlarmValueStatusE (
	   1	"valueNotAvailable"
	   2	"valuePositive"
	   3	"valueNegative"
	)

	enum	hcAlarmStartupAlarmE (
	   1	"risingAlarm"
	   2	"fallingAlarm"
	   3	"risingOrFallingAlarm"
	)

	enum	hcAlarmRisingThresholdValStatusE (
	   1	"valueNotAvailable"
	   2	"valuePositive"
	   3	"valueNegative"
	)

	enum	hcAlarmFallingThresholdValStatusE (
	   1	"valueNotAvailable"
	   2	"valuePositive"
	   3	"valueNegative"
	)

	enum	hcAlarmStorageTypeE (
	   1	"other"
	   2	"volatile"
	   3	"nonVolatile"
	   4	"permanent"
	   5	"readOnly"
	)

	enum	hcAlarmStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)


## Group and Table Declarations

	table	hcAlarmTable
	description "A list of entries for the configuration of high capacity
        alarms."
	characteristics "-K ONE"
	(
		notaccessible int	hcAlarmIndex
		description 	"An arbitrary integer index value used to uniquely identify
        this high capacity alarm entry."
		characteristics "-N hcAlarmIndex -O 1.3.6.1.2.1.16.29.1.1.1.1.1 -T INTEGER -A NA -X equal -F 0"

		readwrite int	hcAlarmInterval
		description 	"The interval in seconds over which the data is sampled and
        compared with the rising and falling thresholds.  When
        setting this variable, care should be taken in the case of
        deltaValue sampling - the interval should be set short
        enough that the sampled variable is very unlikely to
        increase or decrease by more than 2^63 - 1 during a single
        sampling interval.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmInterval -O 1.3.6.1.2.1.16.29.1.1.1.1.2 -T INTEGER -A RW -X equal -F 0"

		readwrite objectid	hcAlarmVariable
		description 	"The object identifier of the particular variable to be
        sampled.  Only variables that resolve to an ASN.1 primitive
        type of INTEGER
        Gauge, or TimeTicks) may be sampled.
        
        Because SNMP access control is articulated entirely in terms
        of the contents of MIB views, no access control mechanism
        exists that can restrict the value of this object to
        identify only those objects that exist in a particular MIB
        view.  Because there is thus no acceptable means of
        restricting the read access that could be obtained through
        the alarm mechanism, the probe must only grant write access
        to this object in those views that have read access to all
        objects on the probe.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmVariable -O 1.3.6.1.2.1.16.29.1.1.1.1.3 -T OBJECTID -A RW -X equal -F 0"

		readwrite enum hcAlarmSampleTypeE	hcAlarmSampleType
		description 	"The method of sampling the selected variable and
        calculating the value to be compared against the thresholds.
        If the value of this object is absoluteValue(1), the value
        of the selected variable will be compared directly with the
        thresholds at the end of the sampling interval.  If the
        value of this object is deltaValue(2), the value of the
        selected variable at the last sample will be subtracted from
        the current value, and the difference compared with the
        thresholds.
        
        If the associated hcAlarmVariable instance could not be
        obtained at the previous sample interval, then a delta
        sample is not possible, and the value of the associated
        hcAlarmValueStatus object for this interval will be
        valueNotAvailable(1).
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmSampleType -O 1.3.6.1.2.1.16.29.1.1.1.1.4 -T INTEGER -A RW -X equal -F 0"

		readwrite counter	hcAlarmAbsValue
		description 	"The absolute value (i.e., unsigned value) of the
        hcAlarmVariable statistic during the last sampling period.
        The value during the current sampling period is not made
        available until the period is completed.
        
        To obtain the true value for this sampling interval, the
        associated instance of hcAlarmValueStatus must be checked,
        and the value of this object adjusted as necessary.
        
        If the MIB instance could not be accessed during the
        sampling interval, then this object will have a value of
        zero and the associated instance of hcAlarmValueStatus will
        be set to 'valueNotAvailable(1)'."
		characteristics "-N hcAlarmAbsValue -O 1.3.6.1.2.1.16.29.1.1.1.1.5 -T COUNTER -A RW -X equal -F 0"

		readonly enum hcAlarmValueStatusE	hcAlarmValueStatus
		description 	"This object indicates the validity and sign of the data for
        the hcAlarmAbsValue object, as described in the
        HcValueStatus textual convention."
		characteristics "-N hcAlarmValueStatus -O 1.3.6.1.2.1.16.29.1.1.1.1.6 -T INTEGER -A RO -X equal -F 0"

		readwrite enum hcAlarmStartupAlarmE	hcAlarmStartupAlarm
		description 	"The alarm that may be sent when this entry is first set to
        active.  If the first sample after this entry becomes active
        is greater than or equal to the rising threshold and this
        object is equal to risingAlarm(1) or
        risingOrFallingAlarm(3), then a single rising alarm will be
        generated.  If the first sample after this entry becomes
        valid is less than or equal to the falling threshold and
        this object is equal to fallingAlarm(2) or
        risingOrFallingAlarm(3), then a single falling alarm will be
        generated.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmStartupAlarm -O 1.3.6.1.2.1.16.29.1.1.1.1.7 -T INTEGER -A RW -X equal -F 0"

		readwrite gauge	hcAlarmRisingThreshAbsValueLo
		description 	"The lower 32 bits of the absolute value for threshold for
        the sampled statistic.  The actual threshold value is
        determined by the associated instances of the
        hcAlarmRisingThreshAbsValueHi and
        hcAlarmRisingThresholdValStatus objects, as follows:
        
           ABS(threshold) = hcAlarmRisingThreshAbsValueLo +
                 (hcAlarmRisingThreshAbsValueHi * 2^^32)
        
        The absolute value of the threshold is adjusted as required,
        as described in the HcValueStatus textual convention.  These
        three object instances are conceptually combined to
        represent the rising threshold for this entry.
        
        When the current sampled value is greater than or equal to
        this threshold, and the value at the last sampling interval
        was less than this threshold, a single event will be
        generated.  A single event will also be generated if the
        first sample after this entry becomes valid is greater than
        or equal to this threshold and the associated
        hcAlarmStartupAlarm is equal to risingAlarm(1) or
        risingOrFallingAlarm(3).
        
        After a rising event is generated, another such event will
        not be generated until the sampled value falls below this
        threshold and reaches the threshold identified by the
        hcAlarmFallingThreshAbsValueLo,
        hcAlarmFallingThreshAbsValueHi, and
        hcAlarmFallingThresholdValStatus objects.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmRisingThreshAbsValueLo -O 1.3.6.1.2.1.16.29.1.1.1.1.8 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	hcAlarmRisingThreshAbsValueHi
		description 	"The upper 32 bits of the absolute value for threshold for
        the sampled statistic.  The actual threshold value is
        determined by the associated instances of the
        hcAlarmRisingThreshAbsValueLo and
        hcAlarmRisingThresholdValStatus objects, as follows:
        
           ABS(threshold) = hcAlarmRisingThreshAbsValueLo +
                 (hcAlarmRisingThreshAbsValueHi * 2^^32)
        
        The absolute value of the threshold is adjusted as required,
        as described in the HcValueStatus textual convention.  These
        three object instances are conceptually combined to
        represent the rising threshold for this entry.
        
        When the current sampled value is greater than or equal to
        this threshold, and the value at the last sampling interval
        was less than this threshold, a single event will be
        generated.  A single event will also be generated if the
        first sample after this entry becomes valid is greater than
        or equal to this threshold and the associated
        hcAlarmStartupAlarm is equal to risingAlarm(1) or
        risingOrFallingAlarm(3).
        
        After a rising event is generated, another such event will
        not be generated until the sampled value falls below this
        threshold and reaches the threshold identified by the
        hcAlarmFallingThreshAbsValueLo,
        hcAlarmFallingThreshAbsValueHi, and
        hcAlarmFallingThresholdValStatus objects.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmRisingThreshAbsValueHi -O 1.3.6.1.2.1.16.29.1.1.1.1.9 -T GAUGE -A RW -X equal -F 0"

		readwrite enum hcAlarmRisingThresholdValStatusE	hcAlarmRisingThresholdValStatus
		description 	"This object indicates the sign of the data for the rising
        threshold, as defined by the hcAlarmRisingThresAbsValueLo
        and hcAlarmRisingThresAbsValueHi objects, as described in
        the HcValueStatus textual convention.
        
        The enumeration 'valueNotAvailable(1)' is not allowed, and
        the associated hcAlarmStatus object cannot be equal to
        'active(1)' if this object is set to this value.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmRisingThresholdValStatus -O 1.3.6.1.2.1.16.29.1.1.1.1.10 -T INTEGER -A RW -X equal -F 0"

		readwrite gauge	hcAlarmFallingThreshAbsValueLo
		description 	"The lower 32 bits of the absolute value for threshold for
        the sampled statistic.  The actual threshold value is
        determined by the associated instances of the
        hcAlarmFallingThreshAbsValueHi and
        hcAlarmFallingThresholdValStatus objects, as follows:
        
           ABS(threshold) = hcAlarmFallingThreshAbsValueLo +
                 (hcAlarmFallingThreshAbsValueHi * 2^^32)
        
        The absolute value of the threshold is adjusted as required,
        as described in the HcValueStatus textual convention.  These
        three object instances are conceptually combined to
        represent the falling threshold for this entry.
        
        When the current sampled value is less than or equal to this
        threshold, and the value at the last sampling interval was
        greater than this threshold, a single event will be
        generated.  A single event will also be generated if the
        first sample after this entry becomes valid is less than or
        equal to this threshold and the associated
        hcAlarmStartupAlarm is equal to fallingAlarm(2) or
        risingOrFallingAlarm(3).
        
        After a falling event is generated, another such event will
        not be generated until the sampled value rises above this
        threshold and reaches the threshold identified by the
        hcAlarmRisingThreshAbsValueLo,
        hcAlarmRisingThreshAbsValueHi, and
        hcAlarmRisingThresholdValStatus objects.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmFallingThreshAbsValueLo -O 1.3.6.1.2.1.16.29.1.1.1.1.11 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	hcAlarmFallingThreshAbsValueHi
		description 	"The upper 32 bits of the absolute value for threshold for
        the sampled statistic.  The actual threshold value is
        determined by the associated instances of the
        hcAlarmFallingThreshAbsValueLo and
        hcAlarmFallingThresholdValStatus objects, as follows:
        
           ABS(threshold) = hcAlarmFallingThreshAbsValueLo +
                 (hcAlarmFallingThreshAbsValueHi * 2^^32)
        
        The absolute value of the threshold is adjusted as required,
        as described in the HcValueStatus textual convention.  These
        three object instances are conceptually combined to
        represent the falling threshold for this entry.
        
        When the current sampled value is less than or equal to this
        threshold, and the value at the last sampling interval was
        greater than this threshold, a single event will be
        generated.  A single event will also be generated if the
        first sample after this entry becomes valid is less than or
        equal to this threshold and the associated
        hcAlarmStartupAlarm is equal to fallingAlarm(2) or
        risingOrFallingAlarm(3).
        
        After a falling event is generated, another such event will
        not be generated until the sampled value rises above this
        threshold and reaches the threshold identified by the
        hcAlarmRisingThreshAbsValueLo,
        hcAlarmRisingThreshAbsValueHi, and
        hcAlarmRisingThresholdValStatus objects.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmFallingThreshAbsValueHi -O 1.3.6.1.2.1.16.29.1.1.1.1.12 -T GAUGE -A RW -X equal -F 0"

		readwrite enum hcAlarmFallingThresholdValStatusE	hcAlarmFallingThresholdValStatus
		description 	"This object indicates the sign of the data for the falling
        threshold, as defined by the hcAlarmFallingThreshAbsValueLo
        and hcAlarmFallingThreshAbsValueHi objects, as described in
        the HcValueStatus textual convention.
        
        The enumeration 'valueNotAvailable(1)' is not allowed, and
        the associated hcAlarmStatus object cannot be equal to
        'active(1)' if this object is set to this value.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmFallingThresholdValStatus -O 1.3.6.1.2.1.16.29.1.1.1.1.13 -T INTEGER -A RW -X equal -F 0"

		readwrite int	hcAlarmRisingEventIndex
		description 	"The index of the eventEntry that is used when a rising
        threshold is crossed.  The eventEntry identified by a
        particular value of this index is the same as identified by
        the same value of the eventIndex object.  If there is no
        corresponding entry in the eventTable, then no association
        exists.  In particular, if this value is zero, no associated
        event will be generated, as zero is not a valid event index.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmRisingEventIndex -O 1.3.6.1.2.1.16.29.1.1.1.1.14 -T INTEGER -A RW -X equal -F 0"

		readwrite int	hcAlarmFallingEventIndex
		description 	"The index of the eventEntry that is used when a falling
        threshold is crossed.  The eventEntry identified by a
        particular value of this index is the same as identified by
        the same value of the eventIndex object.  If there is no
        corresponding entry in the eventTable, then no association
        exists.  In particular, if this value is zero, no associated
        event will be generated, as zero is not a valid event index.
        
        This object may not be modified if the associated
        hcAlarmStatus object is equal to active(1)."
		characteristics "-N hcAlarmFallingEventIndex -O 1.3.6.1.2.1.16.29.1.1.1.1.15 -T INTEGER -A RW -X equal -F 0"

		readonly counter	hcAlarmValueFailedAttempts
		description 	"The number of times the associated hcAlarmVariable instance
        was polled on behalf of this hcAlarmEntry, (while in the
        active state) and the value was not available.  This counter
        may experience a discontinuity if the agent restarts,
        indicated by the value of sysUpTime."
		characteristics "-N hcAlarmValueFailedAttempts -O 1.3.6.1.2.1.16.29.1.1.1.1.16 -T COUNTER -A RO -X equal -F 0"

		readwrite octet[127]	hcAlarmOwner
		description 	"The entity that configured this entry and is therefore
        using the resources assigned to it."
		characteristics "-N hcAlarmOwner -O 1.3.6.1.2.1.16.29.1.1.1.1.17 -T STRING -A RW -X equal -F 0"

		readwrite enum hcAlarmStorageTypeE	hcAlarmStorageType
		description 	"The type of non-volatile storage configured for this entry.
        If this object is equal to 'permanent(4)', then the
        associated hcAlarmRisingEventIndex and
        hcAlarmFallingEventIndex objects must be writable."
		characteristics "-N hcAlarmStorageType -O 1.3.6.1.2.1.16.29.1.1.1.1.18 -T INTEGER -A RW -X equal -F 0"

		readwrite enum hcAlarmStatusE	hcAlarmStatus
		description 	"The status of this row.
        
        An entry MUST NOT exist in the active state unless all
        objects in the entry have an appropriate value, as described
        in the description clause for each writable object.
        
        The hcAlarmStatus object may be modified if the associated
        instance of this object is equal to active(1),
        notInService(2), or notReady(3).  All other writable objects
        may be modified if the associated instance of this object is
        equal to notInService(2) or notReady(3)."
		characteristics "-N hcAlarmStatus -O 1.3.6.1.2.1.16.29.1.1.1.1.19 -T INTEGER -A RW -X equal -F 0"

	)

	group	hcAlarmCapabilitiesObjects
	description "(null)"
	characteristics "-K NONE"
	(
		readonly octet[2]	hcAlarmCapabilities
		description 	"An indication of the high capacity alarm capabilities
        supported by this agent.
        
        If the 'hcAlarmCreation' BIT is set, then this agent allows
        NMS applications to create entries in the hcAlarmTable.
        
        If the 'hcAlarmNvStorage' BIT is set, then this agent allows
        entries in the hcAlarmTable which will be recreated after a
        system restart, as controlled by the hcAlarmStorageType
        object."
		characteristics "-N hcAlarmCapabilities -O 1.3.6.1.2.1.16.29.1.2.1 -T STRING -A RO -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
