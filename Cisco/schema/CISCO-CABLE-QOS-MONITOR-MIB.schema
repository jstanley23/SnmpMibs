## THIS FILE WAS GENERATED BY MIB2SCHEMA
## For attributes containing printable ASCII
## characters, you may add a format string
## specification in the attribute characteristics
## line
## As described in RFC 1157, some agents cannot
## accept messages whose length exceeds 484 octets
## For those groups whose var-bind list has many
## entries, you may split them up into different
## var-bind lists
proxy CISCO-CABLE-QOS-MONITOR-MIB
description "CISCO-CABLE-QOS-MONITOR-MIB agent"
serial 2
rpcid 100122
(

## Enumerated Type Definitions

	enum	ccqmCmtsEnfRuleDirectionE (
	   1	"upstream"
	   2	"downstream"
	   3	"bidirection"
	)

	enum	ccqmCmtsEnfRuleAutoEnforceE (
	   1	"true"
	   2	"false"
	)

	enum	ccqmCmtsEnfRuleRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ccqmCmtsEnfRuleDocsVerE (
	   1	"others"
	   2	"docsis10"
	)

	enum	ccqmCmtsEnfRuleMonTypeE (
	   1	"basic"
	   2	"peakOffPeak"
	)

	enum	ccqmCmtsIfBwUtilRowStatusE (
	   1	"active"
	   2	"notInService"
	   3	"notReady"
	   4	"createAndGo"
	   5	"createAndWait"
	   6	"destroy"
	)

	enum	ccqmEnfRuleViolateNotifEnableE (
	   1	"true"
	   2	"false"
	)


## Group and Table Declarations

	table	ccqmCmtsEnforceRuleTable
	description "This table contains the attributes of the QoS enforce rules
        present on the CMTS. 
        
        These enforce rules define the criteria for identifying 
        subscribers who over consume resources. This could be as 
        simple as bytes transmitted over the last monitoring 
        duration and checked at a rate equal to the sample rate.
        
        In the sliding window concept used, the monitoring duration
        is the size of the window. This window slides by an amount
        that is equal to the sample rate. At every sample rate the 
        bytes transmitted in the time equal to a monitoring duration 
        is  checked. If this is found to be larger than the threshold
        limit which is calculated by multiplying the defined average
        rate by the monitoring duration per monitoring duration, 
        the subscriber is flagged as over consuming.  Else the 
        monitoring will continue.
        
        For example let the monitoring duration be 360 minutes and
        sample rate be 30 minutes. If the average rate is 2kbits/sec 
        then every 30 minutes we check if the bytes transmitted in 
        the last 360 minutes exceeded 5.4Mbytes bytes. If so, the 
        subscriber is over consuming.
        
        The enforce rule has a one to one mapping to QoS profiles 
        in case of DOCSIS1.0 (and DOCSIS1.0+ modems) and to 
        service class names in case of DOCSIS1.1 and 
        DOCSIS2.0 modems.
        
        It defines the registered QoS parameter set and an enforced 
        QoS parameter set be applied if found to be violating the 
        registered QoS parameter set.
        The enforce rule also defines a penalty period for which
        the enforced QoS parameter set will be applied. The 
        registered QoS parameter set will be restored when the 
        penalty period expires.
        
        The monitoring can be of two types:
        1) Legacy/Basic monitoring: There is only one threshold and 
           one monitoring-duration and the monitoring-duration
           can be more than one day and within a day there is no
           distinction among hours as peak or offpeak hours. An
           example would be: 
           monitoring duration   : 2 days
           Average rate          : 2kbits/sec
        
        2) Peak-offPeak monitoring: A maximum of two peak durations 
           can be defined with in a day and the remaining hours are 
           treated as off-peak and the monitoring will happen during
           these offpeak hours if the offpeak duration and threhold
           are defined. The monitoring-duration and threshold for 
           all three, first peak, second peak and offpeak can be 
           different. Here, the monitoring duration for any of the 
           peaks or offpeak cannot be more than a day. An
           example when both peaks and offpeak are defined is:
           First peak:
                 monitoring duration: Between 6am to 9am i.e., 3hours
                 Average rate       : 2kbits/sec
           Second peak:
                 monitoring duration: Between 6pm to 10pm i.e., 4hrs
                 Average rate       : 3kbits/sec
           Off peak:
                 Remaining hours in the day i.e.,
                 12 midnight to 6:00am,
                 9am to 6pm and 10pm to 12mignight.
                 monitoring duration: 2 hours
                 Average rate       : 1kbits/sec."
	characteristics "-K ONE"
	(
		notaccessible octet[15]	ccqmCmtsEnfRuleName
		description 	"The name of the enforce rule."
		characteristics "-N ccqmCmtsEnfRuleName -O 1.3.6.1.4.1.9.9.341.1.1.1.1.1 -T STRING -A NA -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleRegQoS
		description 	"This object represents a pointer to the object
        describing the quality of service attributes 
        associated with the registered service of the 
        subscriber.
        For DOCSIS1.0 (DOCSIS1.0+) subscribers it is the 
        index in the docsIfQosProfileTable. If no associated 
        entry in docsIfQosProfileTable exists, this object
        returns a value of zero. Similarly this object
        can be set to 0 to indicate no entry in the
        docsIfQosProfileTable associated with this QoS profile.
        This object is applicable for DOCSIS1.0 (and
        DOCSIS1.0+) modems and it can be set only when
        ccqmCmtsEnfRuleDocsVer is set to docsis10(2).
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleRegQoS -O 1.3.6.1.4.1.9.9.341.1.1.1.1.2 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleEnfQos
		description 	"This object represents a pointer to the object
        describing the quality of service attributes 
        associated with the registered service of the 
        subscriber.
        For DOCSIS1.0 (and DOCSIS1.0+) subscribers it is the
        index in the docsIfQosProfileTable. If no associated 
        entry in docsIfQosProfileTable exists, this object
        returns a value of zero. Similarly this object
        can be set to 0 to indicate no entry in the
        docsIfQosProfileTable associated with this QoS profile.   
        This object is applicable for DOCSIS1.0 (and
        DOCSIS1.0+) modems and it can be set only when
        ccqmCmtsEnfRuleDocsVer is set to docsis10(2).
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleEnfQos -O 1.3.6.1.4.1.9.9.341.1.1.1.1.3 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleMonDuration
		description 	"This object represents the duration for which 
        subscribers would be monitored to determine if they 
        were over consuming resources.
        This object can be set only when ccqmCmtsEnfRuleMonType
        is set to basic(1).
        If peak-offpeak monitoring is enabled i.e., 
        ccqmCmtsEnfRuleMonType and is set to peakOffPeak (2) this 
        object when polled would return the duration value valid 
        at that time of the day and 0 if no monitoring is taking 
        place at that time.
        Both ccqmCmtsEnfRuleMonDuration and 
        ccqmCmtsEnfRuleAvgRate need to be set before legacy/basic 
        monitoring can be started.
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleMonDuration -O 1.3.6.1.4.1.9.9.341.1.1.1.1.4 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleSampleRate
		description 	"This object represents the interval at which a decision 
        would be made to check if the subscriber over consumed his
        resources based on the subscriber usage in the past 
        duration.
        Since the duration can range between 10 minutes to 30 
        days hence the range of sample rate would change 
        accordingly too. Some empirical calculations for the
        same are:
        The maximum memory to be used per line card for STM is
        10 MBytes. The maximum number of modems that can be 
        supported is 6000 per line card. Now, per sample memory
        consumption is 8 bytes hence approximately, the maximum
        number of samples that can be allowed are 
        10 * 10 ^ 6 / (6 * 10 ^ 3 * 2 * 8) ~ 100
        Hence, given the duration the sample rate would be 
        calculated as duration / 100 = sample rate only if the
        duration happens to be more than 1440. For cases when 
        the duration is less than 1440, the sample rate range 
        would be between 10 to 30.
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleSampleRate -O 1.3.6.1.4.1.9.9.341.1.1.1.1.5 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRulePenaltyPeriod
		description 	"This object represents the period in which the 
        enforced QoS parameter set will be in effect from 
        the time of detection.
        When the time as defined by this object expires, the
        registered QoS parameter set would be restored. 
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRulePenaltyPeriod -O 1.3.6.1.4.1.9.9.341.1.1.1.1.6 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleByteCount
		description 	"The number of kbytes that the subscriber can transmit in 
         the monitoring duration as indicated by 
         ccqmCmtsEnfRuleMonDuration before being flagged as over 
         consuming.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleByteCount -O 1.3.6.1.4.1.9.9.341.1.1.1.1.7 -T GAUGE -A RW -X equal -F 0"

		readwrite enum ccqmCmtsEnfRuleDirectionE	ccqmCmtsEnfRuleDirection
		description 	"Specifies if the average rate specified by 
         ccqmCmtsEnfRuleAvgRate is for the upstream/downstream 
         direction. 
         Setting to bidirection(3) is not permitted.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleDirection -O 1.3.6.1.4.1.9.9.341.1.1.1.1.8 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ccqmCmtsEnfRuleAutoEnforceE	ccqmCmtsEnfRuleAutoEnforce
		description 	"If the ccqmCmtsEnfRuleAutoEnforce is TRUE, the enforced QoS
         parameter set as specified by ccqmCmtsEnfRuleEnfQos for
         DOCSIS1.0 (and DOCSIS1.0+) modems or
         ccqmCmtsEnfRuleEnfSerClassName for DOCSIS1.1 and
         DOCSIS2.0 modems will be automatically enforced when
         an over consuming subscriber is detected. Otherwise the
         change should be done manually. 
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleAutoEnforce -O 1.3.6.1.4.1.9.9.341.1.1.1.1.9 -T INTEGER -A RW -X equal -F 0"

		readwrite enum ccqmCmtsEnfRuleRowStatusE	ccqmCmtsEnfRuleRowStatus
		description 	"The object controls and reflects the status of rows in this
        table. All row status values are supported. 
        The status of the row needs to be changed from active(1) to 
        notInService(2) in cases when any of the enforce rule 
        objects need to be changed. If there is any monitoring 
        associated with this enforce rule ongoing at this time, it
        as well as all the statistics collected over the sample 
        rate and monitoring duration will be cleared when the 
        row status is changed from active(1) to notInService(2).
        The monitoring will start again only when the row status
        is changed to active(1)."
		characteristics "-N ccqmCmtsEnfRuleRowStatus -O 1.3.6.1.4.1.9.9.341.1.1.1.1.10 -T INTEGER -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleAvgRate
		description 	"This object defines the rate at which the subscriber is 
        allowed to consume for the monitoring duration. So, if
        this rate is defined to be 2kbits/sec and the monitoring
        duration is set to be 120 minutes, then every sample period
        the subscribers consumption in the last monitoring duration
        would be compared against 1.8Mbytes.
        This object can be set only when ccqmCmtsEnfRuleMonType is
        set to basic(1) else when polled it will return the 
        rate valid at that time of the day and 0 if no 
        monitoring is taking place at that time."
		characteristics "-N ccqmCmtsEnfRuleAvgRate -O 1.3.6.1.4.1.9.9.341.1.1.1.1.11 -T GAUGE -A RW -X equal -F 0"

		readwrite enum ccqmCmtsEnfRuleDocsVerE	ccqmCmtsEnfRuleDocsVer
		description 	"This defines the DOCSIS version of the modems that the 
        enforce rule would be applicable to. If it is set to
        docsis10(2) then only ccqmCmtsEnfRuleRegQoS
        and ccqmCmtsEnfRuleEnfQoS can be set and if previously 
        ccqmCmtsEnfRuleRegSerClassName and 
        ccqmCmtsEnfRuleEnfSerClassName were set, they will be 
        reset to NULL and if it set to others(1) then
        only ccqmCmtsEnfRuleRegSerClassName and  
        ccqmCmtsEnfRuleEnfSerClassName can be set and if previously
        ccqmCmtsEnfRuleRegQoS and ccqmCmtsEnfRuleEnfQoS were set
        they will be reset to 0."
		characteristics "-N ccqmCmtsEnfRuleDocsVer -O 1.3.6.1.4.1.9.9.341.1.1.1.1.12 -T INTEGER -A RW -X equal -F 0"

		readwrite octet[16]	ccqmCmtsEnfRuleRegSerClassName
		description 	"This object represents a pointer to the object
        describing the quality of service attributes
        associated with the registered service of the
        subscriber. For DOCSIS1.1 and DOCSIS2.0 subscribers it is
        same as docsQosParamSetServiceClassName in 
        docsQosParamSetTable. This object is applicable for
        DOCSIS1.1 and DOCSIS2.0 modems and it can be set only
        when ccqmCmtsEnfRuleDocsVer is set to others(1).
        This object cannot be changed when 
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleRegSerClassName -O 1.3.6.1.4.1.9.9.341.1.1.1.1.13 -T STRING -A RW -X equal -F 0"

		readwrite octet[16]	ccqmCmtsEnfRuleEnfSerClassName
		description 	"This object represents a pointer to the object
        describing the quality of service attributes
        associated with the registered service of the
        subscriber. For DOCSIS1.1 and DOCSIS2.0 subscribers it
        is same as docsQosParamSetServiceClassName in
        docsQosParamSetTable. This object is applicable only for
        DOCSIS1.1 modems and DOCSIS2.0 and it can be set only when
        ccqmCmtsEnfRuleDocsVer is set to others(1).
        This object cannot be changed when
        ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleEnfSerClassName -O 1.3.6.1.4.1.9.9.341.1.1.1.1.14 -T STRING -A RW -X equal -F 0"

		readwrite enum ccqmCmtsEnfRuleMonTypeE	ccqmCmtsEnfRuleMonType
		description 	"This object defines the monitoring type. If it is set
        to basic(1), then ccqmCmtsEnfRuleMonDuration and 
        ccqmCmtsEnfRuleAvgRate are used to define the monitoring
        and if the peak-offpeak objects were set before, they will
        all be reset to 0 and if the user sets this object to
        peakOffPeak(2) the peak-offpeak objects are used to define
        the monitoring and ccqmCmtsEnfRuleMonDuration and 
        ccqmCmtsEnfRuleAvgRate, if set before, will be reset to 0."
		characteristics "-N ccqmCmtsEnfRuleMonType -O 1.3.6.1.4.1.9.9.341.1.1.1.1.15 -T INTEGER -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleFirstPeakTime
		description 	"The user can define two peak times and the
         remaining hours will be treated as offpeak and the 
         monitoring will happen for these offpeak hours if
         ccqmCmtsEnfRuleOffPeakDuration and 
         ccqmCmtsEnfRuleOffPeakAvgRate are defined. The first 
         peak parameters are defined using 
         ccqmCmtsEnfRuleFirstPeakTime, 
         ccqmCmtsEnfRuleFirstDuration and 
         ccqmCmtsEnfRuleFirstAvgRate objects while the second 
         peak parameters can be defined using
         ccqmCmtsEnfRuleSecondPeakTime, 
         ccqmCmtsEnfRuleSecondDuration and 
         ccqmCmtsEnfRuleSecondAvgRate. Each peak time has an
         associated average rate and a duration for which that
         average rate holds good. 
         Defining the first peak is mandatory, though
         defining the second peak and offpeak is not mandatory.
         Both these peak times should be defined such that they 
         don't overlap and the first peak time has to be an earlier
         time than the second peak time.
         User would need to use 24 hour clock for setting this.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleFirstPeakTime -O 1.3.6.1.4.1.9.9.341.1.1.1.1.16 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleFirstDuration
		description 	"This object defines the duration for which the first
         peak time would be applicable. When 
         ccqmCmtsEnfRuleMonDuration is polled during first peak,
         it will return this value. The ccqmCmtsEnfRuleFirstPeakTime
         has to be defined before defining this object else it
         will be taken to start from 0.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleFirstDuration -O 1.3.6.1.4.1.9.9.341.1.1.1.1.17 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleFirstAvgRate
		description 	"This object defines the rate at which the subscriber is 
         allowed to consume during the first peak duration. The
         ccqmCmtsEnfRuleFirstDuration has to be defined before
         defining this value.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleFirstAvgRate -O 1.3.6.1.4.1.9.9.341.1.1.1.1.18 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleSecondPeakTime
		description 	"The user can define two peak times in a day. The second 
         peak is defined using ccqmCmtsEnfRuleSecondPeakTime, 
         ccqmCmtsEnfRuleSecondDuration and 
         ccqmCmtsEnfRuleSecondThreshold objects while the first 
         peak is defined using ccqmCmtsEnfRuleFirstPeakTime, 
         ccqmCmtsEnfRuleFirstDuration and 
         ccqmCmtsEnfRuleFirstDuration. For the remaining hours in 
         the day, the off-peak monitoring would happen if
         both  ccqmCmtsEnfRuleOffPeakDuration and
         ccqmCmtsEnfRuleOffPeakThreshold are defined. 
         Defining the first peak is mandatory, though
         defining the second peak and offpeak is not mandatory.
         Both these peak times should be defined such that they 
         don't overlap and the first peak time has to be an earlier
         time than the second peak time. 
         ccqmCmtsEnfRuleSecondDuration can be set to 0 to 
         indicate that the second peak monitoring no longer
         needs to be performed. The first peak has to be
         defined before defining the second peak time. 
         User would need to use 24 hour clock for setting this.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleSecondPeakTime -O 1.3.6.1.4.1.9.9.341.1.1.1.1.19 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleSecondDuration
		description 	"This object defines the duration for which the second 
         peak time would be applicable. When 
         ccqmCmtsEnfRuleMonDuration is polled during second peak,
         it will return this value. It can be set to 0 to
         indicate that the second peak monitoring no longer needs
         to be performed. The ccqmCmtsEnfRuleSecondPeakTime has 
         to be defined before defining this object. 
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleSecondDuration -O 1.3.6.1.4.1.9.9.341.1.1.1.1.20 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleSecondAvgRate
		description 	"This object defines the rate at which the subscriber is 
         allowed to consume during the second peak duration. The
         ccqmCmtsEnfRuleSecondDuration has to be defined before
         defining this value.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleSecondAvgRate -O 1.3.6.1.4.1.9.9.341.1.1.1.1.21 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleOffPeakDuration
		description 	"This object defines the monitoring-duration that
         would be applicable for the offpeak times of the day.
         The off peak times are the times during the day when 
         none of the first peak and second peak times are defined.
         If this object is set, when ccqmCmtsEnfRuleMonDuration
         is polled during offpeak times, it would return this value.
         Since only defining the first peak is mandatory, and
         defining second peak and off peak are optional the
         monitoring combinations during the day could be:
         1) Only first peak
         2) First peak and second peak
         3) First peak and off peak
         4) All three i.e., first peak, second peak and off peak.
         It can be set to 0 to indicate that the offpeak monitoring
         no longer needs to be performed. The first peak
         parameters have to be defined before defining this object. 
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleOffPeakDuration -O 1.3.6.1.4.1.9.9.341.1.1.1.1.22 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsEnfRuleOffPeakAvgRate
		description 	"This object defines the rate at which the subscriber is 
         allowed to consume during the off-peak duration. The
         ccqmCmtsEnfRuleOffPeakDuration has to be defined before
         defining this value.
         This object cannot be changed when 
         ccqmCmtsEnfRuleRowStatus is active(1)."
		characteristics "-N ccqmCmtsEnfRuleOffPeakAvgRate -O 1.3.6.1.4.1.9.9.341.1.1.1.1.23 -T GAUGE -A RW -X equal -F 0"

	)

	group	ccqmRuleViolateObjects
	description "(null)"
	characteristics "-K NONE"
	(
		readwrite enum ccqmEnfRuleViolateNotifEnableE	ccqmEnfRuleViolateNotifEnable
		description 	"An indication of whether the ccqmEnfRuleViolateNotification
        is enabled or disabled."
		characteristics "-N ccqmEnfRuleViolateNotifEnable -O 1.3.6.1.4.1.9.9.341.1.2.3 -T INTEGER -A RW -X equal -F 0"

	)

	table	ccqmEnfRuleViolateTable
	description "This table contains information of the subscribers 
        who violated their enforce rule over the monitoring 
        duration.
        In the sliding window concept used, the monitoring duration
        is the size of the window. This window slides by an amount
        that is equal to the sample rate. At every sample rate 
        the bytes transmitted in the time equal to a monitoring 
        duration is checked. If this is found to be larger than 
        the defined byte count limit per monitoring duration, the 
        subscriber is flagged as over consuming or to have violated
        his enforce rule. 
        This table has entries for each of these violating 
        subscribers. In case the violating subscriber has
        a enforced QoS parameter set, the QoS parameter set for 
        such subscribers will be changed to the enforced QoS 
        parameter set for the penalty time. When the penalty time
        expires, the subscriber gets his registered QoS parameter
        set restored and will no longer appear in this table but
        will be monitored. "
	characteristics "-K ONE"
	(
		notaccessible gauge	ccqmEnfRuleViolateID
		description 	"An index assigned to the service flow by the CMTS.
        This represents an internal service flow ID."
		characteristics "-N ccqmEnfRuleViolateID -O 1.3.6.1.4.1.9.9.341.1.2.2.1.1 -T GAUGE -A NA -X equal -F 0"

		readonly octet[6]	ccqmEnfRuleViolateMacAddr
		description 	"MAC address of this subscriber. If the subscriber has
        multiple MAC addresses, this is the MAC address associated
        with the Cable interface."
		characteristics "-N ccqmEnfRuleViolateMacAddr -O 1.3.6.1.4.1.9.9.341.1.2.2.1.2 -T STRING -A RO -X equal -F 0"

		readonly octet[15]	ccqmEnfRuleViolateRuleName
		description 	"A pointer to the enforce rule associated with this 
         subscriber. It provides for referencing the enforce rule 
         to determine the QoS monitoring parameters. This is same
         as ccqmCmtsEnfRuleName for the corresponding enforce rule
         in ccqmCmtsEnforceRuleTable."
		characteristics "-N ccqmEnfRuleViolateRuleName -O 1.3.6.1.4.1.9.9.341.1.2.2.1.3 -T STRING -A RO -X equal -F 0"

		readonly gauge	ccqmEnfRuleViolateByteCount
		description 	"The total kbytes consumed by the subscriber in the
        monitoring duration as specified in the corresponding 
        enforce rule object ccqmCmtsEnfRuleMonDuration. If the
        monitoring is restarted due to change in enforce rule
        or any other circumstance this count will be reset."
		characteristics "-N ccqmEnfRuleViolateByteCount -O 1.3.6.1.4.1.9.9.341.1.2.2.1.4 -T GAUGE -A RO -X equal -F 0"

		readonly octet[11]	ccqmEnfRuleViolateLastDetectTime
		description 	"The time at which the subscriber was found to have violated
        his enforce rule and the time from which the enforced QoS
        parameter set, if any, was in effect. "
		characteristics "-N ccqmEnfRuleViolateLastDetectTime -O 1.3.6.1.4.1.9.9.341.1.2.2.1.5 -T STRING -A RO -X equal -F 0"

		readonly octet[11]	ccqmEnfRuleViolatePenaltyExpTime
		description 	"The time when the original QoS parameter set will be 
        restored for this violating subscriber. If there was 
        no enforced QoS parameter set configured for this 
        subscriber this object returns 0."
		characteristics "-N ccqmEnfRuleViolatePenaltyExpTime -O 1.3.6.1.4.1.9.9.341.1.2.2.1.6 -T STRING -A RO -X equal -F 0"

	)

	table	ccqmCmtsIfBwUtilTable
	description "This table contains the attributes which define the 
         bandwidth utilization thresholds for the upstream and 
         downstream interfaces and when the load on these interfaces
         exceeds the upper threshold, the monitoring of the
         associated modems service flows starts, and it stops when
         the interface utilization drops below the lower threshold.
         For the monitoring to start, there should be appropriate
         enforce-rules defined. In case no thresholds are defined,
         by default the monitoring of modems would take place if
         the appropriate enforce-rules are present."
	characteristics "-K ???"
	(
		readwrite gauge	ccqmCmtsIfBwUtilUpThreshold
		description 	"This object defines the upper threshold for the interface
         bandwidth utilization and when interface bandwidth
         utilization exceeds this threshold, monitoring of the 
         appropriate modem's service flow will start if there is an
         asociated enforce-rule present. This object can't be set
         to a value lower than ccqmCmtsIfBwUtilLoThreshold."
		characteristics "-N ccqmCmtsIfBwUtilUpThreshold -O 1.3.6.1.4.1.9.9.341.1.3.1.1.1 -T GAUGE -A RW -X equal -F 0"

		readwrite gauge	ccqmCmtsIfBwUtilLoThreshold
		description 	"This object defines the lower threshold for the interface
         bandwidth utilization and when interface bandwidth
         utilization drops below this threshold, the monitoring of
         the appropriate modem's service flow will stop. This
         object can't be set to a value higher than 
         ccqmCmtsIfBwUtilUpThreshold."
		characteristics "-N ccqmCmtsIfBwUtilLoThreshold -O 1.3.6.1.4.1.9.9.341.1.3.1.1.2 -T GAUGE -A RW -X equal -F 0"

		readwrite enum ccqmCmtsIfBwUtilRowStatusE	ccqmCmtsIfBwUtilRowStatus
		description 	"The object controls and reflects the status of rows in this
         table. create-and-wait is not supported.
         The objects can be changed even when the row status is 
         active(1)."
		characteristics "-N ccqmCmtsIfBwUtilRowStatus -O 1.3.6.1.4.1.9.9.341.1.3.1.1.3 -T INTEGER -A RW -X equal -F 0"

	)

agenterrors (
	1	"cannot dispatch request"
	2	"select(2) failed"
	3	"sendto(2) failed"
	4	"recvfrom(2) failed"
	5	"no response from system"
	6	"response too big"
	7	"missing attribute"
	8	"bad attribute type"
	9	"cannot get sysUpTime"
	10	"sysUpTime type bad"
	11	"unknown SNMP error"
	12	"bad variable value"
	13	"variable is read only"
	14	"general error"
	15	"cannot make request PDU"
	16	"cannot make request varbind list"
	17	"cannot parse response PDU"
	18	"request ID - response ID mismatch"
	19	"string contains non-displayable characters"
	20	"cannot open schema file"
	21	"cannot parse schema file"
	22	"cannot open host file"
	23	"cannot parse host file"
	24	"attribute unavailable for set operations"
             )
)


## End of Agent Definitions
